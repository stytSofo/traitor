87e0
".data.rel.ro" 51060 size: 2670

Main: 95f0
User Main: 94a0

Analyzing function at 94a0
00000000000094A0 sub $0x98,%rsp
00000000000094A7 lea 0x42158,%rsi
00000000000094AE mov %rsi,(%rsp)
00000000000094B2 lea 0x38(%rsp),%rdi
00000000000094B7 mov $3,%edx
00000000000094BC mov %rdx,8(%rsp)
00000000000094C1 call 0x0000000000009610
00000000000094C6 mov (%rsp),%rsi
00000000000094CA mov 8(%rsp),%rdx
00000000000094CF mov 0x48(%rsp),%rax
00000000000094D4 mov %rax,0x20(%rsp)
00000000000094D9 movups 0x38(%rsp),%xmm0
00000000000094DE movaps %xmm0,0x10(%rsp)
00000000000094E3 movl $0x898,0x28(%rsp)
00000000000094EB movl $0x78,0x2C(%rsp)
00000000000094F3 lea 0x70(%rsp),%rdi
00000000000094F8 call 0x0000000000009610
00000000000094FD jmp 0x0000000000009524
00000000000094FF lea 0x10(%rsp),%rdi
0000000000009504 call 0x00000000000096B0
0000000000009509 jmp 0x00000000000095D4
000000000000950E mov %rax,%rcx
0000000000009511 mov %edx,%eax
0000000000009513 mov %rcx,0x88(%rsp)
000000000000951B mov %eax,0x90(%rsp)
0000000000009522 jmp 0x00000000000094FF
0000000000009524 mov 0x80(%rsp),%rax
000000000000952C mov %rax,0x60(%rsp)
0000000000009531 movups 0x70(%rsp),%xmm0
0000000000009536 movaps %xmm0,0x50(%rsp)
000000000000953B movl $0x898,0x68(%rsp)
0000000000009543 movl $0x78,0x6C(%rsp)
000000000000954B lea 0x10(%rsp),%rdi
0000000000009550 call 0x00000000000093D0
0000000000009555 jmp 0x0000000000009579
0000000000009557 lea 0x50(%rsp),%rdi
000000000000955C call 0x00000000000096C0
0000000000009561 jmp 0x00000000000094FF
0000000000009563 mov %rax,%rcx
0000000000009566 mov %edx,%eax
0000000000009568 mov %rcx,0x88(%rsp)
0000000000009570 mov %eax,0x90(%rsp)
0000000000009577 jmp 0x0000000000009557
0000000000009579 lea 0x51150,%rsi
0000000000009580 lea 0x10(%rsp),%rdi
0000000000009585 call 0x0000000000009450
    V-Table Address: 51150
TRAIT OBJECT
000000000000958A jmp 0x000000000000958C
000000000000958C lea 0x50(%rsp),%rdi
0000000000009591 call 0x0000000000009410
0000000000009596 jmp 0x0000000000009598
0000000000009598 lea 0x51180,%rsi
000000000000959F lea 0x50(%rsp),%rdi
00000000000095A4 call 0x0000000000009450
    V-Table Address: 51180
TRAIT OBJECT
00000000000095A9 jmp 0x00000000000095AB
00000000000095AB lea 0x50(%rsp),%rdi
00000000000095B0 call 0x00000000000096C0
00000000000095B5 jmp 0x00000000000095C2
00000000000095B7 lea 0x8310,%rax
00000000000095BE call *%rax
00000000000095C0 ud2
00000000000095C2 lea 0x10(%rsp),%rdi
00000000000095C7 call 0x00000000000096B0
00000000000095CC add $0x98,%rsp
00000000000095D3 ret

 Function call queue at function 94a0: [9610, 96b0, 93d0, 96c0, 9450, 9410]

Analyzing function at 9610
0000000000009610 sub $0x28,%rsp
0000000000009614 mov %rdi,(%rsp)
0000000000009618 mov %rdi,8(%rsp)
000000000000961D lea 0x10(%rsp),%rdi
0000000000009622 call 0x0000000000008E40
0000000000009627 mov (%rsp),%rdi
000000000000962B mov 8(%rsp),%rax
0000000000009630 mov 0x10(%rsp),%rcx
0000000000009635 mov %rcx,(%rdi)
0000000000009638 mov 0x18(%rsp),%rcx
000000000000963D mov %rcx,8(%rdi)
0000000000009641 mov 0x20(%rsp),%rcx
0000000000009646 mov %rcx,0x10(%rdi)
000000000000964A add $0x28,%rsp
000000000000964E ret

 Function call queue at function 9610: [8e40]

Analyzing function at 8e40
0000000000008E40 sub $0x58,%rsp
0000000000008E44 mov %rdx,8(%rsp)
0000000000008E49 mov %rsi,(%rsp)
0000000000008E4D mov %rdi,%rax
0000000000008E50 mov 8(%rsp),%rdi
0000000000008E55 mov %rax,0x10(%rsp)
0000000000008E5A mov %rax,0x18(%rsp)
0000000000008E5F xor %esi,%esi
0000000000008E61 call 0x0000000000008F10
0000000000008E66 mov %rdx,0x20(%rsp)
0000000000008E6B mov %rax,0x28(%rsp)
0000000000008E70 jmp 0x0000000000008E8E
0000000000008E72 xor %eax,%eax
0000000000008E74 test $1,%al
0000000000008E76 jne 0x0000000000008F01
0000000000008E7C jmp 0x0000000000008EF5
0000000000008E7E mov %rax,%rcx
0000000000008E81 mov %edx,%eax
0000000000008E83 mov %rcx,0x48(%rsp)
0000000000008E88 mov %eax,0x50(%rsp)
0000000000008E8C jmp 0x0000000000008E72
0000000000008E8E mov 8(%rsp),%rdx
0000000000008E93 mov (%rsp),%rsi
0000000000008E97 mov 0x20(%rsp),%rax
0000000000008E9C mov 0x28(%rsp),%rcx
0000000000008EA1 mov %rcx,0x30(%rsp)
0000000000008EA6 mov %rax,0x38(%rsp)
0000000000008EAB movq $0,0x40(%rsp)
0000000000008EB4 mov 0x30(%rsp),%rdi
0000000000008EB9 shl $0,%rdx
0000000000008EBD call 0x0000000000006070
0000000000008EC2 mov 8(%rsp),%rdx
0000000000008EC7 mov 0x10(%rsp),%rcx
0000000000008ECC mov 0x18(%rsp),%rax
0000000000008ED1 mov %rdx,0x40(%rsp)
0000000000008ED6 mov 0x30(%rsp),%rdx
0000000000008EDB mov %rdx,(%rcx)
0000000000008EDE mov 0x38(%rsp),%rdx
0000000000008EE3 mov %rdx,8(%rcx)
0000000000008EE7 mov 0x40(%rsp),%rdx
0000000000008EEC mov %rdx,0x10(%rcx)
0000000000008EF0 add $0x58,%rsp
0000000000008EF4 ret

 Function call queue at function 8e40: [8f10, 6070]

Analyzing function at 8f10
0000000000008F10 sub $0xD8,%rsp
0000000000008F17 mov %rdi,0x40(%rsp)
0000000000008F1C mov %sil,%al
0000000000008F1F and $1,%al
0000000000008F21 mov %al,0x4F(%rsp)
0000000000008F25 xor %eax,%eax
0000000000008F27 test $1,%al
0000000000008F29 jne 0x0000000000008F3F
0000000000008F2B mov 0x40(%rsp),%rax
0000000000008F30 cmp $0,%rax
0000000000008F34 sete %al
0000000000008F37 and $1,%al
0000000000008F39 mov %al,0x6F(%rsp)
0000000000008F3D jmp 0x0000000000008F44
0000000000008F3F movb $1,0x6F(%rsp)
0000000000008F44 testb $1,0x6F(%rsp)
0000000000008F49 jne 0x0000000000008F69
0000000000008F4B mov 0x40(%rsp),%rdx
0000000000008F50 mov $1,%esi
0000000000008F55 mov %rsi,%rdi
0000000000008F58 call 0x0000000000008C20
0000000000008F5D mov %rdx,0x30(%rsp)
0000000000008F62 mov %rax,0x38(%rsp)
0000000000008F67 jmp 0x0000000000008FD3
0000000000008F69 mov $1,%eax
0000000000008F6E mov %rax,0xB8(%rsp)
0000000000008F76 mov 0xB8(%rsp),%rax
0000000000008F7E mov %rax,0xB0(%rsp)
0000000000008F86 mov 0xB0(%rsp),%rax
0000000000008F8E mov %rax,0x58(%rsp)
0000000000008F93 movq $0,0x60(%rsp)
0000000000008F9C mov 0x58(%rsp),%rax
0000000000008FA1 mov 0x60(%rsp),%rdx
0000000000008FA6 add $0xD8,%rsp
0000000000008FAD ret
0000000000008FAE mov $1,%al
0000000000008FB0 test $1,%al
0000000000008FB2 jne 0x0000000000009178
0000000000008FB8 jmp 0x0000000000009169
0000000000008FBD mov %rax,%rcx
0000000000008FC0 mov %edx,%eax
0000000000008FC2 mov %rcx,0xC8(%rsp)
0000000000008FCA mov %eax,0xD0(%rsp)
0000000000008FD1 jmp 0x0000000000008FAE
0000000000008FD3 mov 0x30(%rsp),%rax
0000000000008FD8 mov 0x38(%rsp),%rcx
0000000000008FDD mov %rcx,0x70(%rsp)
0000000000008FE2 mov %rax,0x78(%rsp)
0000000000008FE7 xor %eax,%eax
0000000000008FE9 mov $1,%ecx
0000000000008FEE cmpq $0,0x70(%rsp)
0000000000008FF4 cmove %rcx,%rax
0000000000008FF8 cmp $0,%rax
0000000000008FFC jne 0x0000000000009049
0000000000008FFE mov 0x70(%rsp),%rax
0000000000009003 mov %rax,0x20(%rsp)
0000000000009008 mov 0x78(%rsp),%rax
000000000000900D mov %rax,0x28(%rsp)
0000000000009012 movabs $0x8000000000000001,%rax
000000000000901C mov %rax,0x80(%rsp)
0000000000009024 movabs $0x8000000000000001,%rdx
000000000000902E mov $1,%eax
0000000000009033 xor %ecx,%ecx
0000000000009035 cmp %rdx,0x80(%rsp)
000000000000903D cmove %rcx,%rax
0000000000009041 cmp $0,%rax
0000000000009045 je 0x0000000000009056
0000000000009047 jmp 0x0000000000009067
0000000000009049 lea 0x3BC80,%rax
0000000000009050 call *%rax
0000000000009052 jmp 0x0000000000009054
0000000000009054 ud2
0000000000009056 mov 0x4F(%rsp),%al
000000000000905A and $1,%al
000000000000905C movzbl %al,%eax
000000000000905F cmp $0,%rax
0000000000009063 je 0x0000000000009072
0000000000009065 jmp 0x0000000000009092
0000000000009067 lea 0x3BC80,%rax
000000000000906E call *%rax
0000000000009070 jmp 0x0000000000009054
0000000000009072 mov 0x28(%rsp),%rdx
0000000000009077 mov 0x20(%rsp),%rsi
000000000000907C lea 0x50(%rsp),%rdi
0000000000009081 call 0x0000000000008C10
0000000000009086 mov %rdx,0x10(%rsp)
000000000000908B mov %rax,0x18(%rsp)
0000000000009090 jmp 0x00000000000090E9
0000000000009092 mov 0x28(%rsp),%rdx
0000000000009097 mov 0x20(%rsp),%rsi
000000000000909C lea 0x50(%rsp),%rdi
00000000000090A1 call 0x0000000000008C00
00000000000090A6 mov %rdx,(%rsp)
00000000000090AA mov %rax,8(%rsp)
00000000000090AF jmp 0x00000000000090B1
00000000000090B1 mov (%rsp),%rax
00000000000090B5 mov 8(%rsp),%rcx
00000000000090BA mov %rcx,0x90(%rsp)
00000000000090C2 mov %rax,0x98(%rsp)
00000000000090CA mov 0x90(%rsp),%rdx
00000000000090D2 xor %eax,%eax
00000000000090D4 mov $1,%ecx
00000000000090D9 cmp $0,%rdx
00000000000090DD cmove %rcx,%rax
00000000000090E1 cmp $0,%rax
00000000000090E5 je 0x0000000000009105
00000000000090E7 jmp 0x0000000000009151
00000000000090E9 mov 0x10(%rsp),%rax
00000000000090EE mov 0x18(%rsp),%rcx
00000000000090F3 mov %rcx,0x90(%rsp)
00000000000090FB mov %rax,0x98(%rsp)
0000000000009103 jmp 0x00000000000090CA
0000000000009105 mov 0x40(%rsp),%rax
000000000000910A mov 0x90(%rsp),%rcx
0000000000009112 mov %rcx,0xA8(%rsp)
000000000000911A mov 0xA8(%rsp),%rcx
0000000000009122 mov %rcx,0xC0(%rsp)
000000000000912A mov 0xC0(%rsp),%rcx
0000000000009132 mov %rcx,0xA0(%rsp)
000000000000913A mov 0xA0(%rsp),%rcx
0000000000009142 mov %rcx,0x58(%rsp)
0000000000009147 mov %rax,0x60(%rsp)
000000000000914C jmp 0x0000000000008F9C
0000000000009151 mov 0x28(%rsp),%rsi
0000000000009156 mov 0x20(%rsp),%rdi
000000000000915B lea 0x80F0,%rax
0000000000009162 call *%rax
0000000000009164 jmp 0x0000000000009054

 Function call queue at function 8f10: [8c20, 8c10, 8c00]

Analyzing function at 8c20
0000000000008C20 sub $0x58,%rsp
0000000000008C24 mov %rdi,8(%rsp)
0000000000008C29 mov %rsi,0x10(%rsp)
0000000000008C2E mov %rdx,0x18(%rsp)
0000000000008C33 cmp $0,%rdi
0000000000008C37 jne 0x0000000000008C40
0000000000008C39 movb $0,0x37(%rsp)
0000000000008C3E jmp 0x0000000000008CB6
0000000000008C40 mov 8(%rsp),%rax
0000000000008C45 mov 0x10(%rsp),%rcx
0000000000008C4A mov %rcx,0x48(%rsp)
0000000000008C4F mov 0x48(%rsp),%rdx
0000000000008C54 sub $1,%rdx
0000000000008C58 movabs $0x7FFFFFFFFFFFFFFF,%rcx
0000000000008C62 sub %rdx,%rcx
0000000000008C65 mov %rcx,(%rsp)
0000000000008C69 cmp $0,%rax
0000000000008C6D sete %al
0000000000008C70 test $1,%al
0000000000008C72 jne 0x0000000000008C98
0000000000008C74 mov 8(%rsp),%rcx
0000000000008C79 mov (%rsp),%rax
0000000000008C7D xor %edx,%edx
0000000000008C7F div %rcx
0000000000008C82 mov %rax,%rcx
0000000000008C85 mov 0x18(%rsp),%rax
0000000000008C8A cmp %rcx,%rax
0000000000008C8D seta %al
0000000000008C90 and $1,%al
0000000000008C92 mov %al,0x37(%rsp)
0000000000008C96 jmp 0x0000000000008CB6
0000000000008C98 lea 0x42050,%rdi
0000000000008C9F lea 0x51060,%rdx
0000000000008CA6 lea 0x81F0,%rax
0000000000008CAD mov $0x19,%esi
0000000000008CB2 call *%rax
0000000000008CB4 ud2
0000000000008CB6 testb $1,0x37(%rsp)
0000000000008CBB jne 0x0000000000008CFA
0000000000008CBD mov 0x10(%rsp),%rax
0000000000008CC2 mov 0x18(%rsp),%rdx
0000000000008CC7 mov 8(%rsp),%rcx
0000000000008CCC imul %rdx,%rcx
0000000000008CD0 mov %rax,0x50(%rsp)
0000000000008CD5 mov 0x50(%rsp),%rax
0000000000008CDA mov %rcx,0x40(%rsp)
0000000000008CDF mov %rax,0x38(%rsp)
0000000000008CE4 mov 0x38(%rsp),%rcx
0000000000008CE9 mov 0x40(%rsp),%rax
0000000000008CEE mov %rcx,0x20(%rsp)
0000000000008CF3 mov %rax,0x28(%rsp)
0000000000008CF8 jmp 0x0000000000008D03
0000000000008CFA movq $0,0x20(%rsp)
0000000000008D03 mov 0x20(%rsp),%rax
0000000000008D08 mov 0x28(%rsp),%rdx
0000000000008D0D add $0x58,%rsp
0000000000008D11 ret

 Function call queue at function 8c20: []

Analyzing function at 8c10
0000000000008C10 push %rax
0000000000008C11 xor %ecx,%ecx
0000000000008C13 call 0x0000000000008900
