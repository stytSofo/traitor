2ff10
".text" 2e540 size: 2244f4

".data.rel.ro" 301da0 size: d4f0

Main: 44480
User Main: 40c60

Analyzing function at 40c60
0000000000040C60 mov $0x1848,%eax
0000000000040C65 call 0x00000000002528C7
0000000000040C6A sub %rax,%rsp
0000000000040C6D movb $0,0x1824(%rsp)
0000000000040C75 movb $0,0x1826(%rsp)
0000000000040C7D movb $0,0x1825(%rsp)
0000000000040C85 movb $0,0x1827(%rsp)
0000000000040C8D mov $0xD,%edi
0000000000040C92 xor %eax,%eax
0000000000040C94 mov %eax,%esi
0000000000040C96 callq *0x314950
0000000000040C9C mov 0x303580,%rsi
0000000000040CA3 mov 0x303588,%rdx
0000000000040CAA lea 0x178(%rsp),%rdi
0000000000040CB2 call 0x000000000006C280
0000000000040CB7 lea 0x178(%rsp),%rdi
0000000000040CBF call 0x0000000000064BB0
0000000000040CC4 lea 0x1D0(%rsp),%rdi
0000000000040CCC callq *0x3169D0
0000000000040CD2 lea 0x1A8(%rsp),%rdi
0000000000040CDA lea 0x1D0(%rsp),%rsi
0000000000040CE2 mov $1,%edx
0000000000040CE7 call 0x000000000006C520
0000000000040CEC lea 0x190(%rsp),%rdi
0000000000040CF4 lea 0x1A8(%rsp),%rsi
0000000000040CFC call 0x0000000000061360
0000000000040D01 lea 0x1B97E0,%rax
0000000000040D08 lea 0x190(%rsp),%rdi
0000000000040D10 call *%rax
0000000000040D12 mov %rdx,0x168(%rsp)
0000000000040D1A mov %rax,0x170(%rsp)
0000000000040D22 jmp 0x0000000000040D50
0000000000040D24 lea 0x1C9930,%rax
0000000000040D2B lea 0x190(%rsp),%rdi
0000000000040D33 call *%rax
0000000000040D35 jmp 0x0000000000040DFB
0000000000040D3A mov %rax,%rcx
0000000000040D3D mov %edx,%eax
0000000000040D3F mov %rcx,0x1828(%rsp)
0000000000040D47 mov %eax,0x1830(%rsp)
0000000000040D4E jmp 0x0000000000040D24
0000000000040D50 mov 0x168(%rsp),%rsi
0000000000040D58 mov 0x170(%rsp),%rdi
0000000000040D60 lea 0x1C25D0,%rax
0000000000040D67 call *%rax
0000000000040D69 mov %rdx,0x158(%rsp)
0000000000040D71 mov %rax,0x160(%rsp)
0000000000040D79 jmp 0x0000000000040D7B
0000000000040D7B mov 0x158(%rsp),%rsi
0000000000040D83 mov 0x160(%rsp),%rdi
0000000000040D8B call 0x0000000000050EC0
0000000000040D90 mov %rdx,0x148(%rsp)
0000000000040D98 mov %rax,0x150(%rsp)
0000000000040DA0 jmp 0x0000000000040DA2
0000000000040DA2 mov 0x148(%rsp),%rdx
0000000000040DAA mov 0x150(%rsp),%rsi
0000000000040DB2 lea 0x253798,%rcx
0000000000040DB9 lea 0x1F0(%rsp),%rdi
0000000000040DC1 call 0x000000000004E490
0000000000040DC6 jmp 0x0000000000040DC8
0000000000040DC8 mov 0x1F0(%rsp),%rax
0000000000040DD0 mov %rax,0x140(%rsp)
0000000000040DD8 mov 0x140(%rsp),%rax
0000000000040DE0 lea 0x253774,%rcx
0000000000040DE7 movslq (%rcx,%rax,4),%rax
0000000000040DEB add %rcx,%rax
0000000000040DEE jmp *%rax

 Function call queue at function 40c60: [6c280, 64bb0, 6c520, 61360, 50ec0, 4e490]

Analyzing function at 6c280
000000000006C280 sub $0x48,%rsp
000000000006C284 mov %rdi,8(%rsp)
000000000006C289 mov %rdi,0x10(%rsp)
000000000006C28E mov %rsi,0x28(%rsp)
000000000006C293 mov %rdx,0x30(%rsp)
000000000006C298 lea 0x1B3FC0,%rax
000000000006C29F lea 0x28(%rsp),%rdi
000000000006C2A4 call *%rax
000000000006C2A6 mov %rdx,0x18(%rsp)
000000000006C2AB mov %rax,0x20(%rsp)
000000000006C2B0 jmp 0x000000000006C2C4
000000000006C2B2 jmp 0x000000000006C2E0
000000000006C2B4 mov %rax,%rcx
000000000006C2B7 mov %edx,%eax
000000000006C2B9 mov %rcx,0x38(%rsp)
000000000006C2BE mov %eax,0x40(%rsp)
000000000006C2C2 jmp 0x000000000006C2B2
000000000006C2C4 mov 0x18(%rsp),%rdx
000000000006C2C9 mov 0x20(%rsp),%rsi
000000000006C2CE mov 8(%rsp),%rdi
000000000006C2D3 lea 0x226340,%rax
000000000006C2DA call *%rax
000000000006C2DC jmp 0x000000000006C2DE
000000000006C2DE jmp 0x000000000006C2EC
000000000006C2E0 mov 0x38(%rsp),%rdi
000000000006C2E5 call 0x000000000002E3D0
000000000006C2EA ud2
000000000006C2EC mov 0x10(%rsp),%rax
000000000006C2F1 add $0x48,%rsp
000000000006C2F5 ret

 Function call queue at function 6c280: []

Analyzing function at 64bb0
0000000000064BB0 sub $0xE8,%rsp
0000000000064BB7 mov %rdi,0x28(%rsp)
0000000000064BBC mov (%rdi),%rax
0000000000064BBF test %rax,%rax
0000000000064BC2 setne %al
0000000000064BC5 movzbl %al,%eax
0000000000064BC8 je 0x0000000000064BD0
0000000000064BCA jmp 0x0000000000064BCC
0000000000064BCC jmp 0x0000000000064BD5
0000000000064BCE ud2
0000000000064BD0 jmp 0x0000000000064DAA
0000000000064BD5 mov 0x28(%rsp),%rax
0000000000064BDA mov 0x10(%rax),%rcx
0000000000064BDE mov %rcx,0x60(%rsp)
0000000000064BE3 movups (%rax),%xmm0
0000000000064BE6 movaps %xmm0,0x50(%rsp)
0000000000064BEB mov 0x60(%rsp),%rax
0000000000064BF0 mov %rax,0x40(%rsp)
0000000000064BF5 movaps 0x50(%rsp),%xmm0
0000000000064BFA movaps %xmm0,0x30(%rsp)
0000000000064BFF lea 0x30(%rsp),%rdi
0000000000064C04 call 0x0000000000089220
0000000000064C09 mov %rdx,0x18(%rsp)
0000000000064C0E mov %rax,0x20(%rsp)
0000000000064C13 jmp 0x0000000000064C3E
0000000000064C15 lea 0xC6200,%rax
0000000000064C1C lea 0x30(%rsp),%rdi
0000000000064C21 call *%rax
0000000000064C23 jmp 0x0000000000064D99
0000000000064C28 mov %rax,%rcx
0000000000064C2B mov %edx,%eax
0000000000064C2D mov %rcx,0xD8(%rsp)
0000000000064C35 mov %eax,0xE0(%rsp)
0000000000064C3C jmp 0x0000000000064C15
0000000000064C3E mov 0x18(%rsp),%rax
0000000000064C43 mov 0x20(%rsp),%rcx
0000000000064C48 mov %rcx,0x68(%rsp)
0000000000064C4D mov %rax,0x70(%rsp)
0000000000064C52 mov 0x68(%rsp),%rdi
0000000000064C57 mov 0x70(%rsp),%rsi
0000000000064C5C call 0x0000000000088EB0
0000000000064C61 mov %al,0x17(%rsp)
0000000000064C65 jmp 0x0000000000064C67
0000000000064C67 mov 0x17(%rsp),%al
0000000000064C6B test $1,%al
0000000000064C6D jne 0x0000000000064C88
0000000000064C6F jmp 0x0000000000064C71
0000000000064C71 lea 0x3037D8,%rsi
0000000000064C78 lea 0x68(%rsp),%rdi
0000000000064C7D call 0x0000000000032210
0000000000064C82 mov %al,0x16(%rsp)
0000000000064C86 jmp 0x0000000000064C98
0000000000064C88 lea 0x30(%rsp),%rdi
0000000000064C8D callq *0x315E60
0000000000064C93 jmp 0x0000000000064BD0
0000000000064C98 mov 0x16(%rsp),%al
0000000000064C9C test $1,%al
0000000000064C9E jne 0x0000000000064CBD
0000000000064CA0 jmp 0x0000000000064CA2
0000000000064CA2 movq $4,0x80(%rsp)
0000000000064CAE mov 0x80(%rsp),%rdi
0000000000064CB6 call 0x00000000000626D0
0000000000064CBB jmp 0x0000000000064CF1
0000000000064CBD movq $5,0x78(%rsp)
0000000000064CC6 mov 0x78(%rsp),%rdi
0000000000064CCB call 0x00000000000626D0
0000000000064CD0 jmp 0x0000000000064CD2
0000000000064CD2 jmp 0x0000000000064CD4
0000000000064CD4 lea 0x2552B1,%rdi
0000000000064CDB lea 0x303800,%rsi
0000000000064CE2 lea 0x20B990,%rax
0000000000064CE9 call *%rax
0000000000064CEB mov %al,0x15(%rsp)
0000000000064CEF jmp 0x0000000000064CF3
0000000000064CF1 jmp 0x0000000000064CD4
0000000000064CF3 mov 0x15(%rsp),%al
0000000000064CF7 and $1,%al
0000000000064CF9 mov %al,0x8F(%rsp)
0000000000064D00 mov 0x8F(%rsp),%al
0000000000064D07 and $1,%al
0000000000064D09 movzbl %al,%eax
0000000000064D0C cmp $1,%rax
0000000000064D10 jne 0x0000000000064D2A
0000000000064D12 lea 0x90(%rsp),%rdi
0000000000064D1A call 0x00000000000A6760
0000000000064D1F mov %rdx,(%rsp)
0000000000064D23 mov %rax,8(%rsp)
0000000000064D28 jmp 0x0000000000064D37
0000000000064D2A lea 0x30(%rsp),%rdi
0000000000064D2F callq *0x315E60
0000000000064D35 jmp 0x0000000000064DA8
0000000000064D37 mov (%rsp),%rax
0000000000064D3B mov 8(%rsp),%rcx
0000000000064D40 mov %rcx,0xC8(%rsp)
0000000000064D48 mov %rax,0xD0(%rsp)
0000000000064D50 lea 0x303838,%rsi
0000000000064D57 lea 0x98(%rsp),%rdi
0000000000064D5F mov $2,%edx
0000000000064D64 lea 0xC8(%rsp),%rcx
0000000000064D6C mov $1,%r8d
0000000000064D72 call 0x00000000000B3DB0
0000000000064D77 jmp 0x0000000000064D79
0000000000064D79 lea 0x228A80,%rax
0000000000064D80 lea 0x98(%rsp),%rdi
0000000000064D88 call *%rax
0000000000064D8A jmp 0x0000000000064D8C
0000000000064D8C jmp 0x0000000000064D2A
0000000000064D8E lea 0x2FBE0,%rax
0000000000064D95 call *%rax
0000000000064D97 ud2
0000000000064D99 mov 0xD8(%rsp),%rdi
0000000000064DA1 call 0x000000000002E3D0
0000000000064DA6 ud2
0000000000064DA8 jmp 0x0000000000064DAA
0000000000064DAA add $0xE8,%rsp
0000000000064DB1 ret

 Function call queue at function 64bb0: [89220, 88eb0, 32210, 626d0, a6760, b3db0]

Analyzing function at 89220
0000000000089220 sub $0x18,%rsp
0000000000089224 call 0x0000000000089060
0000000000089229 mov %rax,8(%rsp)
000000000008922E mov %rdx,0x10(%rsp)
0000000000089233 mov 0x10(%rsp),%rdx
0000000000089238 mov 8(%rsp),%rax
000000000008923D add $0x18,%rsp
0000000000089241 ret

 Function call queue at function 89220: []

Analyzing function at 88eb0
0000000000088EB0 push %rax
0000000000088EB1 callq *0x3123A0
0000000000088EB7 mov %al,7(%rsp)
0000000000088EBB mov 7(%rsp),%al
0000000000088EBF and $1,%al
0000000000088EC1 movzbl %al,%eax
0000000000088EC4 pop %rcx
0000000000088EC5 ret

 Function call queue at function 88eb0: []

Analyzing function at 32210
0000000000032210 push %rax
0000000000032211 mov %rsi,%rax
0000000000032214 mov %rdi,%rcx
0000000000032217 mov (%rcx),%rdi
000000000003221A mov 8(%rcx),%rsi
000000000003221E mov (%rax),%rdx
0000000000032221 mov 8(%rax),%rcx
0000000000032225 call 0x0000000000089090
000000000003222A mov %al,7(%rsp)
000000000003222E mov 7(%rsp),%al
0000000000032232 and $1,%al
0000000000032234 movzbl %al,%eax
0000000000032237 pop %rcx
0000000000032238 ret

 Function call queue at function 32210: [89090]

Analyzing function at 89090
0000000000089090 sub $0x38,%rsp
0000000000089094 mov %rcx,8(%rsp)
0000000000089099 mov %rdx,0x10(%rsp)
000000000008909E mov %rsi,%rax
00000000000890A1 mov 8(%rsp),%rsi
00000000000890A6 mov %rdi,%rcx
00000000000890A9 mov 0x10(%rsp),%rdi
00000000000890AE mov %rcx,0x18(%rsp)
00000000000890B3 mov %rax,0x20(%rsp)
00000000000890B8 call 0x0000000000032180
00000000000890BD mov %rax,0x28(%rsp)
00000000000890C2 mov %rdx,0x30(%rsp)
00000000000890C7 mov 0x30(%rsp),%rcx
00000000000890CC mov 0x28(%rsp),%rdx
00000000000890D1 mov 0x20(%rsp),%rsi
00000000000890D6 mov 0x18(%rsp),%rdi
00000000000890DB call 0x0000000000088FB0
00000000000890E0 mov %al,7(%rsp)
00000000000890E4 mov 7(%rsp),%al
00000000000890E8 and $1,%al
00000000000890EA movzbl %al,%eax
00000000000890ED add $0x38,%rsp
00000000000890F1 ret

 Function call queue at function 89090: [32180, 88fb0]

Analyzing function at 32180
0000000000032180 sub $0x18,%rsp
0000000000032184 call 0x0000000000088F20
0000000000032189 mov %rax,8(%rsp)
000000000003218E mov %rdx,0x10(%rsp)
0000000000032193 mov 0x10(%rsp),%rdx
0000000000032198 mov 8(%rsp),%rax
000000000003219D add $0x18,%rsp
00000000000321A1 ret

 Function call queue at function 32180: []

Analyzing function at 88fb0
0000000000088FB0 sub $0x38,%rsp
0000000000088FB4 mov %rdx,0x18(%rsp)
0000000000088FB9 mov %rcx,0x20(%rsp)
0000000000088FBE call 0x0000000000088E70
0000000000088FC3 mov %rax,0x28(%rsp)
0000000000088FC8 mov %rdx,0x30(%rsp)
0000000000088FCD mov 0x20(%rsp),%rsi
0000000000088FD2 mov 0x18(%rsp),%rdi
0000000000088FD7 call 0x0000000000088E70
0000000000088FDC mov %rax,8(%rsp)
0000000000088FE1 mov %rdx,0x10(%rsp)
0000000000088FE6 mov 0x10(%rsp),%rcx
0000000000088FEB mov 8(%rsp),%rdx
0000000000088FF0 mov 0x30(%rsp),%rsi
0000000000088FF5 mov 0x28(%rsp),%rdi
0000000000088FFA callq *0x316768
0000000000089000 mov %al,7(%rsp)
0000000000089004 mov 7(%rsp),%al
0000000000089008 and $1,%al
000000000008900A movzbl %al,%eax
000000000008900D add $0x38,%rsp
0000000000089011 ret

 Function call queue at function 88fb0: [88e70]

Analyzing function at 88e70
0000000000088E70 mov %rsi,%rdx
0000000000088E73 mov %rdi,%rax
0000000000088E76 ret

 Function call queue at function 88e70: []

Analyzing function at 626d0
00000000000626D0 push %rax
00000000000626D1 mov %rdi,%rsi
00000000000626D4 movb $4,7(%rsp)
00000000000626D9 lea 0x31C348,%rdi
00000000000626E0 movzbl 7(%rsp),%edx
00000000000626E5 call 0x000000000008B9F0
00000000000626EA pop %rax
00000000000626EB ret

 Function call queue at function 626d0: [8b9f0]

Analyzing function at 8b9f0
000000000008B9F0 sub $0x18,%rsp
000000000008B9F4 mov %rsi,(%rsp)
000000000008B9F8 mov %dl,%al
000000000008B9FA mov %al,0xF(%rsp)
000000000008B9FE mov %rdi,0x10(%rsp)
000000000008BA03 mov 0xF(%rsp),%al
000000000008BA07 mov (%rsp),%rsi
000000000008BA0B mov 0x10(%rsp),%rdi
000000000008BA10 movzbl %al,%edx
000000000008BA13 callq *0x312D30
000000000008BA19 add $0x18,%rsp
000000000008BA1D ret

 Function call queue at function 8b9f0: []

Analyzing function at a6760
00000000000A6760 sub $0x18,%rsp
00000000000A6764 lea 0x20BB60,%rsi
00000000000A676B call 0x00000000000A6C90
00000000000A6770 mov %rax,8(%rsp)
00000000000A6775 mov %rdx,0x10(%rsp)
00000000000A677A mov 0x10(%rsp),%rdx
00000000000A677F mov 8(%rsp),%rax
00000000000A6784 add $0x18,%rsp
00000000000A6788 ret

 Function call queue at function a6760: []

Analyzing function at b3db0
00000000000B3DB0 sub $0x78,%rsp
00000000000B3DB4 mov %r8,(%rsp)
00000000000B3DB8 mov %rcx,8(%rsp)
00000000000B3DBD mov %rdx,0x10(%rsp)
00000000000B3DC2 mov %rsi,0x18(%rsp)
00000000000B3DC7 mov %rdi,0x20(%rsp)
00000000000B3DCC mov %rdi,0x28(%rsp)
00000000000B3DD1 cmp %r8,%rdx
00000000000B3DD4 jb 0x00000000000B3DF1
00000000000B3DD6 mov 0x10(%rsp),%rax
00000000000B3DDB mov (%rsp),%rcx
00000000000B3DDF add $1,%rcx
00000000000B3DE3 cmp %rcx,%rax
00000000000B3DE6 seta %al
00000000000B3DE9 and $1,%al
00000000000B3DEB mov %al,0x37(%rsp)
00000000000B3DEF jmp 0x00000000000B3DF6
00000000000B3DF1 movb $1,0x37(%rsp)
00000000000B3DF6 testb $1,0x37(%rsp)
00000000000B3DFB jne 0x00000000000B3E49
00000000000B3DFD mov 0x28(%rsp),%rax
00000000000B3E02 mov 0x20(%rsp),%rcx
00000000000B3E07 mov (%rsp),%rdx
00000000000B3E0B mov 8(%rsp),%rsi
00000000000B3E10 mov 0x10(%rsp),%rdi
00000000000B3E15 mov 0x18(%rsp),%r8
00000000000B3E1A movq $0,0x68(%rsp)
00000000000B3E23 mov %r8,(%rcx)
00000000000B3E26 mov %rdi,8(%rcx)
00000000000B3E2A mov 0x68(%rsp),%r8
00000000000B3E2F mov 0x70(%rsp),%rdi
00000000000B3E34 mov %r8,0x10(%rcx)
00000000000B3E38 mov %rdi,0x18(%rcx)
00000000000B3E3C mov %rsi,0x20(%rcx)
00000000000B3E40 mov %rdx,0x28(%rcx)
00000000000B3E44 add $0x78,%rsp
00000000000B3E48 ret
00000000000B3E49 lea 0x38(%rsp),%rdi
00000000000B3E4E lea 0x306970,%rsi
00000000000B3E55 mov $1,%edx
00000000000B3E5A lea 0x257CB0,%rcx
00000000000B3E61 xor %eax,%eax
00000000000B3E63 mov %eax,%r8d
00000000000B3E66 call 0x00000000000B3DB0
00000000000B3E6B lea 0x306980,%rsi
00000000000B3E72 lea 0x2FC60,%rax
00000000000B3E79 lea 0x38(%rsp),%rdi
00000000000B3E7E call *%rax
00000000000B3E80 ud2

 Function call queue at function b3db0: []

Analyzing function at 6c520
000000000006C520 sub $0x28,%rsp
000000000006C524 mov %rdi,%rax
000000000006C527 mov %rax,(%rsp)
000000000006C52B mov (%rsi),%rax
000000000006C52E mov %rax,8(%rsp)
000000000006C533 mov 8(%rsi),%rax
000000000006C537 mov %rax,0x10(%rsp)
000000000006C53C mov 0x10(%rsi),%rax
000000000006C540 mov %rax,0x18(%rsp)
000000000006C545 mov 0x18(%rsi),%rax
000000000006C549 mov %rax,0x20(%rsp)
000000000006C54E lea 8(%rsp),%rsi
000000000006C553 call 0x00000000000613F0
000000000006C558 mov (%rsp),%rax
000000000006C55C add $0x28,%rsp
000000000006C560 ret

 Function call queue at function 6c520: [613f0]

Analyzing function at 613f0
00000000000613F0 sub $0x20,%rsp
00000000000613F4 mov %rdi,%rax
00000000000613F7 mov (%rsi),%rcx
00000000000613FA mov %rcx,(%rsp)
00000000000613FE mov 8(%rsi),%rcx
0000000000061402 mov %rcx,8(%rsp)
0000000000061407 mov 0x10(%rsi),%rcx
000000000006140B mov %rcx,0x10(%rsp)
0000000000061410 mov 0x18(%rsi),%rcx
0000000000061414 mov %rcx,0x18(%rsp)
0000000000061419 mov (%rsp),%rcx
000000000006141D mov %rcx,(%rdi)
0000000000061420 mov 8(%rsp),%rcx
0000000000061425 mov %rcx,8(%rdi)
0000000000061429 mov 0x10(%rsp),%rcx
000000000006142E mov %rcx,0x10(%rdi)
0000000000061432 mov 0x18(%rsp),%rcx
0000000000061437 mov %rcx,0x18(%rdi)
000000000006143B mov %rdx,0x20(%rdi)
000000000006143F add $0x20,%rsp
0000000000061443 ret

 Function call queue at function 613f0: []

Analyzing function at 61360
0000000000061360 sub $0x38,%rsp
0000000000061364 mov %rdi,8(%rsp)
0000000000061369 mov %rdi,(%rsp)
000000000006136D lea 0x10(%rsp),%rdi
0000000000061372 mov $0x28,%edx
0000000000061377 call 0x000000000002E4B8
000000000006137C mov 8(%rsp),%rdi
0000000000061381 lea 0x10(%rsp),%rsi
0000000000061386 call 0x0000000000097FD0
000000000006138B mov (%rsp),%rax
000000000006138F add $0x38,%rsp
0000000000061393 ret

 Function call queue at function 61360: [2e4b8, 97fd0]

Analyzing function at 2e4b8
000000000002E4B8 jmpq *0x312F50

 Function call queue at function 2e4b8: []

Analyzing function at 97fd0
0000000000097FD0 sub $0x68,%rsp
0000000000097FD4 mov %rdi,8(%rsp)
0000000000097FD9 mov %rdi,0x10(%rsp)
0000000000097FDE lea 0x40(%rsp),%rdi
0000000000097FE3 mov $0x28,%edx
0000000000097FE8 call 0x000000000002E4B8
0000000000097FED lea 0x18(%rsp),%rdi
0000000000097FF2 lea 0x40(%rsp),%rsi
0000000000097FF7 call 0x0000000000061450
0000000000097FFC mov 8(%rsp),%rdi
0000000000098001 lea 0x18(%rsp),%rsi
0000000000098006 call 0x00000000000992E0
000000000009800B mov 0x10(%rsp),%rax
0000000000098010 add $0x68,%rsp
0000000000098014 ret

 Function call queue at function 97fd0: [61450, 992e0]

Analyzing function at 61450
0000000000061450 push %rax
0000000000061451 mov %rdi,%rax
0000000000061454 mov %rax,(%rsp)
0000000000061458 mov $0x28,%edx
000000000006145D call 0x000000000002E4B8
0000000000061462 mov (%rsp),%rax
0000000000061466 pop %rcx
0000000000061467 ret

 Function call queue at function 61450: []

Analyzing function at 992e0
00000000000992E0 sub $0x38,%rsp
00000000000992E4 mov %rdi,8(%rsp)
00000000000992E9 mov %rdi,(%rsp)
00000000000992ED lea 0x10(%rsp),%rdi
00000000000992F2 mov $0x28,%edx
00000000000992F7 call 0x000000000002E4B8
00000000000992FC mov 8(%rsp),%rdi
0000000000099301 lea 0x10(%rsp),%rsi
0000000000099306 call 0x000000000008F350
000000000009930B mov (%rsp),%rax
000000000009930F add $0x38,%rsp
0000000000099313 ret

 Function call queue at function 992e0: [8f350]

Analyzing function at 8f350
000000000008F350 sub $0x118,%rsp
000000000008F357 mov %rsi,0x18(%rsp)
000000000008F35C mov %rdi,0x20(%rsp)
000000000008F361 mov %rdi,0x28(%rsp)
000000000008F366 movb $1,0xFF(%rsp)
000000000008F36E lea 0x48(%rsp),%rdi
000000000008F373 call 0x00000000000611F0
000000000008F378 jmp 0x000000000008F3A3
000000000008F37A testb $1,0xFF(%rsp)
000000000008F382 jne 0x000000000008F5FA
000000000008F388 jmp 0x000000000008F5EB
000000000008F38D mov %rax,%rcx
000000000008F390 mov %edx,%eax
000000000008F392 mov %rcx,0x100(%rsp)
000000000008F39A mov %eax,0x108(%rsp)
000000000008F3A1 jmp 0x000000000008F37A
000000000008F3A3 mov 0x48(%rsp),%rax
000000000008F3A8 test %rax,%rax
000000000008F3AB setne %al
000000000008F3AE movzbl %al,%eax
000000000008F3B1 je 0x000000000008F3B9
000000000008F3B3 jmp 0x000000000008F3B5
000000000008F3B5 jmp 0x000000000008F3CC
000000000008F3B7 ud2
000000000008F3B9 mov 0x20(%rsp),%rdi
000000000008F3BE lea 0x1B9000,%rax
000000000008F3C5 call *%rax
000000000008F3C7 jmp 0x000000000008F5DF
000000000008F3CC mov 0x18(%rsp),%rsi
000000000008F3D1 movb $1,0xFE(%rsp)
000000000008F3D9 mov 0x58(%rsp),%rax
000000000008F3DE mov %rax,0x70(%rsp)
000000000008F3E3 movups 0x48(%rsp),%xmm0
000000000008F3E8 movaps %xmm0,0x60(%rsp)
000000000008F3ED lea 0x80(%rsp),%rdi
000000000008F3F5 call 0x0000000000061280
000000000008F3FA jmp 0x000000000008F425
000000000008F3FC testb $1,0xFE(%rsp)
000000000008F404 jne 0x000000000008F577
000000000008F40A jmp 0x000000000008F37A
000000000008F40F mov %rax,%rcx
000000000008F412 mov %edx,%eax
000000000008F414 mov %rcx,0x100(%rsp)
000000000008F41C mov %eax,0x108(%rsp)
000000000008F423 jmp 0x000000000008F3FC
000000000008F425 mov 0x80(%rsp),%rax
000000000008F42D inc %rax
000000000008F430 mov $0xFFFFFFFFFFFFFFFF,%rcx
000000000008F437 cmove %rcx,%rax
000000000008F43B mov %rax,0x110(%rsp)
000000000008F443 mov 0x110(%rsp),%rax
000000000008F44B mov %rax,0x10(%rsp)
000000000008F450 mov 0x10(%rsp),%rsi
000000000008F455 lea 0xEFD80,%rax
000000000008F45C mov $4,%edi
000000000008F461 call *%rax
000000000008F463 mov %rax,8(%rsp)
000000000008F468 jmp 0x000000000008F46A
000000000008F46A mov 8(%rsp),%rsi
000000000008F46F lea 0x98(%rsp),%rdi
000000000008F477 call 0x00000000000911A0
000000000008F47C jmp 0x000000000008F47E
000000000008F47E lea 0x1B9030,%rax
000000000008F485 lea 0x98(%rsp),%rdi
000000000008F48D call *%rax
000000000008F48F mov %rax,(%rsp)
000000000008F493 jmp 0x000000000008F4C1
000000000008F495 lea 0x1C9930,%rax
000000000008F49C lea 0x98(%rsp),%rdi
000000000008F4A4 call *%rax
000000000008F4A6 jmp 0x000000000008F3FC
000000000008F4AB mov %rax,%rcx
000000000008F4AE mov %edx,%eax
000000000008F4B0 mov %rcx,0x100(%rsp)
000000000008F4B8 mov %eax,0x108(%rsp)
000000000008F4BF jmp 0x000000000008F495
000000000008F4C1 mov (%rsp),%rdi
000000000008F4C5 movb $0,0xFE(%rsp)
000000000008F4CD mov 0x70(%rsp),%rax
000000000008F4D2 mov %rax,0xC0(%rsp)
000000000008F4DA movaps 0x60(%rsp),%xmm0
000000000008F4DF movaps %xmm0,0xB0(%rsp)
000000000008F4E7 lea 0x1BA5E0,%rax
000000000008F4EE lea 0xB0(%rsp),%rsi
000000000008F4F6 call *%rax
000000000008F4F8 jmp 0x000000000008F4FA
000000000008F4FA lea 0x98(%rsp),%rdi
000000000008F502 mov $1,%esi
000000000008F507 call 0x00000000000957D0
000000000008F50C jmp 0x000000000008F50E
000000000008F50E mov 0x18(%rsp),%rax
000000000008F513 mov 0xA8(%rsp),%rcx
000000000008F51B mov %rcx,0x40(%rsp)
000000000008F520 movups 0x98(%rsp),%xmm0
000000000008F528 movaps %xmm0,0x30(%rsp)
000000000008F52D movb $0,0xFF(%rsp)
000000000008F535 mov 0x20(%rax),%rcx
000000000008F539 mov %rcx,0xF0(%rsp)
000000000008F541 movups (%rax),%xmm0
000000000008F544 movups 0x10(%rax),%xmm1
000000000008F548 movaps %xmm1,0xE0(%rsp)
000000000008F550 movaps %xmm0,0xD0(%rsp)
000000000008F558 lea 0x30(%rsp),%rdi
000000000008F55D lea 0xD0(%rsp),%rsi
000000000008F565 call 0x0000000000098630
000000000008F56A jmp 0x000000000008F5B3
000000000008F56C lea 0x2FBE0,%rax
000000000008F573 call *%rax
000000000008F575 ud2
000000000008F577 lea 0xC6200,%rax
000000000008F57E lea 0x60(%rsp),%rdi
000000000008F583 call *%rax
000000000008F585 jmp 0x000000000008F37A
000000000008F58A lea 0x1C9930,%rax
000000000008F591 lea 0x30(%rsp),%rdi
000000000008F596 call *%rax
000000000008F598 jmp 0x000000000008F37A
000000000008F59D mov %rax,%rcx
000000000008F5A0 mov %edx,%eax
000000000008F5A2 mov %rcx,0x100(%rsp)
000000000008F5AA mov %eax,0x108(%rsp)
000000000008F5B1 jmp 0x000000000008F58A
000000000008F5B3 mov 0x20(%rsp),%rax
000000000008F5B8 mov 0x30(%rsp),%rcx
000000000008F5BD mov %rcx,(%rax)
000000000008F5C0 mov 0x38(%rsp),%rcx
000000000008F5C5 mov %rcx,8(%rax)
000000000008F5C9 mov 0x40(%rsp),%rcx
000000000008F5CE mov %rcx,0x10(%rax)
000000000008F5D2 mov 0x28(%rsp),%rax
000000000008F5D7 add $0x118,%rsp
000000000008F5DE ret
000000000008F5DF mov 0x18(%rsp),%rdi
000000000008F5E4 call 0x000000000009E0A0
000000000008F5E9 jmp 0x000000000008F5D2

 Function call queue at function 8f350: [611f0, 61280, 911a0, 957d0, 98630, 9e0a0]

Analyzing function at 611f0
00000000000611F0 sub $0x58,%rsp
00000000000611F4 mov %rsi,0x18(%rsp)
00000000000611F9 mov %rdi,0x20(%rsp)
00000000000611FE mov %rdi,0x28(%rsp)
0000000000061203 cmpq $0,0x20(%rsi)
0000000000061208 seta %al
000000000006120B and $1,%al
000000000006120D mov %al,0x57(%rsp)
0000000000061211 mov 0x57(%rsp),%al
0000000000061215 mov %al,0x37(%rsp)
0000000000061219 mov 0x37(%rsp),%al
000000000006121D test $1,%al
000000000006121F jne 0x0000000000061235
0000000000061221 jmp 0x0000000000061223
0000000000061223 mov 0x20(%rsp),%rdi
0000000000061228 mov 0x18(%rsp),%rsi
000000000006122D callq *0x3144B0
0000000000061233 jmp 0x0000000000061276
0000000000061235 mov 0x18(%rsp),%rdi
000000000006123A mov %rdi,%rax
000000000006123D mov %rax,8(%rsp)
0000000000061242 add $0x20,%rdi
0000000000061246 callq *0x311430
000000000006124C mov %rax,0x10(%rsp)
0000000000061251 mov 8(%rsp),%rsi
0000000000061256 mov 0x10(%rsp),%rdx
000000000006125B sub $1,%rdx
000000000006125F lea 0x38(%rsp),%rdi
0000000000061264 call 0x000000000006C480
0000000000061269 lea 0x38(%rsp),%rdi
000000000006126E callq *0x3150B0
0000000000061274 jmp 0x0000000000061223
0000000000061276 mov 0x28(%rsp),%rax
000000000006127B add $0x58,%rsp
000000000006127F ret

 Function call queue at function 611f0: [6c480]

Analyzing function at 6c480
000000000006C480 sub $0x48,%rsp
000000000006C484 mov %rdx,0x10(%rsp)
000000000006C489 mov %rsi,%rax
000000000006C48C mov 0x10(%rsp),%rsi
000000000006C491 mov %rax,0x18(%rsp)
000000000006C496 mov %rdi,%rax
000000000006C499 mov 0x18(%rsp),%rdi
000000000006C49E mov %rax,0x20(%rsp)
000000000006C4A3 mov %rax,0x28(%rsp)
000000000006C4A8 call 0x000000000006C300
000000000006C4AD mov %rax,0x30(%rsp)
000000000006C4B2 mov %rdx,0x38(%rsp)
000000000006C4B7 mov 0x38(%rsp),%rsi
000000000006C4BC mov 0x30(%rsp),%rdi
000000000006C4C1 callq *0x310B10
000000000006C4C7 mov %al,0xF(%rsp)
000000000006C4CB mov 0xF(%rsp),%al
000000000006C4CF movzbl %al,%edi
000000000006C4D2 and $1,%edi
000000000006C4D5 lea 0xC2700,%rax
000000000006C4DC call *%rax
000000000006C4DE and $1,%al
000000000006C4E0 mov %al,0x47(%rsp)
000000000006C4E4 movzbl 0x47(%rsp),%eax
000000000006C4E9 test $1,%al
000000000006C4EB je 0x000000000006C4F3
000000000006C4ED jmp 0x000000000006C4EF
000000000006C4EF jmp 0x000000000006C505
000000000006C4F1 ud2
000000000006C4F3 mov 0x18(%rsp),%rsi
000000000006C4F8 mov 0x20(%rsp),%rdi
000000000006C4FD callq *0x3144B0
000000000006C503 jmp 0x000000000006C51C
000000000006C505 mov 0x20(%rsp),%rdi
000000000006C50A callq *0x3176F8
000000000006C510 jmp 0x000000000006C512
000000000006C512 mov 0x28(%rsp),%rax
000000000006C517 add $0x48,%rsp
000000000006C51B ret
000000000006C51C jmp 0x000000000006C512

 Function call queue at function 6c480: [6c300]

Analyzing function at 6c300
000000000006C300 sub $0xE8,%rsp
000000000006C307 mov %rdi,8(%rsp)
000000000006C30C movq $0,0x30(%rsp)
000000000006C315 mov %rsi,0x38(%rsp)
000000000006C31A mov 0x30(%rsp),%rdi
000000000006C31F mov 0x38(%rsp),%rsi
000000000006C324 callq *0x311C80
000000000006C32A mov %rax,0x10(%rsp)
000000000006C32F mov %rdx,0x18(%rsp)
000000000006C334 mov 0x18(%rsp),%rax
000000000006C339 mov 0x10(%rsp),%rcx
000000000006C33E mov %rcx,0x40(%rsp)
000000000006C343 mov %rax,0x48(%rsp)
000000000006C348 lea 0xC7800,%rax
000000000006C34F lea 0x40(%rsp),%rdi
000000000006C354 call *%rax
000000000006C356 mov %rdx,0x58(%rsp)
000000000006C35B mov %rax,0x50(%rsp)
000000000006C360 mov 0x50(%rsp),%rax
000000000006C365 test %rax,%rax
000000000006C368 je 0x000000000006C370
000000000006C36A jmp 0x000000000006C36C
000000000006C36C jmp 0x000000000006C37E
000000000006C36E ud2
000000000006C370 movq $0,0x20(%rsp)
000000000006C379 jmp 0x000000000006C45D
000000000006C37E mov 8(%rsp),%rsi
000000000006C383 mov 0x58(%rsp),%rax
000000000006C388 mov %rax,(%rsp)
000000000006C38C lea 0xB8(%rsp),%rdi
000000000006C394 callq *0x3144B0
000000000006C39A mov (%rsp),%rdx
000000000006C39E lea 0x98(%rsp),%rdi
000000000006C3A6 lea 0xB8(%rsp),%rsi
000000000006C3AE call 0x000000000006DD60
000000000006C3B3 lea 0x78(%rsp),%rdi
000000000006C3B8 lea 0x98(%rsp),%rsi
000000000006C3C0 call 0x0000000000079170
000000000006C3C5 mov 0x78(%rsp),%rax
000000000006C3CA test %rax,%rax
000000000006C3CD je 0x000000000006C3D5
000000000006C3CF jmp 0x000000000006C3D1
000000000006C3D1 jmp 0x000000000006C439
000000000006C3D3 ud2
000000000006C3D5 mov 0x80(%rsp),%rax
000000000006C3DD mov %rax,0xD0(%rsp)
000000000006C3E5 mov 0x88(%rsp),%rax
000000000006C3ED mov %rax,0xD8(%rsp)
000000000006C3F5 mov 0x90(%rsp),%rax
000000000006C3FD mov %rax,0xE0(%rsp)
000000000006C405 mov 0xD0(%rsp),%rax
000000000006C40D mov %rax,0x60(%rsp)
000000000006C412 mov 0xD8(%rsp),%rax
000000000006C41A mov %rax,0x68(%rsp)
000000000006C41F mov 0xE0(%rsp),%rax
000000000006C427 mov %rax,0x70(%rsp)
000000000006C42C lea 0x60(%rsp),%rdi
000000000006C431 callq *0x315E60
000000000006C437 jmp 0x000000000006C46F
000000000006C439 mov 0x80(%rsp),%rdi
000000000006C441 lea 0x303A20,%rsi
000000000006C448 lea 0xBED20,%rax
000000000006C44F call *%rax
000000000006C451 mov %rdx,0x28(%rsp)
000000000006C456 mov %rax,0x20(%rsp)
000000000006C45B jmp 0x000000000006C45D
000000000006C45D mov 0x20(%rsp),%rax
000000000006C462 mov 0x28(%rsp),%rdx
000000000006C467 add $0xE8,%rsp
000000000006C46E ret
000000000006C46F jmp 0x000000000006C348

 Function call queue at function 6c300: [6dd60, 79170]

Analyzing function at 6dd60
000000000006DD60 sub $0x58,%rsp
000000000006DD64 mov %rdx,(%rsp)
000000000006DD68 mov %rsi,8(%rsp)
000000000006DD6D mov %rdi,0x10(%rsp)
000000000006DD72 mov %rdi,0x18(%rsp)
000000000006DD77 movb $1,0x57(%rsp)
000000000006DD7C mov (%rsi),%rax
000000000006DD7F test %rax,%rax
000000000006DD82 setne %al
000000000006DD85 movzbl %al,%eax
000000000006DD88 je 0x000000000006DD90
000000000006DD8A jmp 0x000000000006DD8C
000000000006DD8C jmp 0x000000000006DDAB
000000000006DD8E ud2
000000000006DD90 mov 0x10(%rsp),%rax
000000000006DD95 mov (%rsp),%rcx
000000000006DD99 movb $0,0x57(%rsp)
000000000006DD9E mov %rcx,8(%rax)
000000000006DDA2 movq $1,(%rax)
000000000006DDA9 jmp 0x000000000006DE0F
000000000006DDAB mov 0x10(%rsp),%rax
000000000006DDB0 mov 8(%rsp),%rcx
000000000006DDB5 mov (%rcx),%rdx
000000000006DDB8 mov %rdx,0x20(%rsp)
000000000006DDBD mov 8(%rcx),%rdx
000000000006DDC1 mov %rdx,0x28(%rsp)
000000000006DDC6 mov 0x10(%rcx),%rcx
000000000006DDCA mov %rcx,0x30(%rsp)
000000000006DDCF mov 0x20(%rsp),%rcx
000000000006DDD4 mov %rcx,0x38(%rsp)
000000000006DDD9 mov 0x28(%rsp),%rcx
000000000006DDDE mov %rcx,0x40(%rsp)
000000000006DDE3 mov 0x30(%rsp),%rcx
000000000006DDE8 mov %rcx,0x48(%rsp)
000000000006DDED mov 0x38(%rsp),%rcx
000000000006DDF2 mov %rcx,8(%rax)
000000000006DDF6 mov 0x40(%rsp),%rcx
000000000006DDFB mov %rcx,0x10(%rax)
000000000006DDFF mov 0x48(%rsp),%rcx
000000000006DE04 mov %rcx,0x18(%rax)
000000000006DE08 movq $0,(%rax)
000000000006DE0F testb $1,0x57(%rsp)
000000000006DE14 jne 0x000000000006DE20
000000000006DE16 mov 0x18(%rsp),%rax
000000000006DE1B add $0x58,%rsp
000000000006DE1F ret
000000000006DE20 jmp 0x000000000006DE16

 Function call queue at function 6dd60: []

Analyzing function at 79170
0000000000079170 sub $0x50,%rsp
0000000000079174 mov %rsi,(%rsp)
0000000000079178 mov %rdi,8(%rsp)
000000000007917D mov %rdi,0x10(%rsp)
0000000000079182 mov (%rsi),%rax
0000000000079185 test %rax,%rax
0000000000079188 je 0x0000000000079190
000000000007918A jmp 0x000000000007918C
000000000007918C jmp 0x00000000000791F6
000000000007918E ud2
0000000000079190 mov 8(%rsp),%rax
0000000000079195 mov (%rsp),%rcx
0000000000079199 mov 8(%rcx),%rdx
000000000007919D mov %rdx,0x18(%rsp)
00000000000791A2 mov 0x10(%rcx),%rdx
00000000000791A6 mov %rdx,0x20(%rsp)
00000000000791AB mov 0x18(%rcx),%rcx
00000000000791AF mov %rcx,0x28(%rsp)
00000000000791B4 mov 0x18(%rsp),%rcx
00000000000791B9 mov %rcx,0x30(%rsp)
00000000000791BE mov 0x20(%rsp),%rcx
00000000000791C3 mov %rcx,0x38(%rsp)
00000000000791C8 mov 0x28(%rsp),%rcx
00000000000791CD mov %rcx,0x40(%rsp)
00000000000791D2 mov 0x30(%rsp),%rcx
00000000000791D7 mov %rcx,8(%rax)
00000000000791DB mov 0x38(%rsp),%rcx
00000000000791E0 mov %rcx,0x10(%rax)
00000000000791E4 mov 0x40(%rsp),%rcx
00000000000791E9 mov %rcx,0x18(%rax)
00000000000791ED movq $0,(%rax)
00000000000791F4 jmp 0x0000000000079218
00000000000791F6 mov 8(%rsp),%rax
00000000000791FB mov (%rsp),%rcx
00000000000791FF mov 8(%rcx),%rcx
0000000000079203 mov %rcx,0x48(%rsp)
0000000000079208 mov 0x48(%rsp),%rcx
000000000007920D mov %rcx,8(%rax)
0000000000079211 movq $1,(%rax)
0000000000079218 mov 0x10(%rsp),%rax
000000000007921D add $0x50,%rsp
0000000000079221 ret

 Function call queue at function 79170: []

Analyzing function at 61280
0000000000061280 sub $0x78,%rsp
0000000000061284 mov %rsi,0x18(%rsp)
0000000000061289 mov %rdi,0x20(%rsp)
000000000006128E mov %rdi,0x28(%rsp)
0000000000061293 lea 0x40(%rsp),%rdi
0000000000061298 callq *0x3116C8
000000000006129E mov 0x18(%rsp),%rcx
00000000000612A3 mov 0x40(%rsp),%rax
00000000000612A8 mov 0x48(%rsp),%rsi
00000000000612AD mov 0x50(%rsp),%rdx
00000000000612B2 mov %rsi,0x30(%rsp)
00000000000612B7 mov %rdx,0x38(%rsp)
00000000000612BC mov 0x20(%rcx),%rdx
00000000000612C0 xor %ecx,%ecx
00000000000612C2 sub %rdx,%rax
00000000000612C5 cmovb %rcx,%rax
00000000000612C9 mov %rax,0x70(%rsp)
00000000000612CE mov 0x70(%rsp),%rax
00000000000612D3 mov %rax,0x10(%rsp)
00000000000612D8 mov 0x30(%rsp),%rax
00000000000612DD test %rax,%rax
00000000000612E0 je 0x00000000000612E8
00000000000612E2 jmp 0x00000000000612E4
00000000000612E4 jmp 0x00000000000612F3
00000000000612E6 ud2
00000000000612E8 movq $0,0x58(%rsp)
00000000000612F1 jmp 0x000000000006132C
00000000000612F3 mov 0x18(%rsp),%rcx
00000000000612F8 mov 0x38(%rsp),%rax
00000000000612FD mov 0x20(%rcx),%rdx
0000000000061301 xor %ecx,%ecx
0000000000061303 sub %rdx,%rax
0000000000061306 cmovb %rcx,%rax
000000000006130A mov %rax,0x68(%rsp)
000000000006130F mov 0x68(%rsp),%rax
0000000000061314 mov %rax,8(%rsp)
0000000000061319 mov 8(%rsp),%rax
000000000006131E mov %rax,0x60(%rsp)
0000000000061323 movq $1,0x58(%rsp)
000000000006132C mov 0x28(%rsp),%rax
0000000000061331 mov 0x20(%rsp),%rcx
0000000000061336 mov 0x10(%rsp),%rdi
000000000006133B mov 0x58(%rsp),%rsi
0000000000061340 mov 0x60(%rsp),%rdx
0000000000061345 mov %rdi,(%rcx)
0000000000061348 mov %rsi,8(%rcx)
000000000006134C mov %rdx,0x10(%rcx)
0000000000061350 add $0x78,%rsp
0000000000061354 ret

 Function call queue at function 61280: []

Analyzing function at 911a0
00000000000911A0 push %rax
00000000000911A1 mov %rdi,%rax
00000000000911A4 mov %rax,(%rsp)
00000000000911A8 call 0x0000000000093A60
00000000000911AD mov (%rsp),%rax
00000000000911B1 pop %rcx
00000000000911B2 ret

 Function call queue at function 911a0: []

Analyzing function at 957d0
00000000000957D0 mov %rsi,0x10(%rdi)
00000000000957D4 ret

 Function call queue at function 957d0: []

Analyzing function at 98630
0000000000098630 sub $0x38,%rsp
0000000000098634 mov %rdi,8(%rsp)
0000000000098639 lea 0x10(%rsp),%rdi
000000000009863E mov $0x28,%edx
0000000000098643 call 0x000000000002E4B8
0000000000098648 mov 8(%rsp),%rdi
000000000009864D lea 0x10(%rsp),%rsi
0000000000098652 call 0x0000000000092D00
0000000000098657 add $0x38,%rsp
000000000009865B ret

 Function call queue at function 98630: [92d00]

Analyzing function at 92d00
0000000000092D00 sub $0xC8,%rsp
0000000000092D07 mov %rdi,0x28(%rsp)
0000000000092D0C mov %rsi,0x30(%rsp)
0000000000092D11 mov 0x30(%rsp),%rsi
0000000000092D16 lea 0x38(%rsp),%rdi
0000000000092D1B call 0x00000000000611F0
0000000000092D20 jmp 0x0000000000092D47
0000000000092D22 mov 0x30(%rsp),%rdi
0000000000092D27 call 0x000000000009E0A0
0000000000092D2C jmp 0x0000000000092EEF
0000000000092D31 mov %rax,%rcx
0000000000092D34 mov %edx,%eax
0000000000092D36 mov %rcx,0xA8(%rsp)
0000000000092D3E mov %eax,0xB0(%rsp)
0000000000092D45 jmp 0x0000000000092D22
0000000000092D47 mov $1,%eax
0000000000092D4C xor %ecx,%ecx
0000000000092D4E cmpq $0,0x38(%rsp)
0000000000092D54 cmove %rcx,%rax
0000000000092D58 cmp $1,%rax
0000000000092D5C jne 0x0000000000092D8B
0000000000092D5E mov 0x28(%rsp),%rdi
0000000000092D63 movb $1,0xA7(%rsp)
0000000000092D6B mov 0x48(%rsp),%rax
0000000000092D70 mov %rax,0x60(%rsp)
0000000000092D75 movups 0x38(%rsp),%xmm0
0000000000092D7A movaps %xmm0,0x50(%rsp)
0000000000092D7F call 0x0000000000094190
0000000000092D84 mov %rax,0x20(%rsp)
0000000000092D89 jmp 0x0000000000092DD6
0000000000092D8B lea 0xE3F90,%rax
0000000000092D92 lea 0x38(%rsp),%rdi
0000000000092D97 call *%rax
0000000000092D99 jmp 0x0000000000092D9B
0000000000092D9B mov 0x30(%rsp),%rdi
0000000000092DA0 call 0x000000000009E0A0
0000000000092DA5 add $0xC8,%rsp
0000000000092DAC ret
0000000000092DAD testb $1,0xA7(%rsp)
0000000000092DB5 jne 0x0000000000092ED1
0000000000092DBB jmp 0x0000000000092D22
0000000000092DC0 mov %rax,%rcx
0000000000092DC3 mov %edx,%eax
0000000000092DC5 mov %rcx,0xA8(%rsp)
0000000000092DCD mov %eax,0xB0(%rsp)
0000000000092DD4 jmp 0x0000000000092DAD
0000000000092DD6 mov 0x28(%rsp),%rdi
0000000000092DDB call 0x0000000000095820
0000000000092DE0 mov %rax,0x18(%rsp)
0000000000092DE5 jmp 0x0000000000092DE7
0000000000092DE7 mov 0x20(%rsp),%rax
0000000000092DEC mov 0x18(%rsp),%rcx
0000000000092DF1 cmp %rcx,%rax
0000000000092DF4 je 0x0000000000092E0B
0000000000092DF6 mov 0x28(%rsp),%rdi
0000000000092DFB lea 0x1B9030,%rax
0000000000092E02 call *%rax
0000000000092E04 mov %rax,0x10(%rsp)
0000000000092E09 jmp 0x0000000000092E57
0000000000092E0B mov 0x30(%rsp),%rsi
0000000000092E10 lea 0x68(%rsp),%rdi
0000000000092E15 call 0x0000000000061280
0000000000092E1A jmp 0x0000000000092E1C
0000000000092E1C mov 0x68(%rsp),%rax
0000000000092E21 inc %rax
0000000000092E24 mov $0xFFFFFFFFFFFFFFFF,%rcx
0000000000092E2B cmove %rcx,%rax
0000000000092E2F mov %rax,0xB8(%rsp)
0000000000092E37 mov 0xB8(%rsp),%rax
0000000000092E3F mov %rax,8(%rsp)
0000000000092E44 mov 8(%rsp),%rsi
0000000000092E49 mov 0x28(%rsp),%rdi
0000000000092E4E call 0x00000000000956A0
0000000000092E53 jmp 0x0000000000092E55
0000000000092E55 jmp 0x0000000000092DF6
0000000000092E57 mov 0x10(%rsp),%rax
0000000000092E5C mov 0x20(%rsp),%rcx
0000000000092E61 imul $0x18,%rcx
0000000000092E65 add %rcx,%rax
0000000000092E68 mov %rax,0xC0(%rsp)
0000000000092E70 mov 0xC0(%rsp),%rax
0000000000092E78 mov %rax,(%rsp)
0000000000092E7C jmp 0x0000000000092E7E
0000000000092E7E mov (%rsp),%rdi
0000000000092E82 movb $0,0xA7(%rsp)
0000000000092E8A mov 0x60(%rsp),%rax
0000000000092E8F mov %rax,0x90(%rsp)
0000000000092E97 movaps 0x50(%rsp),%xmm0
0000000000092E9C movaps %xmm0,0x80(%rsp)
0000000000092EA4 lea 0x1BA5E0,%rax
0000000000092EAB lea 0x80(%rsp),%rsi
0000000000092EB3 call *%rax
0000000000092EB5 jmp 0x0000000000092EB7
0000000000092EB7 mov 0x28(%rsp),%rdi
0000000000092EBC mov 0x20(%rsp),%rsi
0000000000092EC1 add $1,%rsi
0000000000092EC5 call 0x00000000000957D0
0000000000092ECA jmp 0x0000000000092ECC
0000000000092ECC jmp 0x0000000000092D11

 Function call queue at function 92d00: [94190, 95820, 956a0]

Analyzing function at 94190
0000000000094190 mov 0x10(%rdi),%rax
0000000000094194 ret

 Function call queue at function 94190: []

Analyzing function at 95820
0000000000095820 sub $0x10,%rsp
0000000000095824 mov 8(%rdi),%rax
0000000000095828 mov %rax,8(%rsp)
000000000009582D mov 8(%rsp),%rax
0000000000095832 mov %rax,(%rsp)
0000000000095836 mov (%rsp),%rax
000000000009583A add $0x10,%rsp
000000000009583E ret

 Function call queue at function 95820: []

Analyzing function at 956a0
00000000000956A0 push %rax
00000000000956A1 mov %rsi,%rdx
00000000000956A4 mov %rdi,%rax
00000000000956A7 mov %rax,%rdi
00000000000956AA mov 0x10(%rax),%rsi
00000000000956AE call 0x0000000000081C70
00000000000956B3 pop %rax
00000000000956B4 ret

 Function call queue at function 956a0: [81c70]

Analyzing function at 81c70
0000000000081C70 sub $0x28,%rsp
0000000000081C74 mov %rdi,8(%rsp)
0000000000081C79 mov %rsi,0x10(%rsp)
0000000000081C7E mov %rdx,0x18(%rsp)
0000000000081C83 call 0x000000000007C5A0
0000000000081C88 mov %al,0x27(%rsp)
0000000000081C8C mov 0x27(%rsp),%al
0000000000081C90 test $1,%al
0000000000081C92 jne 0x0000000000081C9B
0000000000081C94 jmp 0x0000000000081C96
0000000000081C96 add $0x28,%rsp
0000000000081C9A ret
0000000000081C9B mov 0x18(%rsp),%rdx
0000000000081CA0 mov 0x10(%rsp),%rsi
0000000000081CA5 mov 8(%rsp),%rdi
0000000000081CAA call 0x0000000000082000
0000000000081CAF jmp 0x0000000000081C96

 Function call queue at function 81c70: [7c5a0, 82000]

Analyzing function at 7c5a0
000000000007C5A0 sub $0x28,%rsp
000000000007C5A4 mov %rsi,8(%rsp)
000000000007C5A9 mov %rdx,0x10(%rsp)
000000000007C5AE mov 8(%rdi),%rax
000000000007C5B2 mov %rax,0x20(%rsp)
000000000007C5B7 mov 0x20(%rsp),%rax
000000000007C5BC mov %rax,0x18(%rsp)
000000000007C5C1 mov 8(%rsp),%rcx
000000000007C5C6 mov 0x18(%rsp),%rax
000000000007C5CB sub %rcx,%rax
000000000007C5CE mov %rax,(%rsp)
000000000007C5D2 mov 0x10(%rsp),%rax
000000000007C5D7 mov (%rsp),%rcx
000000000007C5DB cmp %rcx,%rax
000000000007C5DE seta %al
000000000007C5E1 and $1,%al
000000000007C5E3 movzbl %al,%eax
000000000007C5E6 add $0x28,%rsp
000000000007C5EA ret

 Function call queue at function 7c5a0: []

Analyzing function at 82000
0000000000082000 sub $0x18,%rsp
0000000000082004 callq *0x312A70
000000000008200A mov %rax,8(%rsp)
000000000008200F mov %rdx,0x10(%rsp)
0000000000082014 mov 0x10(%rsp),%rsi
0000000000082019 mov 8(%rsp),%rdi
000000000008201E call 0x00000000000A06C0
0000000000082023 add $0x18,%rsp
0000000000082027 ret

 Function call queue at function 82000: [a06c0]

Analyzing function at a06c0
00000000000A06C0 sub $0x18,%rsp
00000000000A06C4 lea 0xEE5D0,%rax
00000000000A06CB call *%rax
00000000000A06CD mov %rdx,0x10(%rsp)
00000000000A06D2 mov %rax,8(%rsp)
00000000000A06D7 mov 0x10(%rsp),%rax
00000000000A06DC movabs $0x7FFFFFFFFFFFFFFF,%rcx
00000000000A06E6 add %rcx,%rax
00000000000A06E9 setne %al
00000000000A06EC movzbl %al,%eax
00000000000A06EF je 0x00000000000A06F7
00000000000A06F1 jmp 0x00000000000A06F3
00000000000A06F3 jmp 0x00000000000A06FC
00000000000A06F5 ud2
00000000000A06F7 add $0x18,%rsp
00000000000A06FB ret
00000000000A06FC mov 0x10(%rsp),%rax
00000000000A0701 test %rax,%rax
00000000000A0704 setne %al
00000000000A0707 movzbl %al,%eax
00000000000A070A je 0x00000000000A0710
00000000000A070C jmp 0x00000000000A070E
00000000000A070E jmp 0x00000000000A071B
00000000000A0710 lea 0x246540,%rax
00000000000A0717 call *%rax
00000000000A0719 ud2
00000000000A071B mov 8(%rsp),%rdi
00000000000A0720 mov 0x10(%rsp),%rsi
00000000000A0725 lea 0x2FA70,%rax
00000000000A072C call *%rax

 Function call queue at function a06c0: []

Analyzing function at 9e0a0
000000000009E0A0 push %rax
000000000009E0A1 call 0x000000000009C140
000000000009E0A6 pop %rax
000000000009E0A7 ret

 Function call queue at function 9e0a0: []

Analyzing function at 50ec0
0000000000050EC0 sub $0x18,%rsp
0000000000050EC4 call 0x00000000000B6A10
0000000000050EC9 mov %rax,8(%rsp)
0000000000050ECE mov %rdx,0x10(%rsp)
0000000000050ED3 mov 0x10(%rsp),%rdx
0000000000050ED8 mov 8(%rsp),%rax
0000000000050EDD add $0x18,%rsp
0000000000050EE1 ret

 Function call queue at function 50ec0: []

Analyzing function at 4e490
000000000004E490 sub $0x4F8,%rsp
000000000004E497 mov %rcx,0x28(%rsp)
000000000004E49C mov %rdx,0x20(%rsp)
000000000004E4A1 mov %rsi,%rax
000000000004E4A4 mov 0x28(%rsp),%rsi
000000000004E4A9 mov %rax,0x30(%rsp)
000000000004E4AE mov %rdi,0x38(%rsp)
000000000004E4B3 mov %rdi,0x40(%rsp)
000000000004E4B8 movb $0,0x4E6(%rsp)
000000000004E4C0 movb $0,0x4E7(%rsp)
000000000004E4C8 movb $1,0x4E7(%rsp)
000000000004E4D0 mov 0x303570,%rdx
000000000004E4D7 mov 0x303578,%rcx
000000000004E4DE lea 0x50(%rsp),%rdi
000000000004E4E3 call 0x0000000000041970
000000000004E4E8 jmp 0x000000000004E513
000000000004E4EA testb $1,0x4E7(%rsp)
000000000004E4F2 jne 0x000000000004EA22
000000000004E4F8 jmp 0x000000000004EA13
000000000004E4FD mov %rax,%rcx
000000000004E500 mov %edx,%eax
000000000004E502 mov %rcx,0x4E8(%rsp)
000000000004E50A mov %eax,0x4F0(%rsp)
000000000004E511 jmp 0x000000000004E4EA
000000000004E513 mov 0x50(%rsp),%rax
000000000004E518 test %rax,%rax
000000000004E51B setne %al
000000000004E51E movzbl %al,%eax
000000000004E521 je 0x000000000004E529
000000000004E523 jmp 0x000000000004E525
000000000004E525 jmp 0x000000000004E530
000000000004E527 ud2
000000000004E529 movb $1,0x4F(%rsp)
000000000004E52E jmp 0x000000000004E5AC
000000000004E530 lea 0x50(%rsp),%rax
000000000004E535 mov %rax,0x68(%rsp)
000000000004E53A mov 0x68(%rsp),%rdi
000000000004E53F call 0x0000000000089060
000000000004E544 mov %rdx,0x10(%rsp)
000000000004E549 mov %rax,0x18(%rsp)
000000000004E54E jmp 0x000000000004E576
000000000004E550 lea 0xE3F90,%rax
000000000004E557 lea 0x50(%rsp),%rdi
000000000004E55C call *%rax
000000000004E55E jmp 0x000000000004E4EA
000000000004E560 mov %rax,%rcx
000000000004E563 mov %edx,%eax
000000000004E565 mov %rcx,0x4E8(%rsp)
000000000004E56D mov %eax,0x4F0(%rsp)
000000000004E574 jmp 0x000000000004E550
000000000004E576 mov 0x10(%rsp),%rsi
000000000004E57B mov 0x18(%rsp),%rdi
000000000004E580 call 0x0000000000088EB0
000000000004E585 mov %al,0xF(%rsp)
000000000004E589 jmp 0x000000000004E58B
000000000004E58B mov 0xF(%rsp),%al
000000000004E58F test $1,%al
000000000004E591 jne 0x000000000004E5A7
000000000004E593 jmp 0x000000000004E5A0
000000000004E595 lea 0x2FBE0,%rax
000000000004E59C call *%rax
000000000004E59E ud2
000000000004E5A0 movb $0,0x4F(%rsp)
000000000004E5A5 jmp 0x000000000004E5AC
000000000004E5A7 movb $1,0x4F(%rsp)
000000000004E5AC lea 0xE3F90,%rax
000000000004E5B3 lea 0x50(%rsp),%rdi
000000000004E5B8 call *%rax
000000000004E5BA jmp 0x000000000004E5BC
000000000004E5BC mov 0x20(%rsp),%rcx
000000000004E5C1 mov 0x30(%rsp),%rdx
000000000004E5C6 movb $0,0x4E7(%rsp)
000000000004E5CE movzbl 0x4F(%rsp),%r8d
000000000004E5D4 lea 0x3067D8,%rsi
000000000004E5DB lea 0xF0(%rsp),%rdi
000000000004E5E3 call 0x00000000000A2B50
000000000004E5E8 jmp 0x000000000004E5EA
000000000004E5EA mov 0xF0(%rsp),%rax
000000000004E5F2 test %rax,%rax
000000000004E5F5 je 0x000000000004E600
000000000004E5F7 jmp 0x000000000004E5F9
000000000004E5F9 jmp 0x000000000004E6D8
000000000004E5FE ud2
000000000004E600 mov 0x128(%rsp),%rax
000000000004E608 mov %rax,0x160(%rsp)
000000000004E610 movups 0xF8(%rsp),%xmm0
000000000004E618 movups 0x108(%rsp),%xmm1
000000000004E620 movups 0x118(%rsp),%xmm2
000000000004E628 movaps %xmm2,0x150(%rsp)
000000000004E630 movaps %xmm1,0x140(%rsp)
000000000004E638 movaps %xmm0,0x130(%rsp)
000000000004E640 mov 0x160(%rsp),%rax
000000000004E648 mov %rax,0xE0(%rsp)
000000000004E650 movaps 0x130(%rsp),%xmm0
000000000004E658 movaps 0x140(%rsp),%xmm1
000000000004E660 movaps 0x150(%rsp),%xmm2
000000000004E668 movaps %xmm2,0xD0(%rsp)
000000000004E670 movaps %xmm1,0xC0(%rsp)
000000000004E678 movaps %xmm0,0xB0(%rsp)
000000000004E680 movaps 0xB0(%rsp),%xmm0
000000000004E688 movaps 0xC0(%rsp),%xmm1
000000000004E690 movaps %xmm1,0x80(%rsp)
000000000004E698 movaps %xmm0,0x70(%rsp)
000000000004E69D movb $1,0x4E6(%rsp)
000000000004E6A5 mov 0xE0(%rsp),%rax
000000000004E6AD mov %rax,0xA0(%rsp)
000000000004E6B5 movaps 0xD0(%rsp),%xmm0
000000000004E6BD movaps %xmm0,0x90(%rsp)
000000000004E6C5 lea 0x70(%rsp),%rdi
000000000004E6CA call 0x000000000005C6A0
000000000004E6CF mov %al,0xE(%rsp)
000000000004E6D3 jmp 0x000000000004E792
000000000004E6D8 lea 0xF0(%rsp),%rsi
000000000004E6E0 add $8,%rsi
000000000004E6E4 lea 0x170(%rsp),%rdi
000000000004E6EC mov $0x30,%edx
000000000004E6F1 call 0x000000000002E4B8
000000000004E6F6 lea 0x1D8(%rsp),%rdi
000000000004E6FE lea 0x170(%rsp),%rsi
000000000004E706 mov $0x30,%edx
000000000004E70B call 0x000000000002E4B8
000000000004E710 lea 0x1A0(%rsp),%rdi
000000000004E718 add $8,%rdi
000000000004E71C lea 0x1D8(%rsp),%rsi
000000000004E724 mov $0x30,%edx
000000000004E729 call 0x000000000002E4B8
000000000004E72E mov 0x38(%rsp),%rdi
000000000004E733 movb $0,0x1A0(%rsp)
000000000004E73B add $8,%rdi
000000000004E73F lea 0x1A0(%rsp),%rsi
000000000004E747 mov $0x38,%edx
000000000004E74C call 0x000000000002E4B8
000000000004E751 mov 0x38(%rsp),%rax
000000000004E756 movq $1,(%rax)
000000000004E75D mov 0x40(%rsp),%rax
000000000004E762 add $0x4F8,%rsp
000000000004E769 ret
000000000004E76A lea 0x90(%rsp),%rdi
000000000004E772 call 0x000000000009DBB0
000000000004E777 jmp 0x000000000004E82F
000000000004E77C mov %rax,%rcx
000000000004E77F mov %edx,%eax
000000000004E781 mov %rcx,0x4E8(%rsp)
000000000004E789 mov %eax,0x4F0(%rsp)
000000000004E790 jmp 0x000000000004E76A
000000000004E792 mov 0xE(%rsp),%al
000000000004E796 and $1,%al
000000000004E798 mov %al,0x20E(%rsp)
000000000004E79F mov 0x20E(%rsp),%al
000000000004E7A6 and $1,%al
000000000004E7A8 movzbl %al,%eax
000000000004E7AB cmp $1,%rax
000000000004E7AF jne 0x000000000004E7C2
000000000004E7B1 mov 0x38(%rsp),%rax
000000000004E7B6 movq $2,(%rax)
000000000004E7BD jmp 0x000000000004E9D4
000000000004E7C2 lea 0x70(%rsp),%rdi
000000000004E7C7 call 0x0000000000062280
000000000004E7CC mov %al,0xD(%rsp)
000000000004E7D0 jmp 0x000000000004E7D2
000000000004E7D2 mov 0xD(%rsp),%al
000000000004E7D6 and $1,%al
000000000004E7D8 mov %al,0x20F(%rsp)
000000000004E7DF mov 0x20F(%rsp),%al
000000000004E7E6 and $1,%al
000000000004E7E8 movzbl %al,%eax
000000000004E7EB cmp $1,%rax
000000000004E7EF jne 0x000000000004E802
000000000004E7F1 mov 0x38(%rsp),%rax
000000000004E7F6 movq $3,(%rax)
000000000004E7FD jmp 0x000000000004E9D4
000000000004E802 mov 0x28(%rsp),%rdx
000000000004E807 lea 0x210(%rsp),%rdi
000000000004E80F lea 0x70(%rsp),%rsi
000000000004E814 call 0x000000000004EA30
000000000004E819 jmp 0x000000000004E81B
000000000004E81B mov 0x210(%rsp),%rax
000000000004E823 test %rax,%rax
000000000004E826 je 0x000000000004E840
000000000004E828 jmp 0x000000000004E82A
000000000004E82A jmp 0x000000000004E906
000000000004E82F lea 0x70(%rsp),%rdi
000000000004E834 call 0x000000000009D040
000000000004E839 jmp 0x000000000004E4EA
000000000004E83E ud2
000000000004E840 lea 0x210(%rsp),%rsi
000000000004E848 add $8,%rsi
000000000004E84C lea 0x2D8(%rsp),%rdi
000000000004E854 mov $0xC0,%edx
000000000004E859 call 0x000000000002E4B8
000000000004E85E lea 0x398(%rsp),%rdi
000000000004E866 lea 0x2D8(%rsp),%rsi
000000000004E86E mov $0xC0,%edx
000000000004E873 call 0x000000000002E4B8
000000000004E878 mov 0x38(%rsp),%rdi
000000000004E87D movb $0,0x4E6(%rsp)
000000000004E885 mov 0x90(%rsp),%rax
000000000004E88D mov %rax,0x458(%rsp)
000000000004E895 mov 0x98(%rsp),%rax
000000000004E89D mov %rax,0x460(%rsp)
000000000004E8A5 mov 0xA0(%rsp),%rax
000000000004E8AD mov %rax,0x468(%rsp)
000000000004E8B5 add $8,%rdi
000000000004E8B9 lea 0x398(%rsp),%rsi
000000000004E8C1 mov $0xC0,%edx
000000000004E8C6 call 0x000000000002E4B8
000000000004E8CB mov 0x38(%rsp),%rax
000000000004E8D0 mov 0x458(%rsp),%rcx
000000000004E8D8 mov %rcx,0xC8(%rax)
000000000004E8DF mov 0x460(%rsp),%rcx
000000000004E8E7 mov %rcx,0xD0(%rax)
000000000004E8EE mov 0x468(%rsp),%rcx
000000000004E8F6 mov %rcx,0xD8(%rax)
000000000004E8FD movq $0,(%rax)
000000000004E904 jmp 0x000000000004E965
000000000004E906 lea 0x210(%rsp),%rsi
000000000004E90E add $8,%rsi
000000000004E912 lea 0x470(%rsp),%rdi
000000000004E91A mov $0x38,%edx
000000000004E91F call 0x000000000002E4B8
000000000004E924 lea 0x4A8(%rsp),%rdi
000000000004E92C lea 0x470(%rsp),%rsi
000000000004E934 mov $0x38,%edx
000000000004E939 call 0x000000000002E4B8
000000000004E93E mov 0x38(%rsp),%rdi
000000000004E943 add $8,%rdi
000000000004E947 lea 0x4A8(%rsp),%rsi
000000000004E94F mov $0x38,%edx
000000000004E954 call 0x000000000002E4B8
000000000004E959 mov 0x38(%rsp),%rax
000000000004E95E movq $1,(%rax)
000000000004E965 testb $1,0x4E6(%rsp)
000000000004E96D jne 0x000000000004E983
000000000004E96F movb $0,0x4E6(%rsp)
000000000004E977 lea 0x70(%rsp),%rdi
000000000004E97C call 0x000000000009D040
000000000004E981 jmp 0x000000000004E9CF
000000000004E983 lea 0x90(%rsp),%rdi
000000000004E98B call 0x000000000009DBB0
000000000004E990 jmp 0x000000000004E96F
000000000004E992 lea 0x70(%rsp),%rdi
000000000004E997 call 0x000000000009D040
000000000004E99C jmp 0x000000000004E9B4
000000000004E99E mov %rax,%rcx
000000000004E9A1 mov %edx,%eax
000000000004E9A3 mov %rcx,0x4E8(%rsp)
000000000004E9AB mov %eax,0x4F0(%rsp)
000000000004E9B2 jmp 0x000000000004E992
000000000004E9B4 jmp 0x000000000004E4EA
000000000004E9B9 mov %rax,%rcx
000000000004E9BC mov %edx,%eax
000000000004E9BE mov %rcx,0x4E8(%rsp)
000000000004E9C6 mov %eax,0x4F0(%rsp)
000000000004E9CD jmp 0x000000000004E9B4
000000000004E9CF jmp 0x000000000004E75D
000000000004E9D4 lea 0x90(%rsp),%rdi
000000000004E9DC call 0x000000000009DBB0
000000000004E9E1 jmp 0x000000000004E9FC
000000000004E9E3 mov %rax,%rcx
000000000004E9E6 mov %edx,%eax
000000000004E9E8 mov %rcx,0x4E8(%rsp)
000000000004E9F0 mov %eax,0x4F0(%rsp)
000000000004E9F7 jmp 0x000000000004E82F
000000000004E9FC movb $0,0x4E6(%rsp)
000000000004EA04 lea 0x70(%rsp),%rdi
000000000004EA09 call 0x000000000009D040
000000000004EA0E jmp 0x000000000004E75D

 Function call queue at function 4e490: [41970, 89060, a2b50, 5c6a0, 9dbb0, 62280, 4ea30, 9d040]

Analyzing function at 41970
0000000000041970 sub $0x18,%rsp
0000000000041974 mov %rcx,8(%rsp)
0000000000041979 mov %rdx,%rsi
000000000004197C mov 8(%rsp),%rdx
0000000000041981 mov %rdi,%rax
0000000000041984 mov %rax,0x10(%rsp)
0000000000041989 call 0x000000000006C280
000000000004198E mov 0x10(%rsp),%rax
0000000000041993 add $0x18,%rsp
0000000000041997 ret

 Function call queue at function 41970: []

Analyzing function at 89060
0000000000089060 sub $0x18,%rsp
0000000000089064 lea 0x304318,%rsi
000000000008906B call 0x0000000000088DC0
0000000000089070 mov %rax,8(%rsp)
0000000000089075 mov %rdx,0x10(%rsp)
000000000008907A mov 0x10(%rsp),%rdx
000000000008907F mov 8(%rsp),%rax
0000000000089084 add $0x18,%rsp
0000000000089088 ret

 Function call queue at function 89060: []

Analyzing function at a2b50
00000000000A2B50 sub $0xE88,%rsp
00000000000A2B57 mov %rcx,0x1E0(%rsp)
00000000000A2B5F mov %rdx,0x1E8(%rsp)
00000000000A2B67 mov %rsi,0x1F0(%rsp)
00000000000A2B6F mov %rdi,0x1F8(%rsp)
00000000000A2B77 mov %r8b,%al
00000000000A2B7A mov %al,0x207(%rsp)
00000000000A2B81 mov %rdi,0x208(%rsp)
00000000000A2B89 movb $0,0xE76(%rsp)
00000000000A2B91 movb $0,0xE75(%rsp)
00000000000A2B99 movb $0,0xE77(%rsp)
00000000000A2BA1 movb $1,0xE77(%rsp)
00000000000A2BA9 movb $1,0x217(%rsp)
00000000000A2BB1 lea 0x218(%rsp),%rdi
00000000000A2BB9 call 0x00000000000913F0
00000000000A2BBE jmp 0x00000000000A2BE9
00000000000A2BC0 testb $1,0xE77(%rsp)
00000000000A2BC8 jne 0x00000000000A4734
00000000000A2BCE jmp 0x00000000000A4725
00000000000A2BD3 mov %rax,%rcx
00000000000A2BD6 mov %edx,%eax
00000000000A2BD8 mov %rcx,0xE78(%rsp)
00000000000A2BE0 mov %eax,0xE80(%rsp)
00000000000A2BE7 jmp 0x00000000000A2BC0
00000000000A2BE9 movb $1,0xE76(%rsp)
00000000000A2BF1 lea 0x230(%rsp),%rdi
00000000000A2BF9 call 0x00000000000912A0
00000000000A2BFE jmp 0x00000000000A2C26
00000000000A2C00 testb $1,0xE76(%rsp)
00000000000A2C08 jne 0x00000000000A4713
00000000000A2C0E jmp 0x00000000000A2BC0
00000000000A2C10 mov %rax,%rcx
00000000000A2C13 mov %edx,%eax
00000000000A2C15 mov %rcx,0xE78(%rsp)
00000000000A2C1D mov %eax,0xE80(%rsp)
00000000000A2C24 jmp 0x00000000000A2C00
00000000000A2C26 mov 0x1E0(%rsp),%rsi
00000000000A2C2E mov 0x1E8(%rsp),%rdi
00000000000A2C36 movb $1,0xE75(%rsp)
00000000000A2C3E movb $0,0xE77(%rsp)
00000000000A2C46 call 0x00000000000B7500
00000000000A2C4B mov %rdx,0x1D0(%rsp)
00000000000A2C53 mov %rax,0x1D8(%rsp)
00000000000A2C5B jmp 0x00000000000A2C83
00000000000A2C5D testb $1,0xE75(%rsp)
00000000000A2C65 jne 0x00000000000A46F6
00000000000A2C6B jmp 0x00000000000A2C00
00000000000A2C6D mov %rax,%rcx
00000000000A2C70 mov %edx,%eax
00000000000A2C72 mov %rcx,0xE78(%rsp)
00000000000A2C7A mov %eax,0xE80(%rsp)
00000000000A2C81 jmp 0x00000000000A2C5D
00000000000A2C83 mov 0x1D0(%rsp),%rax
00000000000A2C8B mov 0x1D8(%rsp),%rcx
00000000000A2C93 mov %rcx,0x248(%rsp)
00000000000A2C9B mov %rax,0x250(%rsp)
00000000000A2CA3 lea 0x248(%rsp),%rdi
00000000000A2CAB call 0x00000000000B5EB0
00000000000A2CB0 mov %rdx,0x1C0(%rsp)
00000000000A2CB8 mov %rax,0x1C8(%rsp)
00000000000A2CC0 jmp 0x00000000000A2CDA
00000000000A2CC2 jmp 0x00000000000A2C5D
00000000000A2CC4 mov %rax,%rcx
00000000000A2CC7 mov %edx,%eax
00000000000A2CC9 mov %rcx,0xE78(%rsp)
00000000000A2CD1 mov %eax,0xE80(%rsp)
00000000000A2CD8 jmp 0x00000000000A2CC2
00000000000A2CDA mov 0x1C0(%rsp),%rax
00000000000A2CE2 mov 0x1C8(%rsp),%rcx
00000000000A2CEA mov %rcx,0x258(%rsp)
00000000000A2CF2 mov %rax,0x260(%rsp)
00000000000A2CFA mov $1,%eax
00000000000A2CFF xor %ecx,%ecx
00000000000A2D01 cmpq $0,0x258(%rsp)
00000000000A2D0A cmove %rcx,%rax
00000000000A2D0E cmp $1,%rax
00000000000A2D12 jne 0x00000000000A2D5E
00000000000A2D14 mov 0x258(%rsp),%rcx
00000000000A2D1C mov 0x260(%rsp),%rax
00000000000A2D24 mov %rcx,0x268(%rsp)
00000000000A2D2C mov %rax,0x270(%rsp)
00000000000A2D34 mov 0x268(%rsp),%rdi
00000000000A2D3C mov 0x270(%rsp),%rsi
00000000000A2D44 call 0x00000000000319D0
00000000000A2D49 mov %rdx,0x1B0(%rsp)
00000000000A2D51 mov %rax,0x1B8(%rsp)
00000000000A2D59 jmp 0x00000000000A2ECB
00000000000A2D5E mov 0x1F8(%rsp),%rdi
00000000000A2D66 mov 0x207(%rsp),%al
00000000000A2D6D movb $0,0xE75(%rsp)
00000000000A2D75 mov 0x230(%rsp),%rcx
00000000000A2D7D mov %rcx,0xE20(%rsp)
00000000000A2D85 mov 0x238(%rsp),%rcx
00000000000A2D8D mov %rcx,0xE28(%rsp)
00000000000A2D95 mov 0x240(%rsp),%rcx
00000000000A2D9D mov %rcx,0xE30(%rsp)
00000000000A2DA5 movb $0,0xE76(%rsp)
00000000000A2DAD mov 0x218(%rsp),%rcx
00000000000A2DB5 mov %rcx,0xE58(%rsp)
00000000000A2DBD mov 0x220(%rsp),%rcx
00000000000A2DC5 mov %rcx,0xE60(%rsp)
00000000000A2DCD mov 0x228(%rsp),%rcx
00000000000A2DD5 mov %rcx,0xE68(%rsp)
00000000000A2DDD mov 0xE58(%rsp),%rcx
00000000000A2DE5 mov %rcx,0xE38(%rsp)
00000000000A2DED mov 0xE60(%rsp),%rcx
00000000000A2DF5 mov %rcx,0xE40(%rsp)
00000000000A2DFD mov 0xE68(%rsp),%rcx
00000000000A2E05 mov %rcx,0xE48(%rsp)
00000000000A2E0D and $1,%al
00000000000A2E0F mov %al,0xE50(%rsp)
00000000000A2E16 mov 0xE38(%rsp),%rax
00000000000A2E1E mov %rax,0xDE8(%rsp)
00000000000A2E26 mov 0xE40(%rsp),%rax
00000000000A2E2E mov %rax,0xDF0(%rsp)
00000000000A2E36 mov 0xE48(%rsp),%rax
00000000000A2E3E mov %rax,0xDF8(%rsp)
00000000000A2E46 mov 0xE50(%rsp),%rax
00000000000A2E4E mov %rax,0xE00(%rsp)
00000000000A2E56 mov 0xE20(%rsp),%rax
00000000000A2E5E mov %rax,0xE08(%rsp)
00000000000A2E66 mov 0xE28(%rsp),%rax
00000000000A2E6E mov %rax,0xE10(%rsp)
00000000000A2E76 mov 0xE30(%rsp),%rax
00000000000A2E7E mov %rax,0xE18(%rsp)
00000000000A2E86 add $8,%rdi
00000000000A2E8A lea 0xDE8(%rsp),%rsi
00000000000A2E92 mov $0x38,%edx
00000000000A2E97 call 0x000000000002E4B8
00000000000A2E9C mov 0x1F8(%rsp),%rax
00000000000A2EA4 movq $0,(%rax)
00000000000A2EAB movb $0,0xE75(%rsp)
00000000000A2EB3 movb $0,0xE76(%rsp)
00000000000A2EBB mov 0x208(%rsp),%rax
00000000000A2EC3 add $0xE88,%rsp
00000000000A2ECA ret
00000000000A2ECB mov 0x217(%rsp),%al
00000000000A2ED2 xor $0xFF,%al
00000000000A2ED4 test $1,%al
00000000000A2ED6 jne 0x00000000000A2EF5
00000000000A2ED8 lea 0x305658,%rsi
00000000000A2EDF lea 0x268(%rsp),%rdi
00000000000A2EE7 call 0x0000000000032210
00000000000A2EEC mov %al,0x1AF(%rsp)
00000000000A2EF3 jmp 0x00000000000A2F19
00000000000A2EF5 mov 0x268(%rsp),%rsi
00000000000A2EFD mov 0x270(%rsp),%rdx
00000000000A2F05 lea 0x230(%rsp),%rdi
00000000000A2F0D call 0x0000000000094CD0
00000000000A2F12 jmp 0x00000000000A2F14
00000000000A2F14 jmp 0x00000000000A2CA3
00000000000A2F19 mov 0x1AF(%rsp),%al
00000000000A2F20 test $1,%al
00000000000A2F22 jne 0x00000000000A2F54
00000000000A2F24 jmp 0x00000000000A2F26
00000000000A2F26 mov 0x1B0(%rsp),%rsi
00000000000A2F2E mov 0x1B8(%rsp),%rdi
00000000000A2F36 lea 0x257154,%rdx
00000000000A2F3D lea 0xEA530,%rax
00000000000A2F44 mov $2,%ecx
00000000000A2F49 call *%rax
00000000000A2F4B mov %al,0x1AE(%rsp)
00000000000A2F52 jmp 0x00000000000A2F61
00000000000A2F54 movb $0,0x217(%rsp)
00000000000A2F5C jmp 0x00000000000A2CA3
00000000000A2F61 mov 0x1AE(%rsp),%al
00000000000A2F68 test $1,%al
00000000000A2F6A jne 0x00000000000A2F9F
00000000000A2F6C jmp 0x00000000000A2F6E
00000000000A2F6E mov 0x1B0(%rsp),%rsi
00000000000A2F76 mov 0x1B8(%rsp),%rdi
00000000000A2F7E lea 0x25716B,%rdx
00000000000A2F85 lea 0xEA530,%rax
00000000000A2F8C mov $1,%ecx
00000000000A2F91 call *%rax
00000000000A2F93 mov %al,0x1AD(%rsp)
00000000000A2F9A jmp 0x00000000000A3839
00000000000A2F9F mov 0x1B0(%rsp),%rsi
00000000000A2FA7 mov 0x1B8(%rsp),%rdi
00000000000A2FAF movq $2,0x278(%rsp)
00000000000A2FBB mov 0x278(%rsp),%rdx
00000000000A2FC3 lea 0x305668,%rcx
00000000000A2FCA lea 0xCC840,%rax
00000000000A2FD1 call *%rax
00000000000A2FD3 mov %rdx,0x198(%rsp)
00000000000A2FDB mov %rax,0x1A0(%rsp)
00000000000A2FE3 jmp 0x00000000000A2FE5
00000000000A2FE5 mov 0x198(%rsp),%rsi
00000000000A2FED mov 0x1A0(%rsp),%rdi
00000000000A2FF5 call 0x0000000000031A00
00000000000A2FFA mov %rdx,0x188(%rsp)
00000000000A3002 mov %rax,0x190(%rsp)
00000000000A300A jmp 0x00000000000A300C
00000000000A300C mov 0x188(%rsp),%rdx
00000000000A3014 mov 0x190(%rsp),%rsi
00000000000A301C mov %rsi,%rax
00000000000A301F mov %rax,0x178(%rsp)
00000000000A3027 mov %rdx,%rax
00000000000A302A mov %rax,0x180(%rsp)
00000000000A3032 lea 0x280(%rsp),%rdi
00000000000A303A call 0x0000000000031A30
00000000000A303F jmp 0x00000000000A3041
00000000000A3041 mov $1,%eax
00000000000A3046 xor %ecx,%ecx
00000000000A3048 cmpq $0,0x280(%rsp)
00000000000A3051 cmove %rcx,%rax
00000000000A3055 cmp $1,%rax
00000000000A3059 jne 0x00000000000A30A5
00000000000A305B mov 0x1F0(%rsp),%rsi
00000000000A3063 mov 0x280(%rsp),%rdx
00000000000A306B mov 0x288(%rsp),%rcx
00000000000A3073 mov 0x290(%rsp),%rax
00000000000A307B mov %rax,0x168(%rsp)
00000000000A3083 mov 0x298(%rsp),%rax
00000000000A308B mov %rax,0x170(%rsp)
00000000000A3093 lea 0x2D8(%rsp),%rdi
00000000000A309B call 0x00000000000313B0
00000000000A30A0 jmp 0x00000000000A35DF
00000000000A30A5 mov 0x180(%rsp),%rcx
00000000000A30AD mov 0x178(%rsp),%rdx
00000000000A30B5 mov 0x1F0(%rsp),%rsi
00000000000A30BD lea 0x468(%rsp),%rdi
00000000000A30C5 call 0x00000000000313B0
00000000000A30CA jmp 0x00000000000A30CC
00000000000A30CC lea 0x430(%rsp),%rdi
00000000000A30D4 lea 0x468(%rsp),%rsi
00000000000A30DC call 0x0000000000077890
00000000000A30E1 jmp 0x00000000000A30E3
00000000000A30E3 mov 0x430(%rsp),%rax
00000000000A30EB test %rax,%rax
00000000000A30EE je 0x00000000000A30F6
00000000000A30F0 jmp 0x00000000000A30F2
00000000000A30F2 jmp 0x00000000000A3155
00000000000A30F4 ud2
00000000000A30F6 mov 0x438(%rsp),%rax
00000000000A30FE mov %rax,0x158(%rsp)
00000000000A3106 mov (%rax),%rdx
00000000000A3109 mov 8(%rax),%rcx
00000000000A310D mov %rdx,0x510(%rsp)
00000000000A3115 mov %rcx,0x518(%rsp)
00000000000A311D movb $1,0x508(%rsp)
00000000000A3125 mov 0x10(%rax),%rax
00000000000A3129 mov %rax,0x160(%rsp)
00000000000A3131 test %rax,%rax
00000000000A3134 je 0x00000000000A31F7
00000000000A313A jmp 0x00000000000A313C
00000000000A313C mov 0x160(%rsp),%rax
00000000000A3144 sub $1,%rax
00000000000A3148 je 0x00000000000A3239
00000000000A314E jmp 0x00000000000A3150
00000000000A3150 jmp 0x00000000000A32BF
00000000000A3155 mov 0x1F8(%rsp),%rdi
00000000000A315D movups 0x438(%rsp),%xmm0
00000000000A3165 movups 0x448(%rsp),%xmm1
00000000000A316D movups 0x458(%rsp),%xmm2
00000000000A3175 movaps %xmm2,0x4C0(%rsp)
00000000000A317D movaps %xmm1,0x4B0(%rsp)
00000000000A3185 movaps %xmm0,0x4A0(%rsp)
00000000000A318D movaps 0x4A0(%rsp),%xmm0
00000000000A3195 movaps 0x4B0(%rsp),%xmm1
00000000000A319D movaps 0x4C0(%rsp),%xmm2
00000000000A31A5 movaps %xmm2,0x4F0(%rsp)
00000000000A31AD movaps %xmm1,0x4E0(%rsp)
00000000000A31B5 movaps %xmm0,0x4D0(%rsp)
00000000000A31BD lea 0x305680,%rdx
00000000000A31C4 lea 0x4D0(%rsp),%rsi
00000000000A31CC call 0x0000000000075C50
00000000000A31D1 jmp 0x00000000000A31EE
00000000000A31D3 jmp 0x00000000000A2CC2
00000000000A31D8 mov %rax,%rcx
00000000000A31DB mov %edx,%eax
00000000000A31DD mov %rcx,0xE78(%rsp)
00000000000A31E5 mov %eax,0xE80(%rsp)
00000000000A31EC jmp 0x00000000000A31D3
00000000000A31EE jmp 0x00000000000A31F0
00000000000A31F0 jmp 0x00000000000A46B9
00000000000A31F5 ud2
00000000000A31F7 mov 0x158(%rsp),%rax
00000000000A31FF mov 0x18(%rax),%rcx
00000000000A3203 mov %rcx,0x138(%rsp)
00000000000A320B mov 0x20(%rax),%rax
00000000000A320F mov %rax,0x140(%rsp)
00000000000A3217 lea 0x248(%rsp),%rdi
00000000000A321F call 0x00000000000B5EB0
00000000000A3224 mov %rdx,0x148(%rsp)
00000000000A322C mov %rax,0x150(%rsp)
00000000000A3234 jmp 0x00000000000A3448
00000000000A3239 mov 0x518(%rsp),%rax
00000000000A3241 mov %rax,0x560(%rsp)
00000000000A3249 movups 0x508(%rsp),%xmm0
00000000000A3251 movaps %xmm0,0x550(%rsp)
00000000000A3259 movq $0,0x570(%rsp)
00000000000A3265 mov 0x560(%rsp),%rax
00000000000A326D mov %rax,0x530(%rsp)
00000000000A3275 movaps 0x550(%rsp),%xmm0
00000000000A327D movaps %xmm0,0x520(%rsp)
00000000000A3285 mov 0x570(%rsp),%rcx
00000000000A328D mov 0x578(%rsp),%rax
00000000000A3295 mov %rcx,0x538(%rsp)
00000000000A329D mov %rax,0x540(%rsp)
00000000000A32A5 lea 0x218(%rsp),%rdi
00000000000A32AD lea 0x520(%rsp),%rsi
00000000000A32B5 call 0x0000000000094DC0
00000000000A32BA jmp 0x00000000000A3443
00000000000A32BF lea 0x248(%rsp),%rdi
00000000000A32C7 call 0x00000000000B5EB0
00000000000A32CC mov %rdx,0x128(%rsp)
00000000000A32D4 mov %rax,0x130(%rsp)
00000000000A32DC jmp 0x00000000000A32DE
00000000000A32DE mov 0x128(%rsp),%rax
00000000000A32E6 mov 0x130(%rsp),%rcx
00000000000A32EE mov %rcx,0x630(%rsp)
00000000000A32F6 mov %rax,0x638(%rsp)
00000000000A32FE mov $1,%eax
00000000000A3303 xor %ecx,%ecx
00000000000A3305 cmpq $0,0x630(%rsp)
00000000000A330E cmove %rcx,%rax
00000000000A3312 cmp $1,%rax
00000000000A3316 jne 0x00000000000A33B6
00000000000A331C mov 0x630(%rsp),%rcx
00000000000A3324 mov 0x638(%rsp),%rax
00000000000A332C mov 0x518(%rsp),%rdx
00000000000A3334 mov %rdx,0x680(%rsp)
00000000000A333C movups 0x508(%rsp),%xmm0
00000000000A3344 movaps %xmm0,0x670(%rsp)
00000000000A334C mov %rcx,0x690(%rsp)
00000000000A3354 mov %rax,0x698(%rsp)
00000000000A335C mov 0x680(%rsp),%rax
00000000000A3364 mov %rax,0x650(%rsp)
00000000000A336C movaps 0x670(%rsp),%xmm0
00000000000A3374 movaps %xmm0,0x640(%rsp)
00000000000A337C mov 0x690(%rsp),%rcx
00000000000A3384 mov 0x698(%rsp),%rax
00000000000A338C mov %rcx,0x658(%rsp)
00000000000A3394 mov %rax,0x660(%rsp)
00000000000A339C lea 0x218(%rsp),%rdi
00000000000A33A4 lea 0x640(%rsp),%rsi
00000000000A33AC call 0x0000000000094DC0
00000000000A33B1 jmp 0x00000000000A343E
00000000000A33B6 mov 0x518(%rsp),%rax
00000000000A33BE mov %rax,0x6E0(%rsp)
00000000000A33C6 movups 0x508(%rsp),%xmm0
00000000000A33CE movaps %xmm0,0x6D0(%rsp)
00000000000A33D6 movq $0,0x6E8(%rsp)
00000000000A33E2 mov 0x6E0(%rsp),%rax
00000000000A33EA mov %rax,0x6B0(%rsp)
00000000000A33F2 movaps 0x6D0(%rsp),%xmm0
00000000000A33FA movaps %xmm0,0x6A0(%rsp)
00000000000A3402 mov 0x6E8(%rsp),%rcx
00000000000A340A mov 0x6F0(%rsp),%rax
00000000000A3412 mov %rcx,0x6B8(%rsp)
00000000000A341A mov %rax,0x6C0(%rsp)
00000000000A3422 lea 0x218(%rsp),%rdi
00000000000A342A lea 0x6A0(%rsp),%rsi
00000000000A3432 call 0x0000000000094DC0
00000000000A3437 jmp 0x00000000000A3439
00000000000A3439 jmp 0x00000000000A2CA3
00000000000A343E jmp 0x00000000000A2CA3
00000000000A3443 jmp 0x00000000000A2CA3
00000000000A3448 mov 0x148(%rsp),%rax
00000000000A3450 mov 0x150(%rsp),%rcx
00000000000A3458 mov %rcx,0x580(%rsp)
00000000000A3460 mov %rax,0x588(%rsp)
00000000000A3468 mov $1,%eax
00000000000A346D xor %ecx,%ecx
00000000000A346F cmpq $0,0x580(%rsp)
00000000000A3478 cmove %rcx,%rax
00000000000A347C cmp $1,%rax
00000000000A3480 jne 0x00000000000A3520
00000000000A3486 mov 0x580(%rsp),%rcx
00000000000A348E mov 0x588(%rsp),%rax
00000000000A3496 mov 0x518(%rsp),%rdx
00000000000A349E mov %rdx,0x5D0(%rsp)
00000000000A34A6 movups 0x508(%rsp),%xmm0
00000000000A34AE movaps %xmm0,0x5C0(%rsp)
00000000000A34B6 mov %rcx,0x5D8(%rsp)
00000000000A34BE mov %rax,0x5E0(%rsp)
00000000000A34C6 mov 0x5D0(%rsp),%rax
00000000000A34CE mov %rax,0x5A0(%rsp)
00000000000A34D6 movaps 0x5C0(%rsp),%xmm0
00000000000A34DE movaps %xmm0,0x590(%rsp)
00000000000A34E6 mov 0x5D8(%rsp),%rcx
00000000000A34EE mov 0x5E0(%rsp),%rax
00000000000A34F6 mov %rcx,0x5A8(%rsp)
00000000000A34FE mov %rax,0x5B0(%rsp)
00000000000A3506 lea 0x218(%rsp),%rdi
00000000000A350E lea 0x590(%rsp),%rsi
00000000000A3516 call 0x0000000000094DC0
00000000000A351B jmp 0x00000000000A35DA
00000000000A3520 mov 0x1F8(%rsp),%rdi
00000000000A3528 mov 0x140(%rsp),%rax
00000000000A3530 mov 0x138(%rsp),%rcx
00000000000A3538 mov 0x508(%rsp),%rdx
00000000000A3540 mov %rdx,0x618(%rsp)
00000000000A3548 mov 0x510(%rsp),%rdx
00000000000A3550 mov %rdx,0x620(%rsp)
00000000000A3558 mov 0x518(%rsp),%rdx
00000000000A3560 mov %rdx,0x628(%rsp)
00000000000A3568 mov 0x618(%rsp),%rdx
00000000000A3570 mov %rdx,0x5F0(%rsp)
00000000000A3578 mov 0x620(%rsp),%rdx
00000000000A3580 mov %rdx,0x5F8(%rsp)
00000000000A3588 mov 0x628(%rsp),%rdx
00000000000A3590 mov %rdx,0x600(%rsp)
00000000000A3598 mov %rcx,0x608(%rsp)
00000000000A35A0 mov %rax,0x610(%rsp)
00000000000A35A8 movb $0,0x5E8(%rsp)
00000000000A35B0 add $8,%rdi
00000000000A35B4 lea 0x5E8(%rsp),%rsi
00000000000A35BC mov $0x30,%edx
00000000000A35C1 call 0x000000000002E4B8
00000000000A35C6 mov 0x1F8(%rsp),%rax
00000000000A35CE movq $1,(%rax)
00000000000A35D5 jmp 0x00000000000A31F0
00000000000A35DA jmp 0x00000000000A2CA3
00000000000A35DF lea 0x2A0(%rsp),%rdi
00000000000A35E7 lea 0x2D8(%rsp),%rsi
00000000000A35EF call 0x0000000000077890
00000000000A35F4 jmp 0x00000000000A35F6
00000000000A35F6 mov 0x2A0(%rsp),%rax
00000000000A35FE test %rax,%rax
00000000000A3601 je 0x00000000000A3609
00000000000A3603 jmp 0x00000000000A3605
00000000000A3605 jmp 0x00000000000A3660
00000000000A3607 ud2
00000000000A3609 mov 0x2A8(%rsp),%rax
00000000000A3611 mov (%rax),%rdx
00000000000A3614 mov 8(%rax),%rcx
00000000000A3618 mov %rdx,0x380(%rsp)
00000000000A3620 mov %rcx,0x388(%rsp)
00000000000A3628 movb $1,0x378(%rsp)
00000000000A3630 mov 0x10(%rax),%rax
00000000000A3634 mov %rax,0x120(%rsp)
00000000000A363C test %rax,%rax
00000000000A363F je 0x00000000000A3700
00000000000A3645 jmp 0x00000000000A3647
00000000000A3647 mov 0x120(%rsp),%rax
00000000000A364F sub $1,%rax
00000000000A3653 je 0x00000000000A379A
00000000000A3659 jmp 0x00000000000A365B
00000000000A365B jmp 0x00000000000A3700
00000000000A3660 mov 0x1F8(%rsp),%rdi
00000000000A3668 movups 0x2A8(%rsp),%xmm0
00000000000A3670 movups 0x2B8(%rsp),%xmm1
00000000000A3678 movups 0x2C8(%rsp),%xmm2
00000000000A3680 movaps %xmm2,0x330(%rsp)
00000000000A3688 movaps %xmm1,0x320(%rsp)
00000000000A3690 movaps %xmm0,0x310(%rsp)
00000000000A3698 movaps 0x310(%rsp),%xmm0
00000000000A36A0 movaps 0x320(%rsp),%xmm1
00000000000A36A8 movaps 0x330(%rsp),%xmm2
00000000000A36B0 movaps %xmm2,0x360(%rsp)
00000000000A36B8 movaps %xmm1,0x350(%rsp)
00000000000A36C0 movaps %xmm0,0x340(%rsp)
00000000000A36C8 lea 0x305698,%rdx
00000000000A36CF lea 0x340(%rsp),%rsi
00000000000A36D7 call 0x0000000000075C50
00000000000A36DC jmp 0x00000000000A36F9
00000000000A36DE jmp 0x00000000000A2CC2
00000000000A36E3 mov %rax,%rcx
00000000000A36E6 mov %edx,%eax
00000000000A36E8 mov %rcx,0xE78(%rsp)
00000000000A36F0 mov %eax,0xE80(%rsp)
00000000000A36F7 jmp 0x00000000000A36DE
00000000000A36F9 jmp 0x00000000000A31F0
00000000000A36FE ud2
00000000000A3700 mov 0x170(%rsp),%rax
00000000000A3708 mov 0x168(%rsp),%rcx
00000000000A3710 mov 0x388(%rsp),%rdx
00000000000A3718 mov %rdx,0x3D0(%rsp)
00000000000A3720 movups 0x378(%rsp),%xmm0
00000000000A3728 movaps %xmm0,0x3C0(%rsp)
00000000000A3730 mov %rcx,0x3D8(%rsp)
00000000000A3738 mov %rax,0x3E0(%rsp)
00000000000A3740 mov 0x3D0(%rsp),%rax
00000000000A3748 mov %rax,0x3A0(%rsp)
00000000000A3750 movaps 0x3C0(%rsp),%xmm0
00000000000A3758 movaps %xmm0,0x390(%rsp)
00000000000A3760 mov 0x3D8(%rsp),%rcx
00000000000A3768 mov 0x3E0(%rsp),%rax
00000000000A3770 mov %rcx,0x3A8(%rsp)
00000000000A3778 mov %rax,0x3B0(%rsp)
00000000000A3780 lea 0x218(%rsp),%rdi
00000000000A3788 lea 0x390(%rsp),%rsi
00000000000A3790 call 0x0000000000094DC0
00000000000A3795 jmp 0x00000000000A3834
00000000000A379A mov 0x1F8(%rsp),%rdi
00000000000A37A2 mov 0x378(%rsp),%rax
00000000000A37AA mov %rax,0x418(%rsp)
00000000000A37B2 mov 0x380(%rsp),%rax
00000000000A37BA mov %rax,0x420(%rsp)
00000000000A37C2 mov 0x388(%rsp),%rax
00000000000A37CA mov %rax,0x428(%rsp)
00000000000A37D2 mov 0x418(%rsp),%rax
00000000000A37DA mov %rax,0x3F0(%rsp)
00000000000A37E2 mov 0x420(%rsp),%rax
00000000000A37EA mov %rax,0x3F8(%rsp)
00000000000A37F2 mov 0x428(%rsp),%rax
00000000000A37FA mov %rax,0x400(%rsp)
00000000000A3802 movb $1,0x3E8(%rsp)
00000000000A380A add $8,%rdi
00000000000A380E lea 0x3E8(%rsp),%rsi
00000000000A3816 mov $0x30,%edx
00000000000A381B call 0x000000000002E4B8
00000000000A3820 mov 0x1F8(%rsp),%rax
00000000000A3828 movq $1,(%rax)
00000000000A382F jmp 0x00000000000A31F0
00000000000A3834 jmp 0x00000000000A2CA3
00000000000A3839 mov 0x1AD(%rsp),%al
00000000000A3840 test $1,%al
00000000000A3842 jne 0x00000000000A3850
00000000000A3844 jmp 0x00000000000A3846
00000000000A3846 movb $0,0x6FF(%rsp)
00000000000A384E jmp 0x00000000000A387D
00000000000A3850 lea 0x3056B0,%rsi
00000000000A3857 lea 0x268(%rsp),%rdi
00000000000A385F call 0x00000000000322A0
00000000000A3864 mov %al,0x11F(%rsp)
00000000000A386B jmp 0x00000000000A386D
00000000000A386D mov 0x11F(%rsp),%al
00000000000A3874 and $1,%al
00000000000A3876 mov %al,0x6FF(%rsp)
00000000000A387D testb $1,0x6FF(%rsp)
00000000000A3885 jne 0x00000000000A38A9
00000000000A3887 mov 0x268(%rsp),%rsi
00000000000A388F mov 0x270(%rsp),%rdx
00000000000A3897 lea 0x230(%rsp),%rdi
00000000000A389F call 0x0000000000094CD0
00000000000A38A4 jmp 0x00000000000A46F1
00000000000A38A9 mov 0x1B0(%rsp),%rsi
00000000000A38B1 mov 0x1B8(%rsp),%rdi
00000000000A38B9 movq $1,0x700(%rsp)
00000000000A38C5 mov 0x700(%rsp),%rdx
00000000000A38CD lea 0x3056C0,%rcx
00000000000A38D4 lea 0xCC840,%rax
00000000000A38DB call *%rax
00000000000A38DD mov %rdx,0x108(%rsp)
00000000000A38E5 mov %rax,0x110(%rsp)
00000000000A38ED jmp 0x00000000000A38EF
00000000000A38EF mov 0x108(%rsp),%rsi
00000000000A38F7 mov 0x110(%rsp),%rdi
00000000000A38FF call 0x0000000000031A00
00000000000A3904 mov %rdx,0xF8(%rsp)
00000000000A390C mov %rax,0x100(%rsp)
00000000000A3914 jmp 0x00000000000A3916
00000000000A3916 mov 0xF8(%rsp),%rdx
00000000000A391E mov 0x100(%rsp),%rsi
00000000000A3926 lea 0x708(%rsp),%rdi
00000000000A392E call 0x0000000000031A30
00000000000A3933 jmp 0x00000000000A3935
00000000000A3935 mov $1,%eax
00000000000A393A xor %ecx,%ecx
00000000000A393C cmpq $0,0x708(%rsp)
00000000000A3945 cmove %rcx,%rax
00000000000A3949 cmp $1,%rax
00000000000A394D jne 0x00000000000A3999
00000000000A394F mov 0x708(%rsp),%rdi
00000000000A3957 mov 0x710(%rsp),%rsi
00000000000A395F mov 0x718(%rsp),%rax
00000000000A3967 mov %rax,0xD8(%rsp)
00000000000A396F mov 0x720(%rsp),%rax
00000000000A3977 mov %rax,0xE0(%rsp)
00000000000A397F call 0x00000000000319D0
00000000000A3984 mov %rdx,0xE8(%rsp)
00000000000A398C mov %rax,0xF0(%rsp)
00000000000A3994 jmp 0x00000000000A410C
00000000000A3999 mov 0x1B0(%rsp),%rsi
00000000000A39A1 mov 0x1B8(%rsp),%rdi
00000000000A39A9 lea 0xEE110,%rax
00000000000A39B0 call *%rax
00000000000A39B2 mov %rdx,0xC8(%rsp)
00000000000A39BA mov %rax,0xD0(%rsp)
00000000000A39C2 jmp 0x00000000000A39C4
00000000000A39C4 mov 0xC8(%rsp),%rdx
00000000000A39CC mov 0xD0(%rsp),%rsi
00000000000A39D4 lea 0xEF7E0,%rax
00000000000A39DB lea 0xAD8(%rsp),%rdi
00000000000A39E3 call *%rax
00000000000A39E5 jmp 0x00000000000A39E7
00000000000A39E7 lea 0xAB8(%rsp),%rdi
00000000000A39EF lea 0xAD8(%rsp),%rsi
00000000000A39F7 mov $1,%edx
00000000000A39FC call 0x0000000000063D60
00000000000A3A01 jmp 0x00000000000A3A03
00000000000A3A03 lea 0xA98(%rsp),%rdi
00000000000A3A0B lea 0xAB8(%rsp),%rsi
00000000000A3A13 call 0x0000000000061470
00000000000A3A18 jmp 0x00000000000A3A1A
00000000000A3A1A mov 0xA98(%rsp),%rax
00000000000A3A22 mov %rax,0xAF0(%rsp)
00000000000A3A2A mov 0xAA0(%rsp),%rax
00000000000A3A32 mov %rax,0xAF8(%rsp)
00000000000A3A3A mov 0xAA8(%rsp),%rax
00000000000A3A42 mov %rax,0xB00(%rsp)
00000000000A3A4A mov 0xAB0(%rsp),%rax
00000000000A3A52 mov %rax,0xB08(%rsp)
00000000000A3A5A lea 0xAF0(%rsp),%rdi
00000000000A3A62 call 0x0000000000061160
00000000000A3A67 mov %rdx,0xB8(%rsp)
00000000000A3A6F mov %rax,0xC0(%rsp)
00000000000A3A77 jmp 0x00000000000A3A79
00000000000A3A79 mov 0xB8(%rsp),%rax
00000000000A3A81 mov 0xC0(%rsp),%rcx
00000000000A3A89 mov %rcx,0xB10(%rsp)
00000000000A3A91 mov %rax,0xB18(%rsp)
00000000000A3A99 mov 0xB18(%rsp),%rax
00000000000A3AA1 test %rax,%rax
00000000000A3AA4 setne %al
00000000000A3AA7 movzbl %al,%eax
00000000000A3AAA je 0x00000000000A2CA3
00000000000A3AB0 jmp 0x00000000000A3AB2
00000000000A3AB2 jmp 0x00000000000A3AB6
00000000000A3AB4 ud2
00000000000A3AB6 mov 0x1F0(%rsp),%rsi
00000000000A3ABE mov 0xB10(%rsp),%rax
00000000000A3AC6 mov %rax,0xA8(%rsp)
00000000000A3ACE mov 0xB18(%rsp),%rax
00000000000A3AD6 mov %rax,0xB0(%rsp)
00000000000A3ADE movzbl (%rax),%edx
00000000000A3AE1 lea 0xB58(%rsp),%rdi
00000000000A3AE9 call 0x0000000000031300
00000000000A3AEE jmp 0x00000000000A3AF0
00000000000A3AF0 lea 0xB20(%rsp),%rdi
00000000000A3AF8 lea 0xB58(%rsp),%rsi
00000000000A3B00 call 0x0000000000077890
00000000000A3B05 jmp 0x00000000000A3B07
00000000000A3B07 mov 0xB20(%rsp),%rax
00000000000A3B0F test %rax,%rax
00000000000A3B12 je 0x00000000000A3B1A
00000000000A3B14 jmp 0x00000000000A3B16
00000000000A3B16 jmp 0x00000000000A3B73
00000000000A3B18 ud2
00000000000A3B1A mov 0xB0(%rsp),%rcx
00000000000A3B22 mov 0xB28(%rsp),%rax
00000000000A3B2A mov %rax,0x98(%rsp)
00000000000A3B32 mov (%rcx),%cl
00000000000A3B34 mov %cl,0xBF9(%rsp)
00000000000A3B3B movb $0,0xBF8(%rsp)
00000000000A3B43 mov 0x10(%rax),%rax
00000000000A3B47 mov %rax,0xA0(%rsp)
00000000000A3B4F test %rax,%rax
00000000000A3B52 je 0x00000000000A3C13
00000000000A3B58 jmp 0x00000000000A3B5A
00000000000A3B5A mov 0xA0(%rsp),%rax
00000000000A3B62 sub $1,%rax
00000000000A3B66 je 0x00000000000A3C38
00000000000A3B6C jmp 0x00000000000A3B6E
00000000000A3B6E jmp 0x00000000000A3CBB
00000000000A3B73 mov 0x1F8(%rsp),%rdi
00000000000A3B7B movups 0xB28(%rsp),%xmm0
00000000000A3B83 movups 0xB38(%rsp),%xmm1
00000000000A3B8B movups 0xB48(%rsp),%xmm2
00000000000A3B93 movaps %xmm2,0xBB0(%rsp)
00000000000A3B9B movaps %xmm1,0xBA0(%rsp)
00000000000A3BA3 movaps %xmm0,0xB90(%rsp)
00000000000A3BAB movaps 0xB90(%rsp),%xmm0
00000000000A3BB3 movaps 0xBA0(%rsp),%xmm1
00000000000A3BBB movaps 0xBB0(%rsp),%xmm2
00000000000A3BC3 movaps %xmm2,0xBE0(%rsp)
00000000000A3BCB movaps %xmm1,0xBD0(%rsp)
00000000000A3BD3 movaps %xmm0,0xBC0(%rsp)
00000000000A3BDB lea 0x3056D8,%rdx
00000000000A3BE2 lea 0xBC0(%rsp),%rsi
00000000000A3BEA call 0x0000000000075C50
00000000000A3BEF jmp 0x00000000000A3C0C
00000000000A3BF1 jmp 0x00000000000A2CC2
00000000000A3BF6 mov %rax,%rcx
00000000000A3BF9 mov %edx,%eax
00000000000A3BFB mov %rcx,0xE78(%rsp)
00000000000A3C03 mov %eax,0xE80(%rsp)
00000000000A3C0A jmp 0x00000000000A3BF1
00000000000A3C0C jmp 0x00000000000A31F0
00000000000A3C11 ud2
00000000000A3C13 mov 0x98(%rsp),%rax
00000000000A3C1B mov 0x18(%rax),%rcx
00000000000A3C1F mov 0x20(%rax),%rax
00000000000A3C23 mov %rcx,0xC68(%rsp)
00000000000A3C2B mov %rax,0xC70(%rsp)
00000000000A3C33 jmp 0x00000000000A3CDB
00000000000A3C38 mov 0xC08(%rsp),%rax
00000000000A3C40 mov %rax,0xC50(%rsp)
00000000000A3C48 movups 0xBF8(%rsp),%xmm0
00000000000A3C50 movaps %xmm0,0xC40(%rsp)
00000000000A3C58 movq $0,0xC58(%rsp)
00000000000A3C64 mov 0xC50(%rsp),%rax
00000000000A3C6C mov %rax,0xC20(%rsp)
00000000000A3C74 movaps 0xC40(%rsp),%xmm0
00000000000A3C7C movaps %xmm0,0xC10(%rsp)
00000000000A3C84 mov 0xC58(%rsp),%rcx
00000000000A3C8C mov 0xC60(%rsp),%rax
00000000000A3C94 mov %rcx,0xC28(%rsp)
00000000000A3C9C mov %rax,0xC30(%rsp)
00000000000A3CA4 lea 0x218(%rsp),%rdi
00000000000A3CAC lea 0xC10(%rsp),%rsi
00000000000A3CB4 call 0x0000000000094DC0
00000000000A3CB9 jmp 0x00000000000A3CFE
00000000000A3CBB mov 0x98(%rsp),%rax
00000000000A3CC3 mov 0x18(%rax),%rcx
00000000000A3CC7 mov 0x20(%rax),%rax
00000000000A3CCB mov %rcx,0xC68(%rsp)
00000000000A3CD3 mov %rax,0xC70(%rsp)
00000000000A3CDB mov 0x1B0(%rsp),%rsi
00000000000A3CE3 mov 0x1B8(%rsp),%rdi
00000000000A3CEB lea 0xEE0F0,%rax
00000000000A3CF2 call *%rax
00000000000A3CF4 mov %rax,0x90(%rsp)
00000000000A3CFC jmp 0x00000000000A3D03
00000000000A3CFE jmp 0x00000000000A3A5A
00000000000A3D03 mov 0x90(%rsp),%rax
00000000000A3D0B sub $1,%rax
00000000000A3D0F mov %rax,0x88(%rsp)
00000000000A3D17 setb %al
00000000000A3D1A test $1,%al
00000000000A3D1C jne 0x00000000000A3D35
00000000000A3D1E mov 0xA8(%rsp),%rax
00000000000A3D26 mov 0x88(%rsp),%rcx
00000000000A3D2E cmp %rcx,%rax
00000000000A3D31 jb 0x00000000000A3D74
00000000000A3D33 jmp 0x00000000000A3D55
00000000000A3D35 lea 0x257170,%rdi
00000000000A3D3C lea 0x3056F0,%rdx
00000000000A3D43 lea 0x2FB10,%rax
00000000000A3D4A mov $0x21,%esi
00000000000A3D4F call *%rax
00000000000A3D51 jmp 0x00000000000A3D53
00000000000A3D53 ud2
00000000000A3D55 lea 0x248(%rsp),%rdi
00000000000A3D5D call 0x00000000000B5EB0
00000000000A3D62 mov %rdx,0x78(%rsp)
00000000000A3D67 mov %rax,0x80(%rsp)
00000000000A3D6F jmp 0x00000000000A3E9F
00000000000A3D74 mov 0xA8(%rsp),%rax
00000000000A3D7C add $1,%rax
00000000000A3D80 mov %rax,0x70(%rsp)
00000000000A3D85 setb %al
00000000000A3D88 test $1,%al
00000000000A3D8A jne 0x00000000000A3DCD
00000000000A3D8C mov 0x1B0(%rsp),%rsi
00000000000A3D94 mov 0x1B8(%rsp),%rdi
00000000000A3D9C mov 0x70(%rsp),%rax
00000000000A3DA1 mov %rax,0xC78(%rsp)
00000000000A3DA9 mov 0xC78(%rsp),%rdx
00000000000A3DB1 lea 0x305720,%rcx
00000000000A3DB8 lea 0xCC840,%rax
00000000000A3DBF call *%rax
00000000000A3DC1 mov %rdx,0x60(%rsp)
00000000000A3DC6 mov %rax,0x68(%rsp)
00000000000A3DCB jmp 0x00000000000A3DEE
00000000000A3DCD lea 0x2571A0,%rdi
00000000000A3DD4 lea 0x305708,%rdx
00000000000A3DDB lea 0x2FB10,%rax
00000000000A3DE2 mov $0x1C,%esi
00000000000A3DE7 call *%rax
00000000000A3DE9 jmp 0x00000000000A3D53
00000000000A3DEE mov 0x60(%rsp),%rsi
00000000000A3DF3 mov 0x68(%rsp),%rdi
00000000000A3DF8 mov 0xC08(%rsp),%rax
00000000000A3E00 mov %rax,0xCC0(%rsp)
00000000000A3E08 movups 0xBF8(%rsp),%xmm0
00000000000A3E10 movaps %xmm0,0xCB0(%rsp)
00000000000A3E18 call 0x0000000000031A00
00000000000A3E1D mov %rdx,0x50(%rsp)
00000000000A3E22 mov %rax,0x58(%rsp)
00000000000A3E27 jmp 0x00000000000A3E29
00000000000A3E29 mov 0x50(%rsp),%rax
00000000000A3E2E mov 0x58(%rsp),%rcx
00000000000A3E33 mov %rcx,0xCD0(%rsp)
00000000000A3E3B mov %rax,0xCD8(%rsp)
00000000000A3E43 mov 0xCC0(%rsp),%rax
00000000000A3E4B mov %rax,0xC90(%rsp)
00000000000A3E53 movaps 0xCB0(%rsp),%xmm0
00000000000A3E5B movaps %xmm0,0xC80(%rsp)
00000000000A3E63 mov 0xCD0(%rsp),%rcx
00000000000A3E6B mov 0xCD8(%rsp),%rax
00000000000A3E73 mov %rcx,0xC98(%rsp)
00000000000A3E7B mov %rax,0xCA0(%rsp)
00000000000A3E83 lea 0x218(%rsp),%rdi
00000000000A3E8B lea 0xC80(%rsp),%rsi
00000000000A3E93 call 0x0000000000094DC0
00000000000A3E98 jmp 0x00000000000A3E9A
00000000000A3E9A jmp 0x00000000000A2CA3
00000000000A3E9F mov 0x78(%rsp),%rax
00000000000A3EA4 mov 0x80(%rsp),%rcx
00000000000A3EAC mov %rcx,0xCE0(%rsp)
00000000000A3EB4 mov %rax,0xCE8(%rsp)
00000000000A3EBC mov $1,%eax
00000000000A3EC1 xor %ecx,%ecx
00000000000A3EC3 cmpq $0,0xCE0(%rsp)
00000000000A3ECC cmove %rcx,%rax
00000000000A3ED0 cmp $1,%rax
00000000000A3ED4 jne 0x00000000000A3F74
00000000000A3EDA mov 0xCE0(%rsp),%rcx
00000000000A3EE2 mov 0xCE8(%rsp),%rax
00000000000A3EEA mov 0xC08(%rsp),%rdx
00000000000A3EF2 mov %rdx,0xD30(%rsp)
00000000000A3EFA movups 0xBF8(%rsp),%xmm0
00000000000A3F02 movaps %xmm0,0xD20(%rsp)
00000000000A3F0A mov %rcx,0xD38(%rsp)
00000000000A3F12 mov %rax,0xD40(%rsp)
00000000000A3F1A mov 0xD30(%rsp),%rax
00000000000A3F22 mov %rax,0xD00(%rsp)
00000000000A3F2A movaps 0xD20(%rsp),%xmm0
00000000000A3F32 movaps %xmm0,0xCF0(%rsp)
00000000000A3F3A mov 0xD38(%rsp),%rcx
00000000000A3F42 mov 0xD40(%rsp),%rax
00000000000A3F4A mov %rcx,0xD08(%rsp)
00000000000A3F52 mov %rax,0xD10(%rsp)
00000000000A3F5A lea 0x218(%rsp),%rdi
00000000000A3F62 lea 0xCF0(%rsp),%rsi
00000000000A3F6A call 0x0000000000094DC0
00000000000A3F6F jmp 0x00000000000A4107
00000000000A3F74 mov 0x98(%rsp),%rax
00000000000A3F7C mov 0x10(%rax),%rax
00000000000A3F80 mov %rax,0x48(%rsp)
00000000000A3F85 test %rax,%rax
00000000000A3F88 je 0x00000000000A3FA4
00000000000A3F8A jmp 0x00000000000A3F8C
00000000000A3F8C mov 0x48(%rsp),%rax
00000000000A3F91 sub $1,%rax
00000000000A3F95 je 0x00000000000A405E
00000000000A3F9B jmp 0x00000000000A3F9D
00000000000A3F9D jmp 0x00000000000A407F
00000000000A3FA2 ud2
00000000000A3FA4 mov 0x1F8(%rsp),%rdi
00000000000A3FAC mov 0xBF8(%rsp),%rax
00000000000A3FB4 mov %rax,0xD78(%rsp)
00000000000A3FBC mov 0xC00(%rsp),%rax
00000000000A3FC4 mov %rax,0xD80(%rsp)
00000000000A3FCC mov 0xC08(%rsp),%rax
00000000000A3FD4 mov %rax,0xD88(%rsp)
00000000000A3FDC mov 0xC68(%rsp),%rcx
00000000000A3FE4 mov 0xC70(%rsp),%rax
00000000000A3FEC mov 0xD78(%rsp),%rdx
00000000000A3FF4 mov %rdx,0xD50(%rsp)
00000000000A3FFC mov 0xD80(%rsp),%rdx
00000000000A4004 mov %rdx,0xD58(%rsp)
00000000000A400C mov 0xD88(%rsp),%rdx
00000000000A4014 mov %rdx,0xD60(%rsp)
00000000000A401C mov %rcx,0xD68(%rsp)
00000000000A4024 mov %rax,0xD70(%rsp)
00000000000A402C movb $0,0xD48(%rsp)
00000000000A4034 add $8,%rdi
00000000000A4038 lea 0xD48(%rsp),%rsi
00000000000A4040 mov $0x30,%edx
00000000000A4045 call 0x000000000002E4B8
00000000000A404A mov 0x1F8(%rsp),%rax
00000000000A4052 movq $1,(%rax)
00000000000A4059 jmp 0x00000000000A31F0
00000000000A405E lea 0x2571BC,%rdi
00000000000A4065 lea 0x305738,%rdx
00000000000A406C lea 0x2FB10,%rax
00000000000A4073 mov $0x28,%esi
00000000000A4078 call *%rax
00000000000A407A jmp 0x00000000000A3D53
00000000000A407F mov 0xC08(%rsp),%rax
00000000000A4087 mov %rax,0xDD0(%rsp)
00000000000A408F movups 0xBF8(%rsp),%xmm0
00000000000A4097 movaps %xmm0,0xDC0(%rsp)
00000000000A409F movq $0,0xDD8(%rsp)
00000000000A40AB mov 0xDD0(%rsp),%rax
00000000000A40B3 mov %rax,0xDA0(%rsp)
00000000000A40BB movaps 0xDC0(%rsp),%xmm0
00000000000A40C3 movaps %xmm0,0xD90(%rsp)
00000000000A40CB mov 0xDD8(%rsp),%rcx
00000000000A40D3 mov 0xDE0(%rsp),%rax
00000000000A40DB mov %rcx,0xDA8(%rsp)
00000000000A40E3 mov %rax,0xDB0(%rsp)
00000000000A40EB lea 0x218(%rsp),%rdi
00000000000A40F3 lea 0xD90(%rsp),%rsi
00000000000A40FB call 0x0000000000094DC0
00000000000A4100 jmp 0x00000000000A4102
00000000000A4102 jmp 0x00000000000A3A5A
00000000000A4107 jmp 0x00000000000A3A5A
00000000000A410C mov 0xE8(%rsp),%rdx
00000000000A4114 mov 0xF0(%rsp),%rsi
00000000000A411C lea 0x740(%rsp),%rdi
00000000000A4124 call 0x0000000000060C20
00000000000A4129 jmp 0x00000000000A412B
00000000000A412B lea 0x305750,%rdx
00000000000A4132 lea 0x728(%rsp),%rdi
00000000000A413A lea 0x740(%rsp),%rsi
00000000000A4142 call 0x000000000006E370
00000000000A4147 jmp 0x00000000000A4149
00000000000A4149 mov 0x728(%rsp),%rax
00000000000A4151 mov %rax,0x30(%rsp)
00000000000A4156 mov 0x730(%rsp),%rdi
00000000000A415E mov 0x738(%rsp),%rsi
00000000000A4166 call 0x0000000000052790
00000000000A416B mov %rdx,0x38(%rsp)
00000000000A4170 mov %rax,0x40(%rsp)
00000000000A4175 jmp 0x00000000000A4177
00000000000A4177 mov 0x38(%rsp),%rax
00000000000A417C mov 0x40(%rsp),%rcx
00000000000A4181 mov %rcx,0x758(%rsp)
00000000000A4189 mov %rax,0x760(%rsp)
00000000000A4191 lea 0xEF990,%rax
00000000000A4198 lea 0x758(%rsp),%rdi
00000000000A41A0 call *%rax
00000000000A41A2 mov %rax,0x28(%rsp)
00000000000A41A7 jmp 0x00000000000A41A9
00000000000A41A9 mov 0x28(%rsp),%rax
00000000000A41AE mov %rax,0x768(%rsp)
00000000000A41B6 mov 0x768(%rsp),%rax
00000000000A41BE test %rax,%rax
00000000000A41C1 setne %al
00000000000A41C4 movzbl %al,%eax
00000000000A41C7 je 0x00000000000A41CF
00000000000A41C9 jmp 0x00000000000A41CB
00000000000A41CB jmp 0x00000000000A41F1
00000000000A41CD ud2
00000000000A41CF mov 0x1F0(%rsp),%rsi
00000000000A41D7 mov 0x30(%rsp),%rax
00000000000A41DC movzbl (%rax),%edx
00000000000A41DF lea 0x938(%rsp),%rdi
00000000000A41E7 call 0x0000000000031300
00000000000A41EC jmp 0x00000000000A4458
00000000000A41F1 mov 0x1F0(%rsp),%rsi
00000000000A41F9 mov 0x768(%rsp),%rax
00000000000A4201 mov %rax,0x20(%rsp)
00000000000A4206 movzbl (%rax),%edx
00000000000A4209 lea 0x7A8(%rsp),%rdi
00000000000A4211 call 0x0000000000031300
00000000000A4216 jmp 0x00000000000A4218
00000000000A4218 lea 0x770(%rsp),%rdi
00000000000A4220 lea 0x7A8(%rsp),%rsi
00000000000A4228 call 0x0000000000077890
00000000000A422D jmp 0x00000000000A422F
00000000000A422F mov 0x770(%rsp),%rax
00000000000A4237 test %rax,%rax
00000000000A423A je 0x00000000000A4242
00000000000A423C jmp 0x00000000000A423E
00000000000A423E jmp 0x00000000000A4279
00000000000A4240 ud2
00000000000A4242 mov 0x20(%rsp),%rcx
00000000000A4247 mov 0x778(%rsp),%rax
00000000000A424F mov %rax,0x18(%rsp)
00000000000A4254 mov (%rcx),%cl
00000000000A4256 mov %cl,0x849(%rsp)
00000000000A425D movb $0,0x848(%rsp)
00000000000A4265 mov 0x10(%rax),%rax
00000000000A4269 test %rax,%rax
00000000000A426C je 0x00000000000A4319
00000000000A4272 jmp 0x00000000000A4274
00000000000A4274 jmp 0x00000000000A43D0
00000000000A4279 mov 0x1F8(%rsp),%rdi
00000000000A4281 movups 0x778(%rsp),%xmm0
00000000000A4289 movups 0x788(%rsp),%xmm1
00000000000A4291 movups 0x798(%rsp),%xmm2
00000000000A4299 movaps %xmm2,0x800(%rsp)
00000000000A42A1 movaps %xmm1,0x7F0(%rsp)
00000000000A42A9 movaps %xmm0,0x7E0(%rsp)
00000000000A42B1 movaps 0x7E0(%rsp),%xmm0
00000000000A42B9 movaps 0x7F0(%rsp),%xmm1
00000000000A42C1 movaps 0x800(%rsp),%xmm2
00000000000A42C9 movaps %xmm2,0x830(%rsp)
00000000000A42D1 movaps %xmm1,0x820(%rsp)
00000000000A42D9 movaps %xmm0,0x810(%rsp)
00000000000A42E1 lea 0x305768,%rdx
00000000000A42E8 lea 0x810(%rsp),%rsi
00000000000A42F0 call 0x0000000000075C50
00000000000A42F5 jmp 0x00000000000A4312
00000000000A42F7 jmp 0x00000000000A2CC2
00000000000A42FC mov %rax,%rcx
00000000000A42FF mov %edx,%eax
00000000000A4301 mov %rcx,0xE78(%rsp)
00000000000A4309 mov %eax,0xE80(%rsp)
00000000000A4310 jmp 0x00000000000A42F7
00000000000A4312 jmp 0x00000000000A31F0
00000000000A4317 ud2
00000000000A4319 mov 0x1F8(%rsp),%rdi
00000000000A4321 mov 0x18(%rsp),%rax
00000000000A4326 mov 0x18(%rax),%rcx
00000000000A432A mov 0x20(%rax),%rax
00000000000A432E mov 0x848(%rsp),%rdx
00000000000A4336 mov %rdx,0x8E8(%rsp)
00000000000A433E mov 0x850(%rsp),%rdx
00000000000A4346 mov %rdx,0x8F0(%rsp)
00000000000A434E mov 0x858(%rsp),%rdx
00000000000A4356 mov %rdx,0x8F8(%rsp)
00000000000A435E mov 0x8E8(%rsp),%rdx
00000000000A4366 mov %rdx,0x8C0(%rsp)
00000000000A436E mov 0x8F0(%rsp),%rdx
00000000000A4376 mov %rdx,0x8C8(%rsp)
00000000000A437E mov 0x8F8(%rsp),%rdx
00000000000A4386 mov %rdx,0x8D0(%rsp)
00000000000A438E mov %rcx,0x8D8(%rsp)
00000000000A4396 mov %rax,0x8E0(%rsp)
00000000000A439E movb $0,0x8B8(%rsp)
00000000000A43A6 add $8,%rdi
00000000000A43AA lea 0x8B8(%rsp),%rsi
00000000000A43B2 mov $0x30,%edx
00000000000A43B7 call 0x000000000002E4B8
00000000000A43BC mov 0x1F8(%rsp),%rax
00000000000A43C4 movq $1,(%rax)
00000000000A43CB jmp 0x00000000000A31F0
00000000000A43D0 mov 0x858(%rsp),%rax
00000000000A43D8 mov %rax,0x8A0(%rsp)
00000000000A43E0 movups 0x848(%rsp),%xmm0
00000000000A43E8 movaps %xmm0,0x890(%rsp)
00000000000A43F0 movq $0,0x8A8(%rsp)
00000000000A43FC mov 0x8A0(%rsp),%rax
00000000000A4404 mov %rax,0x870(%rsp)
00000000000A440C movaps 0x890(%rsp),%xmm0
00000000000A4414 movaps %xmm0,0x860(%rsp)
00000000000A441C mov 0x8A8(%rsp),%rcx
00000000000A4424 mov 0x8B0(%rsp),%rax
00000000000A442C mov %rcx,0x878(%rsp)
00000000000A4434 mov %rax,0x880(%rsp)
00000000000A443C lea 0x218(%rsp),%rdi
00000000000A4444 lea 0x860(%rsp),%rsi
00000000000A444C call 0x0000000000094DC0
00000000000A4451 jmp 0x00000000000A4453
00000000000A4453 jmp 0x00000000000A4191
00000000000A4458 lea 0x900(%rsp),%rdi
00000000000A4460 lea 0x938(%rsp),%rsi
00000000000A4468 call 0x0000000000077890
00000000000A446D jmp 0x00000000000A446F
00000000000A446F mov 0x900(%rsp),%rax
00000000000A4477 test %rax,%rax
00000000000A447A je 0x00000000000A4482
00000000000A447C jmp 0x00000000000A447E
00000000000A447E jmp 0x00000000000A44AC
00000000000A4480 ud2
00000000000A4482 mov 0x908(%rsp),%rax
00000000000A448A mov %rax,8(%rsp)
00000000000A448F movzbl 0x28(%rax),%edi
00000000000A4493 movzbl 0x29(%rax),%esi
00000000000A4497 lea 0x305798,%rdx
00000000000A449E call 0x000000000006E230
00000000000A44A3 mov %al,0x17(%rsp)
00000000000A44A7 jmp 0x00000000000A454A
00000000000A44AC mov 0x1F8(%rsp),%rdi
00000000000A44B4 movups 0x908(%rsp),%xmm0
00000000000A44BC movups 0x918(%rsp),%xmm1
00000000000A44C4 movups 0x928(%rsp),%xmm2
00000000000A44CC movaps %xmm2,0x990(%rsp)
00000000000A44D4 movaps %xmm1,0x980(%rsp)
00000000000A44DC movaps %xmm0,0x970(%rsp)
00000000000A44E4 movaps 0x970(%rsp),%xmm0
00000000000A44EC movaps 0x980(%rsp),%xmm1
00000000000A44F4 movaps 0x990(%rsp),%xmm2
00000000000A44FC movaps %xmm2,0x9C0(%rsp)
00000000000A4504 movaps %xmm1,0x9B0(%rsp)
00000000000A450C movaps %xmm0,0x9A0(%rsp)
00000000000A4514 lea 0x305780,%rdx
00000000000A451B lea 0x9A0(%rsp),%rsi
00000000000A4523 call 0x0000000000075C50
00000000000A4528 jmp 0x00000000000A4545
00000000000A452A jmp 0x00000000000A2CC2
00000000000A452F mov %rax,%rcx
00000000000A4532 mov %edx,%eax
00000000000A4534 mov %rcx,0xE78(%rsp)
00000000000A453C mov %eax,0xE80(%rsp)
00000000000A4543 jmp 0x00000000000A452A
00000000000A4545 jmp 0x00000000000A31F0
00000000000A454A mov 8(%rsp),%rax
00000000000A454F mov 0x17(%rsp),%cl
00000000000A4553 mov %cl,0x9D9(%rsp)
00000000000A455A movb $0,0x9D8(%rsp)
00000000000A4562 mov 0x10(%rax),%rax
00000000000A4566 mov %rax,(%rsp)
00000000000A456A test %rax,%rax
00000000000A456D je 0x00000000000A4585
00000000000A456F jmp 0x00000000000A4571
00000000000A4571 mov (%rsp),%rax
00000000000A4575 sub $1,%rax
00000000000A4579 je 0x00000000000A461F
00000000000A457F jmp 0x00000000000A4581
00000000000A4581 jmp 0x00000000000A4585
00000000000A4583 ud2
00000000000A4585 mov 0xE0(%rsp),%rax
00000000000A458D mov 0xD8(%rsp),%rcx
00000000000A4595 mov 0x9E8(%rsp),%rdx
00000000000A459D mov %rdx,0xA30(%rsp)
00000000000A45A5 movups 0x9D8(%rsp),%xmm0
00000000000A45AD movaps %xmm0,0xA20(%rsp)
00000000000A45B5 mov %rcx,0xA40(%rsp)
00000000000A45BD mov %rax,0xA48(%rsp)
00000000000A45C5 mov 0xA30(%rsp),%rax
00000000000A45CD mov %rax,0xA00(%rsp)
00000000000A45D5 movaps 0xA20(%rsp),%xmm0
00000000000A45DD movaps %xmm0,0x9F0(%rsp)
00000000000A45E5 mov 0xA40(%rsp),%rcx
00000000000A45ED mov 0xA48(%rsp),%rax
00000000000A45F5 mov %rcx,0xA08(%rsp)
00000000000A45FD mov %rax,0xA10(%rsp)
00000000000A4605 lea 0x218(%rsp),%rdi
00000000000A460D lea 0x9F0(%rsp),%rsi
00000000000A4615 call 0x0000000000094DC0
00000000000A461A jmp 0x00000000000A46EC
00000000000A461F mov 0x1F8(%rsp),%rdi
00000000000A4627 mov 0x9D8(%rsp),%rax
00000000000A462F mov %rax,0xA80(%rsp)
00000000000A4637 mov 0x9E0(%rsp),%rax
00000000000A463F mov %rax,0xA88(%rsp)
00000000000A4647 mov 0x9E8(%rsp),%rax
00000000000A464F mov %rax,0xA90(%rsp)
00000000000A4657 mov 0xA80(%rsp),%rax
00000000000A465F mov %rax,0xA58(%rsp)
00000000000A4667 mov 0xA88(%rsp),%rax
00000000000A466F mov %rax,0xA60(%rsp)
00000000000A4677 mov 0xA90(%rsp),%rax
00000000000A467F mov %rax,0xA68(%rsp)
00000000000A4687 movb $1,0xA50(%rsp)
00000000000A468F add $8,%rdi
00000000000A4693 lea 0xA50(%rsp),%rsi
00000000000A469B mov $0x30,%edx
00000000000A46A0 call 0x000000000002E4B8
00000000000A46A5 mov 0x1F8(%rsp),%rax
00000000000A46AD movq $1,(%rax)
00000000000A46B4 jmp 0x00000000000A31F0
00000000000A46B9 lea 0x230(%rsp),%rdi
00000000000A46C1 call 0x000000000009DBB0
00000000000A46C6 jmp 0x00000000000A46C8
00000000000A46C8 movb $0,0xE75(%rsp)
00000000000A46D0 lea 0x218(%rsp),%rdi
00000000000A46D8 call 0x000000000009BC00
00000000000A46DD jmp 0x00000000000A46DF
00000000000A46DF movb $0,0xE76(%rsp)
00000000000A46E7 jmp 0x00000000000A2EBB
00000000000A46EC jmp 0x00000000000A2CA3
00000000000A46F1 jmp 0x00000000000A2CA3

 Function call queue at function a2b50: [913f0, 912a0, b7500, b5eb0, 319d0, 94cd0, 31a00, 31a30, 313b0, 77890, 75c50, 94dc0, 322a0, 63d60, 61470, 61160, 31300, 60c20, 6e370, 52790, 6e230, 9bc00]

Analyzing function at 913f0
00000000000913F0 mov %rdi,%rax
00000000000913F3 mov 0x253718,%rdx
00000000000913FA mov 0x253720,%rcx
0000000000091401 mov %rdx,(%rdi)
0000000000091404 mov %rcx,8(%rdi)
0000000000091408 movq $0,0x10(%rdi)
0000000000091410 ret

 Function call queue at function 913f0: []

Analyzing function at 912a0
00000000000912A0 mov %rdi,%rax
00000000000912A3 mov 0x253718,%rdx
00000000000912AA mov 0x253720,%rcx
00000000000912B1 mov %rdx,(%rdi)
00000000000912B4 mov %rcx,8(%rdi)
00000000000912B8 movq $0,0x10(%rdi)
00000000000912C0 ret

 Function call queue at function 912a0: []

Analyzing function at b7500
00000000000B7500 mov %rsi,%rdx
00000000000B7503 mov %rdi,%rax
00000000000B7506 ret

 Function call queue at function b7500: []

Analyzing function at b5eb0
00000000000B5EB0 sub $0x28,%rsp
00000000000B5EB4 mov %rdi,0x18(%rsp)
00000000000B5EB9 callq *0x30F7B8
00000000000B5EBF mov %rax,0x20(%rsp)
00000000000B5EC4 mov 0x20(%rsp),%rdi
00000000000B5EC9 mov 0x18(%rsp),%rsi
00000000000B5ECE call 0x000000000006CB80
00000000000B5ED3 mov %rax,8(%rsp)
00000000000B5ED8 mov %rdx,0x10(%rsp)
00000000000B5EDD mov 0x10(%rsp),%rdx
00000000000B5EE2 mov 8(%rsp),%rax
00000000000B5EE7 add $0x28,%rsp
00000000000B5EEB ret

 Function call queue at function b5eb0: [6cb80]

Analyzing function at 6cb80
000000000006CB80 sub $0x48,%rsp
000000000006CB84 mov %rsi,0x18(%rsp)
000000000006CB89 mov %rdi,0x20(%rsp)
000000000006CB8E movb $1,0x47(%rsp)
000000000006CB93 mov 0x20(%rsp),%rax
000000000006CB98 test %rax,%rax
000000000006CB9B setne %al
000000000006CB9E movzbl %al,%eax
000000000006CBA1 je 0x000000000006CBA9
000000000006CBA3 jmp 0x000000000006CBA5
000000000006CBA5 jmp 0x000000000006CBB4
000000000006CBA7 ud2
000000000006CBA9 movq $0,0x28(%rsp)
000000000006CBB2 jmp 0x000000000006CBF0
000000000006CBB4 mov 0x18(%rsp),%rdi
000000000006CBB9 mov 0x20(%rsp),%rax
000000000006CBBE movb $0,0x47(%rsp)
000000000006CBC3 mov %rax,0x38(%rsp)
000000000006CBC8 mov 0x38(%rsp),%rsi
000000000006CBCD call 0x00000000000A7430
000000000006CBD2 mov %rax,8(%rsp)
000000000006CBD7 mov %rdx,0x10(%rsp)
000000000006CBDC mov 0x10(%rsp),%rax
000000000006CBE1 mov 8(%rsp),%rcx
000000000006CBE6 mov %rcx,0x28(%rsp)
000000000006CBEB mov %rax,0x30(%rsp)
000000000006CBF0 testb $1,0x47(%rsp)
000000000006CBF5 jne 0x000000000006CC06
000000000006CBF7 mov 0x28(%rsp),%rax
000000000006CBFC mov 0x30(%rsp),%rdx
000000000006CC01 add $0x48,%rsp
000000000006CC05 ret
000000000006CC06 jmp 0x000000000006CBF7

 Function call queue at function 6cb80: [a7430]

Analyzing function at a7430
00000000000A7430 sub $0x18,%rsp
00000000000A7434 mov %rsi,0x10(%rsp)
00000000000A7439 mov 0x10(%rsp),%rsi
00000000000A743E call 0x000000000009A640
00000000000A7443 mov %rax,(%rsp)
00000000000A7447 mov %rdx,8(%rsp)
00000000000A744C mov 8(%rsp),%rdx
00000000000A7451 mov (%rsp),%rax
00000000000A7455 add $0x18,%rsp
00000000000A7459 ret

 Function call queue at function a7430: []

Analyzing function at 319d0
00000000000319D0 sub $0x18,%rsp
00000000000319D4 call 0x0000000000089190
00000000000319D9 mov %rax,8(%rsp)
00000000000319DE mov %rdx,0x10(%rsp)
00000000000319E3 mov 0x10(%rsp),%rdx
00000000000319E8 mov 8(%rsp),%rax
00000000000319ED add $0x18,%rsp
00000000000319F1 ret

 Function call queue at function 319d0: []

Analyzing function at 94cd0
0000000000094CD0 sub $0x68,%rsp
0000000000094CD4 mov %rdi,0x18(%rsp)
0000000000094CD9 mov %rsi,0x20(%rsp)
0000000000094CDE mov %rdx,0x28(%rsp)
0000000000094CE3 movb $1,0x47(%rsp)
0000000000094CE8 mov 0x10(%rdi),%rax
0000000000094CEC mov %rax,0x30(%rsp)
0000000000094CF1 mov 8(%rdi),%rax
0000000000094CF5 mov %rax,0x60(%rsp)
0000000000094CFA mov 0x60(%rsp),%rax
0000000000094CFF mov %rax,0x38(%rsp)
0000000000094D04 jmp 0x0000000000094D26
0000000000094D06 testb $1,0x47(%rsp)
0000000000094D0B jne 0x0000000000094DBB
0000000000094D11 jmp 0x0000000000094DAF
0000000000094D16 mov %rax,%rcx
0000000000094D19 mov %edx,%eax
0000000000094D1B mov %rcx,0x48(%rsp)
0000000000094D20 mov %eax,0x50(%rsp)
0000000000094D24 jmp 0x0000000000094D06
0000000000094D26 mov 0x30(%rsp),%rax
0000000000094D2B mov 0x38(%rsp),%rcx
0000000000094D30 cmp %rcx,%rax
0000000000094D33 je 0x0000000000094D46
0000000000094D35 mov 0x18(%rsp),%rdi
0000000000094D3A call 0x0000000000091560
0000000000094D3F mov %rax,0x10(%rsp)
0000000000094D44 jmp 0x0000000000094D58
0000000000094D46 mov 0x18(%rsp),%rdi
0000000000094D4B mov 0x10(%rdi),%rsi
0000000000094D4F call 0x0000000000080C70
0000000000094D54 jmp 0x0000000000094D56
0000000000094D56 jmp 0x0000000000094D35
0000000000094D58 mov 0x10(%rsp),%rax
0000000000094D5D mov 0x18(%rsp),%rcx
0000000000094D62 mov 0x10(%rcx),%rcx
0000000000094D66 shl $4,%rcx
0000000000094D6A add %rcx,%rax
0000000000094D6D mov %rax,0x58(%rsp)
0000000000094D72 mov 0x58(%rsp),%rax
0000000000094D77 mov %rax,8(%rsp)
0000000000094D7C jmp 0x0000000000094D7E
0000000000094D7E mov 0x28(%rsp),%rdx
0000000000094D83 mov 0x20(%rsp),%rsi
0000000000094D88 mov 8(%rsp),%rdi
0000000000094D8D movb $0,0x47(%rsp)
0000000000094D92 call 0x0000000000068830
0000000000094D97 jmp 0x0000000000094D99
0000000000094D99 mov 0x18(%rsp),%rax
0000000000094D9E mov 0x10(%rax),%rcx
0000000000094DA2 add $1,%rcx
0000000000094DA6 mov %rcx,0x10(%rax)
0000000000094DAA add $0x68,%rsp
0000000000094DAE ret

 Function call queue at function 94cd0: [91560, 80c70, 68830]

Analyzing function at 91560
0000000000091560 push %rax
0000000000091561 call 0x0000000000081850
0000000000091566 mov %rax,(%rsp)
000000000009156A mov (%rsp),%rdi
000000000009156E call 0x0000000000032360
0000000000091573 mov (%rsp),%rax
0000000000091577 pop %rcx
0000000000091578 ret

 Function call queue at function 91560: [32360]

Analyzing function at 32360
0000000000032360 sub $0x28,%rsp
0000000000032364 mov %rdi,0x10(%rsp)
0000000000032369 movq $0,0x20(%rsp)
0000000000032372 mov 0x20(%rsp),%rdi
0000000000032377 callq *0x30FE80
000000000003237D mov %rax,0x18(%rsp)
0000000000032382 mov 0x18(%rsp),%rsi
0000000000032387 mov 0x10(%rsp),%rdi
000000000003238C callq *0x312630
0000000000032392 mov %al,0xF(%rsp)
0000000000032396 mov 0xF(%rsp),%al
000000000003239A and $1,%al
000000000003239C movzbl %al,%eax
000000000003239F add $0x28,%rsp
00000000000323A3 ret

 Function call queue at function 32360: []

Analyzing function at 80c70
0000000000080C70 sub $0x18,%rsp
0000000000080C74 mov $1,%edx
0000000000080C79 call 0x000000000007E120
0000000000080C7E mov %rax,8(%rsp)
0000000000080C83 mov %rdx,0x10(%rsp)
0000000000080C88 mov 0x10(%rsp),%rsi
0000000000080C8D mov 8(%rsp),%rdi
0000000000080C92 call 0x00000000000A06C0
0000000000080C97 add $0x18,%rsp
0000000000080C9B ret

 Function call queue at function 80c70: []

Analyzing function at 68830
0000000000068830 sub $0x10,%rsp
0000000000068834 mov %rsi,(%rsp)
0000000000068838 mov %rdx,8(%rsp)
000000000006883D mov (%rsp),%rax
0000000000068841 mov %rax,(%rdi)
0000000000068844 mov 8(%rsp),%rax
0000000000068849 mov %rax,8(%rdi)
000000000006884D add $0x10,%rsp
0000000000068851 ret

 Function call queue at function 68830: []

Analyzing function at 31a00
0000000000031A00 sub $0x18,%rsp
0000000000031A04 call 0x0000000000089160
0000000000031A09 mov %rax,8(%rsp)
0000000000031A0E mov %rdx,0x10(%rsp)
0000000000031A13 mov 0x10(%rsp),%rdx
0000000000031A18 mov 8(%rsp),%rax
0000000000031A1D add $0x18,%rsp
0000000000031A21 ret

 Function call queue at function 31a00: []

Analyzing function at 31a30
0000000000031A30 sub $0x118,%rsp
0000000000031A37 mov %rdx,0x78(%rsp)
0000000000031A3C mov %rsi,%rax
0000000000031A3F mov 0x78(%rsp),%rsi
0000000000031A44 mov %rax,0x80(%rsp)
0000000000031A4C mov %rdi,%rax
0000000000031A4F mov 0x80(%rsp),%rdi
0000000000031A57 mov %rax,0x88(%rsp)
0000000000031A5F mov %rax,0x90(%rsp)
0000000000031A67 call 0x00000000000319D0
0000000000031A6C mov %rax,0x98(%rsp)
0000000000031A74 mov %rdx,0xA0(%rsp)
0000000000031A7C mov 0xA0(%rsp),%rsi
0000000000031A84 mov 0x98(%rsp),%rdi
0000000000031A8C lea 0xEE110,%rax
0000000000031A93 call *%rax
0000000000031A95 mov %rdx,0xC0(%rsp)
0000000000031A9D mov %rax,0xB8(%rsp)
0000000000031AA5 lea 0xB8(%rsp),%rdi
0000000000031AAD call 0x0000000000054470
0000000000031AB2 mov %rdx,0xB0(%rsp)
0000000000031ABA mov %rax,0xA8(%rsp)
0000000000031AC2 cmpq $1,0xA8(%rsp)
0000000000031ACB jne 0x0000000000031AF8
0000000000031ACD mov 0x78(%rsp),%rsi
0000000000031AD2 mov 0x80(%rsp),%rdi
0000000000031ADA mov 0xB0(%rsp),%rax
0000000000031AE2 mov %rax,0x60(%rsp)
0000000000031AE7 call 0x00000000000319D0
0000000000031AEC mov %rax,0x68(%rsp)
0000000000031AF1 mov %rdx,0x70(%rsp)
0000000000031AF6 jmp 0x0000000000031B0C
0000000000031AF8 mov 0x88(%rsp),%rax
0000000000031B00 movq $0,(%rax)
0000000000031B07 jmp 0x0000000000031C77
0000000000031B0C mov 0x60(%rsp),%rcx
0000000000031B11 mov 0x70(%rsp),%rdx
0000000000031B16 mov 0x68(%rsp),%rsi
0000000000031B1B lea 0xC8(%rsp),%rdi
0000000000031B23 lea 0x3020F0,%r8
0000000000031B2A callq *0x313100
0000000000031B30 mov 0xC8(%rsp),%rdi
0000000000031B38 mov %rdi,0x38(%rsp)
0000000000031B3D mov 0xD0(%rsp),%rsi
0000000000031B45 mov %rsi,0x40(%rsp)
0000000000031B4A mov 0xD8(%rsp),%rax
0000000000031B52 mov %rax,0x48(%rsp)
0000000000031B57 mov 0xE0(%rsp),%rax
0000000000031B5F mov %rax,0x50(%rsp)
0000000000031B64 callq *0x3123A0
0000000000031B6A mov %al,0x5F(%rsp)
0000000000031B6E mov 0x5F(%rsp),%al
0000000000031B72 xor $0xFF,%al
0000000000031B74 test $1,%al
0000000000031B76 jne 0x0000000000031B82
0000000000031B78 movb $0,0xEF(%rsp)
0000000000031B80 jmp 0x0000000000031B97
0000000000031B82 mov 0x50(%rsp),%rax
0000000000031B87 cmp $2,%rax
0000000000031B8B setae %al
0000000000031B8E and $1,%al
0000000000031B90 mov %al,0xEF(%rsp)
0000000000031B97 testb $1,0xEF(%rsp)
0000000000031B9F je 0x0000000000031AF8
0000000000031BA5 mov 0x40(%rsp),%rsi
0000000000031BAA mov 0x38(%rsp),%rdi
0000000000031BAF call 0x0000000000031A00
0000000000031BB4 mov %rax,0x28(%rsp)
0000000000031BB9 mov %rdx,0x30(%rsp)
0000000000031BBE mov 0x50(%rsp),%rsi
0000000000031BC3 mov 0x48(%rsp),%rdi
0000000000031BC8 movq $1,0x110(%rsp)
0000000000031BD4 mov 0x110(%rsp),%rdx
0000000000031BDC lea 0x302108,%rcx
0000000000031BE3 callq *0x3102D8
0000000000031BE9 mov %rax,0x18(%rsp)
0000000000031BEE mov %rdx,0x20(%rsp)
0000000000031BF3 mov 0x20(%rsp),%rsi
0000000000031BF8 mov 0x18(%rsp),%rdi
0000000000031BFD call 0x0000000000031A00
0000000000031C02 mov %rax,8(%rsp)
0000000000031C07 mov %rdx,0x10(%rsp)
0000000000031C0C mov 0x88(%rsp),%rax
0000000000031C14 mov 0x10(%rsp),%rcx
0000000000031C19 mov 8(%rsp),%rdx
0000000000031C1E mov 0x30(%rsp),%rsi
0000000000031C23 mov 0x28(%rsp),%rdi
0000000000031C28 mov %rdi,0xF0(%rsp)
0000000000031C30 mov %rsi,0xF8(%rsp)
0000000000031C38 mov %rdx,0x100(%rsp)
0000000000031C40 mov %rcx,0x108(%rsp)
0000000000031C48 mov 0xF0(%rsp),%rcx
0000000000031C50 mov %rcx,(%rax)
0000000000031C53 mov 0xF8(%rsp),%rcx
0000000000031C5B mov %rcx,8(%rax)
0000000000031C5F mov 0x100(%rsp),%rcx
0000000000031C67 mov %rcx,0x10(%rax)
0000000000031C6B mov 0x108(%rsp),%rcx
0000000000031C73 mov %rcx,0x18(%rax)
0000000000031C77 mov 0x90(%rsp),%rax
0000000000031C7F add $0x118,%rsp
0000000000031C86 ret

 Function call queue at function 31a30: [54470]

Analyzing function at 54470
0000000000054470 sub $0xB8,%rsp
0000000000054477 mov %rdi,0x58(%rsp)
000000000005447C mov (%rdi),%rdi
000000000005447F mov %rdi,0x60(%rsp)
0000000000054484 lea 0xEF560,%rax
000000000005448B call *%rax
000000000005448D jmp 0x00000000000544AA
000000000005448F jmp 0x0000000000054697
0000000000054494 mov %rax,%rcx
0000000000054497 mov %edx,%eax
0000000000054499 mov %rcx,0xA0(%rsp)
00000000000544A1 mov %eax,0xA8(%rsp)
00000000000544A8 jmp 0x000000000005448F
00000000000544AA jmp 0x00000000000544AC
00000000000544AC mov $1,%eax
00000000000544B1 cmp $0,%rax
00000000000544B5 jne 0x00000000000544D3
00000000000544B7 mov 0x58(%rsp),%rax
00000000000544BC mov 8(%rax),%rdi
00000000000544C0 lea 0xED580,%rax
00000000000544C7 call *%rax
00000000000544C9 mov %rax,0x50(%rsp)
00000000000544CE jmp 0x0000000000054559
00000000000544D3 mov 0x58(%rsp),%rax
00000000000544D8 mov 8(%rax),%rdi
00000000000544DC lea 0xED580,%rax
00000000000544E3 call *%rax
00000000000544E5 mov %rax,0x48(%rsp)
00000000000544EA jmp 0x00000000000544EC
00000000000544EC mov 0x60(%rsp),%rdi
00000000000544F1 lea 0xEF560,%rax
00000000000544F8 call *%rax
00000000000544FA mov %rax,0x40(%rsp)
00000000000544FF jmp 0x0000000000054501
0000000000054501 mov 0x40(%rsp),%rdi
0000000000054506 lea 0xEDF30,%rax
000000000005450D call *%rax
000000000005450F mov %rax,0x38(%rsp)
0000000000054514 jmp 0x0000000000054516
0000000000054516 mov 0x38(%rsp),%rcx
000000000005451B mov 0x48(%rsp),%rax
0000000000054520 sub %rcx,%rax
0000000000054523 mov %rax,0xB0(%rsp)
000000000005452B mov 0xB0(%rsp),%rax
0000000000054533 mov %rax,0x30(%rsp)
0000000000054538 mov 0x30(%rsp),%rax
000000000005453D shr $0,%rax
0000000000054541 mov %rax,0x80(%rsp)
0000000000054549 jmp 0x000000000005454B
000000000005454B movq $0,0x88(%rsp)
0000000000054557 jmp 0x00000000000545A4
0000000000054559 mov 0x60(%rsp),%rdi
000000000005455E lea 0xEF560,%rax
0000000000054565 call *%rax
0000000000054567 mov %rax,0x28(%rsp)
000000000005456C jmp 0x000000000005456E
000000000005456E mov 0x28(%rsp),%rdi
0000000000054573 lea 0xEDF30,%rax
000000000005457A call *%rax
000000000005457C mov %rax,0x20(%rsp)
0000000000054581 jmp 0x0000000000054583
0000000000054583 mov 0x20(%rsp),%rcx
0000000000054588 mov 0x50(%rsp),%rax
000000000005458D sub %rcx,%rax
0000000000054590 mov %rax,0x18(%rsp)
0000000000054595 mov 0x18(%rsp),%rax
000000000005459A mov %rax,0x80(%rsp)
00000000000545A2 jmp 0x000000000005454B
00000000000545A4 mov 0x58(%rsp),%rdi
00000000000545A9 lea 0xEF990,%rax
00000000000545B0 call *%rax
00000000000545B2 mov %rax,0x10(%rsp)
00000000000545B7 jmp 0x00000000000545B9
00000000000545B9 mov 0x10(%rsp),%rax
00000000000545BE mov %rax,0x90(%rsp)
00000000000545C6 mov $1,%eax
00000000000545CB xor %ecx,%ecx
00000000000545CD cmpq $0,0x90(%rsp)
00000000000545D6 cmove %rcx,%rax
00000000000545DA cmp $1,%rax
00000000000545DE jne 0x0000000000054608
00000000000545E0 mov 0x90(%rsp),%rax
00000000000545E8 mov %rax,0x98(%rsp)
00000000000545F0 mov 0x98(%rsp),%rsi
00000000000545F8 lea 0x68(%rsp),%rdi
00000000000545FD call 0x00000000000A6470
0000000000054602 mov %al,0xF(%rsp)
0000000000054606 jmp 0x0000000000054623
0000000000054608 movq $0,0x70(%rsp)
0000000000054611 mov 0x70(%rsp),%rax
0000000000054616 mov 0x78(%rsp),%rdx
000000000005461B add $0xB8,%rsp
0000000000054622 ret
0000000000054623 mov 0xF(%rsp),%al
0000000000054627 test $1,%al
0000000000054629 jne 0x0000000000054646
000000000005462B jmp 0x000000000005462D
000000000005462D mov 0x88(%rsp),%rax
0000000000054635 add $1,%rax
0000000000054639 mov %rax,(%rsp)
000000000005463D setb %al
0000000000054640 test $1,%al
0000000000054642 jne 0x0000000000054677
0000000000054644 jmp 0x0000000000054666
0000000000054646 mov 0x88(%rsp),%rax
000000000005464E mov 0x88(%rsp),%rax
0000000000054656 mov %rax,0x78(%rsp)
000000000005465B movq $1,0x70(%rsp)
0000000000054664 jmp 0x0000000000054611
0000000000054666 mov (%rsp),%rax
000000000005466A mov %rax,0x88(%rsp)
0000000000054672 jmp 0x00000000000545A4
0000000000054677 lea 0x253E50,%rdi
000000000005467E lea 0x302C08,%rdx
0000000000054685 lea 0x2FB10,%rax
000000000005468C mov $0x1C,%esi
0000000000054691 call *%rax
0000000000054693 jmp 0x0000000000054695
0000000000054695 ud2
0000000000054697 mov 0xA0(%rsp),%rdi
000000000005469F call 0x000000000002E3D0
00000000000546A4 ud2

 Function call queue at function 54470: [a6470]

Analyzing function at a6470
00000000000A6470 cmpb $0x3D,(%rsi)
00000000000A6473 sete %al
00000000000A6476 and $1,%al
00000000000A6478 movzbl %al,%eax
00000000000A647B ret

 Function call queue at function a6470: []

Analyzing function at 313b0
00000000000313B0 sub $0x88,%rsp
00000000000313B7 mov %rdi,(%rsp)
00000000000313BB mov %rdi,8(%rsp)
00000000000313C0 mov %rdx,0x10(%rsp)
00000000000313C5 mov %rcx,0x18(%rsp)
00000000000313CA mov (%rsi),%rdi
00000000000313CD mov 8(%rsi),%rsi
00000000000313D1 call 0x00000000000A2A80
00000000000313D6 mov %rdx,0x30(%rsp)
00000000000313DB mov %rax,0x28(%rsp)
00000000000313E0 lea 0x10(%rsp),%rax
00000000000313E5 mov %rax,0x38(%rsp)
00000000000313EA mov 0x38(%rsp),%rsi
00000000000313EF lea 0x28(%rsp),%rdi
00000000000313F4 call 0x0000000000053610
00000000000313F9 mov %rax,0x20(%rsp)
00000000000313FE mov 0x20(%rsp),%rax
0000000000031403 test %rax,%rax
0000000000031406 setne %al
0000000000031409 movzbl %al,%eax
000000000003140C je 0x0000000000031414
000000000003140E jmp 0x0000000000031410
0000000000031410 jmp 0x000000000003142A
0000000000031412 ud2
0000000000031414 mov 0x10(%rsp),%rsi
0000000000031419 mov 0x18(%rsp),%rdx
000000000003141E lea 0x70(%rsp),%rdi
0000000000031423 call 0x0000000000088E10
0000000000031428 jmp 0x000000000003144E
000000000003142A mov (%rsp),%rax
000000000003142E mov 0x20(%rsp),%rcx
0000000000031433 mov (%rcx),%rcx
0000000000031436 mov %rcx,8(%rax)
000000000003143A movq $0,(%rax)
0000000000031441 mov 8(%rsp),%rax
0000000000031446 add $0x88,%rsp
000000000003144D ret
000000000003144E mov (%rsp),%rdi
0000000000031452 mov 0x70(%rsp),%rax
0000000000031457 mov %rax,0x48(%rsp)
000000000003145C mov 0x78(%rsp),%rax
0000000000031461 mov %rax,0x50(%rsp)
0000000000031466 mov 0x80(%rsp),%rax
000000000003146E mov %rax,0x58(%rsp)
0000000000031473 movb $3,0x40(%rsp)
0000000000031478 add $8,%rdi
000000000003147C lea 0x40(%rsp),%rsi
0000000000031481 mov $0x30,%edx
0000000000031486 call 0x000000000002E4B8
000000000003148B mov (%rsp),%rax
000000000003148F movq $1,(%rax)
0000000000031496 jmp 0x0000000000031441

 Function call queue at function 313b0: [a2a80, 53610, 88e10]

Analyzing function at a2a80
00000000000A2A80 sub $0x18,%rsp
00000000000A2A84 call 0x00000000000520B0
00000000000A2A89 mov %rax,8(%rsp)
00000000000A2A8E mov %rdx,0x10(%rsp)
00000000000A2A93 mov 0x10(%rsp),%rdx
00000000000A2A98 mov 8(%rsp),%rax
00000000000A2A9D add $0x18,%rsp
00000000000A2AA1 ret

 Function call queue at function a2a80: []

Analyzing function at 53610
0000000000053610 sub $0x58,%rsp
0000000000053614 mov %rdi,0x18(%rsp)
0000000000053619 mov %rsi,0x20(%rsp)
000000000005361E mov 0x18(%rsp),%rdi
0000000000053623 call 0x0000000000053F30
0000000000053628 mov %rax,0x10(%rsp)
000000000005362D jmp 0x0000000000053641
000000000005362F jmp 0x00000000000536A8
0000000000053631 mov %rax,%rcx
0000000000053634 mov %edx,%eax
0000000000053636 mov %rcx,0x48(%rsp)
000000000005363B mov %eax,0x50(%rsp)
000000000005363F jmp 0x000000000005362F
0000000000053641 mov 0x10(%rsp),%rax
0000000000053646 mov %rax,0x30(%rsp)
000000000005364B mov $1,%eax
0000000000053650 xor %ecx,%ecx
0000000000053652 cmpq $0,0x30(%rsp)
0000000000053658 cmove %rcx,%rax
000000000005365C cmp $1,%rax
0000000000053660 jne 0x000000000005368B
0000000000053662 mov 0x30(%rsp),%rax
0000000000053667 mov %rax,0x38(%rsp)
000000000005366C lea 0x38(%rsp),%rax
0000000000053671 mov %rax,0x40(%rsp)
0000000000053676 mov 0x40(%rsp),%rsi
000000000005367B lea 0x20(%rsp),%rdi
0000000000053680 call 0x00000000000A4780
0000000000053685 mov %al,0xF(%rsp)
0000000000053689 jmp 0x000000000005369E
000000000005368B movq $0,0x28(%rsp)
0000000000053694 mov 0x28(%rsp),%rax
0000000000053699 add $0x58,%rsp
000000000005369D ret
000000000005369E mov 0xF(%rsp),%al
00000000000536A2 test $1,%al
00000000000536A4 jne 0x00000000000536B9
00000000000536A6 jmp 0x00000000000536B4
00000000000536A8 mov 0x48(%rsp),%rdi
00000000000536AD call 0x000000000002E3D0
00000000000536B2 ud2
00000000000536B4 jmp 0x000000000005361E
00000000000536B9 mov 0x38(%rsp),%rax
00000000000536BE mov %rax,0x28(%rsp)
00000000000536C3 jmp 0x0000000000053694

 Function call queue at function 53610: [53f30, a4780]

Analyzing function at 53f30
0000000000053F30 sub $0x48,%rsp
0000000000053F34 mov %rdi,0x20(%rsp)
0000000000053F39 mov (%rdi),%rdi
0000000000053F3C call 0x00000000000842A0
0000000000053F41 mov %rax,0x28(%rsp)
0000000000053F46 mov 0x28(%rsp),%rdi
0000000000053F4B call 0x00000000000A28F0
0000000000053F50 jmp 0x0000000000053F52
0000000000053F52 mov $8,%eax
0000000000053F57 cmp $0,%rax
0000000000053F5B jne 0x0000000000053F5F
0000000000053F5D jmp 0x0000000000053F6F
0000000000053F5F mov 0x20(%rsp),%rax
0000000000053F64 mov 8(%rax),%rdi
0000000000053F68 call 0x00000000000A29D0
0000000000053F6D jmp 0x0000000000053F6F
0000000000053F6F mov 0x20(%rsp),%rax
0000000000053F74 mov (%rax),%rdi
0000000000053F77 call 0x00000000000842A0
0000000000053F7C mov %rax,0x18(%rsp)
0000000000053F81 mov 0x18(%rsp),%rax
0000000000053F86 mov 0x20(%rsp),%rcx
0000000000053F8B cmp 8(%rcx),%rax
0000000000053F8F je 0x0000000000053FE7
0000000000053F91 mov 0x20(%rsp),%rax
0000000000053F96 mov (%rax),%rdi
0000000000053F99 call 0x00000000000842A0
0000000000053F9E mov %rax,%rcx
0000000000053FA1 mov 0x20(%rsp),%rax
0000000000053FA6 mov %rcx,8(%rsp)
0000000000053FAB mov (%rax),%rdi
0000000000053FAE call 0x00000000000842A0
0000000000053FB3 add $8,%rax
0000000000053FB7 mov %rax,0x40(%rsp)
0000000000053FBC mov 0x40(%rsp),%rdi
0000000000053FC1 call 0x00000000000835E0
0000000000053FC6 mov 0x20(%rsp),%rcx
0000000000053FCB mov %rax,%rdx
0000000000053FCE mov 8(%rsp),%rax
0000000000053FD3 mov %rdx,(%rcx)
0000000000053FD6 mov %rax,0x38(%rsp)
0000000000053FDB mov 0x38(%rsp),%rax
0000000000053FE0 mov %rax,0x10(%rsp)
0000000000053FE5 jmp 0x0000000000053FFA
0000000000053FE7 movq $0,0x30(%rsp)
0000000000053FF0 mov 0x30(%rsp),%rax
0000000000053FF5 add $0x48,%rsp
0000000000053FF9 ret
0000000000053FFA mov 0x10(%rsp),%rax
0000000000053FFF mov %rax,0x30(%rsp)
0000000000054004 jmp 0x0000000000053FF0

 Function call queue at function 53f30: [a28f0, a29d0, 842a0, 835e0]

Analyzing function at a28f0
00000000000A28F0 sub $0x28,%rsp
00000000000A28F4 mov %rdi,0x10(%rsp)
00000000000A28F9 movq $0,0x20(%rsp)
00000000000A2902 mov 0x20(%rsp),%rdi
00000000000A2907 callq *0x30FE80
00000000000A290D mov %rax,0x18(%rsp)
00000000000A2912 mov 0x18(%rsp),%rsi
00000000000A2917 mov 0x10(%rsp),%rdi
00000000000A291C callq *0x312630
00000000000A2922 mov %al,0xF(%rsp)
00000000000A2926 mov 0xF(%rsp),%al
00000000000A292A and $1,%al
00000000000A292C movzbl %al,%eax
00000000000A292F add $0x28,%rsp
00000000000A2933 ret

 Function call queue at function a28f0: []

Analyzing function at a29d0
00000000000A29D0 sub $0x28,%rsp
00000000000A29D4 mov %rdi,0x10(%rsp)
00000000000A29D9 movq $0,0x20(%rsp)
00000000000A29E2 mov 0x20(%rsp),%rdi
00000000000A29E7 callq *0x3149C8
00000000000A29ED mov %rax,0x18(%rsp)
00000000000A29F2 mov 0x18(%rsp),%rsi
00000000000A29F7 mov 0x10(%rsp),%rdi
00000000000A29FC callq *0x3107A0
00000000000A2A02 mov %al,0xF(%rsp)
00000000000A2A06 mov 0xF(%rsp),%al
00000000000A2A0A and $1,%al
00000000000A2A0C movzbl %al,%eax
00000000000A2A0F add $0x28,%rsp
00000000000A2A13 ret

 Function call queue at function a29d0: []

Analyzing function at 842a0
00000000000842A0 mov %rdi,%rax
00000000000842A3 ret

 Function call queue at function 842a0: []

Analyzing function at 835e0
00000000000835E0 push %rax
00000000000835E1 mov %rdi,(%rsp)
00000000000835E5 mov (%rsp),%rax
00000000000835E9 pop %rcx
00000000000835EA ret

 Function call queue at function 835e0: []

Analyzing function at a4780
00000000000A4780 push %rax
00000000000A4781 mov %rdi,%rax
00000000000A4784 mov (%rsi),%rcx
00000000000A4787 mov (%rcx),%rdi
00000000000A478A mov (%rax),%rsi
00000000000A478D call 0x0000000000064AA0
00000000000A4792 mov %al,7(%rsp)
00000000000A4796 mov 7(%rsp),%al
00000000000A479A and $1,%al
00000000000A479C movzbl %al,%eax
00000000000A479F pop %rcx
00000000000A47A0 ret

 Function call queue at function a4780: [64aa0]

Analyzing function at 64aa0
0000000000064AA0 push %rax
0000000000064AA1 mov %rsi,%rax
0000000000064AA4 mov %rdi,%rcx
0000000000064AA7 mov (%rcx),%rdi
0000000000064AAA mov 8(%rcx),%rsi
0000000000064AAE mov (%rax),%rdx
0000000000064AB1 mov 8(%rax),%rcx
0000000000064AB5 call 0x0000000000088ED0
0000000000064ABA mov %al,7(%rsp)
0000000000064ABE mov 7(%rsp),%al
0000000000064AC2 and $1,%al
0000000000064AC4 movzbl %al,%eax
0000000000064AC7 pop %rcx
0000000000064AC8 ret

 Function call queue at function 64aa0: [88ed0]

Analyzing function at 88ed0
0000000000088ED0 sub $0x28,%rsp
0000000000088ED4 mov %rdx,8(%rsp)
0000000000088ED9 mov %rcx,0x10(%rsp)
0000000000088EDE call 0x0000000000032180
0000000000088EE3 mov %rax,0x18(%rsp)
0000000000088EE8 mov %rdx,0x20(%rsp)
0000000000088EED mov 0x20(%rsp),%rcx
0000000000088EF2 mov 0x18(%rsp),%rdx
0000000000088EF7 mov 0x10(%rsp),%rsi
0000000000088EFC mov 8(%rsp),%rdi
0000000000088F01 call 0x0000000000088FB0
0000000000088F06 mov %al,7(%rsp)
0000000000088F0A mov 7(%rsp),%al
0000000000088F0E and $1,%al
0000000000088F10 movzbl %al,%eax
0000000000088F13 add $0x28,%rsp
0000000000088F17 ret

 Function call queue at function 88ed0: []

Analyzing function at 88e10
0000000000088E10 sub $0x28,%rsp
0000000000088E14 mov %rdi,(%rsp)
0000000000088E18 mov %rdi,8(%rsp)
0000000000088E1D lea 0x10(%rsp),%rdi
0000000000088E22 callq *0x310F08
0000000000088E28 mov 8(%rsp),%rax
0000000000088E2D mov (%rsp),%rcx
0000000000088E31 mov 0x10(%rsp),%rdx
0000000000088E36 mov %rdx,(%rcx)
0000000000088E39 mov 0x18(%rsp),%rdx
0000000000088E3E mov %rdx,8(%rcx)
0000000000088E42 mov 0x20(%rsp),%rdx
0000000000088E47 mov %rdx,0x10(%rcx)
0000000000088E4B add $0x28,%rsp
0000000000088E4F ret

 Function call queue at function 88e10: []

Analyzing function at 77890
0000000000077890 sub $0xA8,%rsp
0000000000077897 mov %rsi,(%rsp)
000000000007789B mov %rdi,8(%rsp)
00000000000778A0 mov %rdi,0x10(%rsp)
00000000000778A5 mov (%rsi),%rax
00000000000778A8 test %rax,%rax
00000000000778AB je 0x00000000000778B3
00000000000778AD jmp 0x00000000000778AF
00000000000778AF jmp 0x00000000000778CD
00000000000778B1 ud2
00000000000778B3 mov 8(%rsp),%rax
00000000000778B8 mov (%rsp),%rcx
00000000000778BC mov 8(%rcx),%rcx
00000000000778C0 mov %rcx,8(%rax)
00000000000778C4 movq $0,(%rax)
00000000000778CB jmp 0x0000000000077930
00000000000778CD mov (%rsp),%rsi
00000000000778D1 add $8,%rsi
00000000000778D5 lea 0x18(%rsp),%rdi
00000000000778DA mov $0x30,%edx
00000000000778DF call 0x000000000002E4B8
00000000000778E4 lea 0x78(%rsp),%rdi
00000000000778E9 lea 0x18(%rsp),%rsi
00000000000778EE mov $0x30,%edx
00000000000778F3 call 0x000000000002E4B8
00000000000778F8 lea 0x48(%rsp),%rdi
00000000000778FD lea 0x78(%rsp),%rsi
0000000000077902 mov $0x30,%edx
0000000000077907 call 0x000000000002E4B8
000000000007790C mov 8(%rsp),%rdi
0000000000077911 add $8,%rdi
0000000000077915 lea 0x48(%rsp),%rsi
000000000007791A mov $0x30,%edx
000000000007791F call 0x000000000002E4B8
0000000000077924 mov 8(%rsp),%rax
0000000000077929 movq $1,(%rax)
0000000000077930 mov 0x10(%rsp),%rax
0000000000077935 add $0xA8,%rsp
000000000007793C ret

 Function call queue at function 77890: []

Analyzing function at 75c50
0000000000075C50 sub $0xA8,%rsp
0000000000075C57 mov %rdi,8(%rsp)
0000000000075C5C mov %rdi,0x10(%rsp)
0000000000075C61 lea 0x18(%rsp),%rdi
0000000000075C66 mov $0x30,%edx
0000000000075C6B call 0x000000000002E4B8
0000000000075C70 lea 0x78(%rsp),%rdi
0000000000075C75 lea 0x18(%rsp),%rsi
0000000000075C7A mov $0x30,%edx
0000000000075C7F call 0x000000000002E4B8
0000000000075C84 lea 0x48(%rsp),%rdi
0000000000075C89 lea 0x78(%rsp),%rsi
0000000000075C8E call 0x00000000000A2B30
0000000000075C93 mov 8(%rsp),%rdi
0000000000075C98 add $8,%rdi
0000000000075C9C lea 0x48(%rsp),%rsi
0000000000075CA1 mov $0x30,%edx
0000000000075CA6 call 0x000000000002E4B8
0000000000075CAB mov 8(%rsp),%rcx
0000000000075CB0 mov 0x10(%rsp),%rax
0000000000075CB5 movq $1,(%rcx)
0000000000075CBC add $0xA8,%rsp
0000000000075CC3 ret

 Function call queue at function 75c50: [a2b30]

Analyzing function at a2b30
00000000000A2B30 push %rax
00000000000A2B31 mov %rdi,%rax
00000000000A2B34 mov %rax,(%rsp)
00000000000A2B38 mov $0x30,%edx
00000000000A2B3D call 0x000000000002E4B8
00000000000A2B42 mov (%rsp),%rax
00000000000A2B46 pop %rcx
00000000000A2B47 ret

 Function call queue at function a2b30: []

Analyzing function at 94dc0
0000000000094DC0 sub $0x88,%rsp
0000000000094DC7 mov %rdi,0x10(%rsp)
0000000000094DCC mov %rsi,0x18(%rsp)
0000000000094DD1 movb $1,0x67(%rsp)
0000000000094DD6 mov 0x10(%rdi),%rax
0000000000094DDA mov %rax,0x20(%rsp)
0000000000094DDF mov 8(%rdi),%rax
0000000000094DE3 mov %rax,0x80(%rsp)
0000000000094DEB mov 0x80(%rsp),%rax
0000000000094DF3 mov %rax,0x28(%rsp)
0000000000094DF8 jmp 0x0000000000094E1A
0000000000094DFA testb $1,0x67(%rsp)
0000000000094DFF jne 0x0000000000094EC7
0000000000094E05 jmp 0x0000000000094EBB
0000000000094E0A mov %rax,%rcx
0000000000094E0D mov %edx,%eax
0000000000094E0F mov %rcx,0x68(%rsp)
0000000000094E14 mov %eax,0x70(%rsp)
0000000000094E18 jmp 0x0000000000094DFA
0000000000094E1A mov 0x20(%rsp),%rax
0000000000094E1F mov 0x28(%rsp),%rcx
0000000000094E24 cmp %rcx,%rax
0000000000094E27 je 0x0000000000094E3A
0000000000094E29 mov 0x10(%rsp),%rdi
0000000000094E2E call 0x0000000000091720
0000000000094E33 mov %rax,8(%rsp)
0000000000094E38 jmp 0x0000000000094E4C
0000000000094E3A mov 0x10(%rsp),%rdi
0000000000094E3F mov 0x10(%rdi),%rsi
0000000000094E43 call 0x0000000000080CA0
0000000000094E48 jmp 0x0000000000094E4A
0000000000094E4A jmp 0x0000000000094E29
0000000000094E4C mov 8(%rsp),%rax
0000000000094E51 mov 0x10(%rsp),%rcx
0000000000094E56 imul $0x28,0x10(%rcx),%rcx
0000000000094E5B add %rcx,%rax
0000000000094E5E mov %rax,0x78(%rsp)
0000000000094E63 mov 0x78(%rsp),%rax
0000000000094E68 mov %rax,(%rsp)
0000000000094E6C jmp 0x0000000000094E6E
0000000000094E6E mov (%rsp),%rdi
0000000000094E72 mov 0x18(%rsp),%rax
0000000000094E77 movb $0,0x67(%rsp)
0000000000094E7C mov 0x20(%rax),%rcx
0000000000094E80 mov %rcx,0x50(%rsp)
0000000000094E85 movups (%rax),%xmm0
0000000000094E88 movups 0x10(%rax),%xmm1
0000000000094E8C movaps %xmm1,0x40(%rsp)
0000000000094E91 movaps %xmm0,0x30(%rsp)
0000000000094E96 lea 0x30(%rsp),%rsi
0000000000094E9B call 0x0000000000068880
0000000000094EA0 jmp 0x0000000000094EA2
0000000000094EA2 mov 0x10(%rsp),%rax
0000000000094EA7 mov 0x10(%rax),%rcx
0000000000094EAB add $1,%rcx
0000000000094EAF mov %rcx,0x10(%rax)
0000000000094EB3 add $0x88,%rsp
0000000000094EBA ret

 Function call queue at function 94dc0: [91720, 80ca0, 68880]

Analyzing function at 91720
0000000000091720 push %rax
0000000000091721 call 0x0000000000081810
0000000000091726 mov %rax,(%rsp)
000000000009172A mov (%rsp),%rdi
000000000009172E call 0x00000000000A28A0
0000000000091733 mov (%rsp),%rax
0000000000091737 pop %rcx
0000000000091738 ret

 Function call queue at function 91720: [a28a0]

Analyzing function at a28a0
00000000000A28A0 sub $0x28,%rsp
00000000000A28A4 mov %rdi,0x10(%rsp)
00000000000A28A9 movq $0,0x20(%rsp)
00000000000A28B2 mov 0x20(%rsp),%rdi
00000000000A28B7 callq *0x30FE80
00000000000A28BD mov %rax,0x18(%rsp)
00000000000A28C2 mov 0x18(%rsp),%rsi
00000000000A28C7 mov 0x10(%rsp),%rdi
00000000000A28CC callq *0x312630
00000000000A28D2 mov %al,0xF(%rsp)
00000000000A28D6 mov 0xF(%rsp),%al
00000000000A28DA and $1,%al
00000000000A28DC movzbl %al,%eax
00000000000A28DF add $0x28,%rsp
00000000000A28E3 ret

 Function call queue at function a28a0: []

Analyzing function at 80ca0
0000000000080CA0 sub $0x18,%rsp
0000000000080CA4 mov $1,%edx
0000000000080CA9 call 0x000000000007F2A0
0000000000080CAE mov %rax,8(%rsp)
0000000000080CB3 mov %rdx,0x10(%rsp)
0000000000080CB8 mov 0x10(%rsp),%rsi
0000000000080CBD mov 8(%rsp),%rdi
0000000000080CC2 call 0x00000000000A06C0
0000000000080CC7 add $0x18,%rsp
0000000000080CCB ret

 Function call queue at function 80ca0: []

Analyzing function at 68880
0000000000068880 push %rax
0000000000068881 mov $0x28,%edx
0000000000068886 call 0x000000000002E4B8
000000000006888B pop %rax
000000000006888C ret

 Function call queue at function 68880: []

Analyzing function at 322a0
00000000000322A0 push %rax
00000000000322A1 mov %rsi,%rax
00000000000322A4 mov %rdi,%rcx
00000000000322A7 mov (%rcx),%rdi
00000000000322AA mov 8(%rcx),%rsi
00000000000322AE mov (%rax),%rdx
00000000000322B1 mov 8(%rax),%rcx
00000000000322B5 call 0x0000000000032300
00000000000322BA mov %al,7(%rsp)
00000000000322BE mov 7(%rsp),%al
00000000000322C2 and $1,%al
00000000000322C4 movzbl %al,%eax
00000000000322C7 pop %rcx
00000000000322C8 ret

 Function call queue at function 322a0: [32300]

Analyzing function at 32300
0000000000032300 push %rax
0000000000032301 call 0x0000000000089090
0000000000032306 mov %al,7(%rsp)
000000000003230A mov 7(%rsp),%al
000000000003230E xor $0xFF,%al
0000000000032310 and $1,%al
0000000000032312 movzbl %al,%eax
0000000000032315 pop %rcx
0000000000032316 ret

 Function call queue at function 32300: []

Analyzing function at 63d60
0000000000063D60 sub $0x28,%rsp
0000000000063D64 mov %rdi,%rax
0000000000063D67 mov %rax,8(%rsp)
0000000000063D6C mov (%rsi),%rax
0000000000063D6F mov %rax,0x10(%rsp)
0000000000063D74 mov 8(%rsi),%rax
0000000000063D78 mov %rax,0x18(%rsp)
0000000000063D7D mov 0x10(%rsi),%rax
0000000000063D81 mov %rax,0x20(%rsp)
0000000000063D86 lea 0x10(%rsp),%rsi
0000000000063D8B call 0x00000000000613A0
0000000000063D90 mov 8(%rsp),%rax
0000000000063D95 add $0x28,%rsp
0000000000063D99 ret

 Function call queue at function 63d60: [613a0]

Analyzing function at 613a0
00000000000613A0 sub $0x18,%rsp
00000000000613A4 mov %rdi,%rax
00000000000613A7 mov (%rsi),%rcx
00000000000613AA mov %rcx,(%rsp)
00000000000613AE mov 8(%rsi),%rcx
00000000000613B2 mov %rcx,8(%rsp)
00000000000613B7 mov 0x10(%rsi),%rcx
00000000000613BB mov %rcx,0x10(%rsp)
00000000000613C0 mov (%rsp),%rcx
00000000000613C4 mov %rcx,(%rdi)
00000000000613C7 mov 8(%rsp),%rcx
00000000000613CC mov %rcx,8(%rdi)
00000000000613D0 mov 0x10(%rsp),%rcx
00000000000613D5 mov %rcx,0x10(%rdi)
00000000000613D9 mov %rdx,0x18(%rdi)
00000000000613DD add $0x18,%rsp
00000000000613E1 ret

 Function call queue at function 613a0: []

Analyzing function at 61470
0000000000061470 mov %rdi,%rax
0000000000061473 mov (%rsi),%rcx
0000000000061476 mov %rcx,(%rdi)
0000000000061479 mov 8(%rsi),%rcx
000000000006147D mov %rcx,8(%rdi)
0000000000061481 mov 0x10(%rsi),%rcx
0000000000061485 mov %rcx,0x10(%rdi)
0000000000061489 mov 0x18(%rsi),%rcx
000000000006148D mov %rcx,0x18(%rdi)
0000000000061491 ret

 Function call queue at function 61470: []

Analyzing function at 61160
0000000000061160 sub $0x38,%rsp
0000000000061164 mov %rdi,0x28(%rsp)
0000000000061169 cmpq $0,0x18(%rdi)
000000000006116E seta %al
0000000000061171 and $1,%al
0000000000061173 mov %al,0x37(%rsp)
0000000000061177 mov 0x37(%rsp),%al
000000000006117B mov %al,0x36(%rsp)
000000000006117F mov 0x36(%rsp),%al
0000000000061183 test $1,%al
0000000000061185 jne 0x00000000000611A0
0000000000061187 jmp 0x0000000000061189
0000000000061189 mov 0x28(%rsp),%rdi
000000000006118E callq *0x316960
0000000000061194 mov %rax,0x18(%rsp)
0000000000061199 mov %rdx,0x20(%rsp)
000000000006119E jmp 0x00000000000611D3
00000000000611A0 mov 0x28(%rsp),%rdi
00000000000611A5 mov %rdi,%rax
00000000000611A8 mov %rax,8(%rsp)
00000000000611AD add $0x18,%rdi
00000000000611B1 callq *0x311430
00000000000611B7 mov %rax,0x10(%rsp)
00000000000611BC mov 8(%rsp),%rdi
00000000000611C1 mov 0x10(%rsp),%rsi
00000000000611C6 sub $1,%rsi
00000000000611CA call 0x0000000000062CE0
00000000000611CF jmp 0x00000000000611D1
00000000000611D1 jmp 0x0000000000061189
00000000000611D3 mov 0x20(%rsp),%rdx
00000000000611D8 mov 0x18(%rsp),%rax
00000000000611DD add $0x38,%rsp
00000000000611E1 ret

 Function call queue at function 61160: [62ce0]

Analyzing function at 62ce0
0000000000062CE0 sub $0x68,%rsp
0000000000062CE4 mov %rdi,0x18(%rsp)
0000000000062CE9 mov %rsi,0x20(%rsp)
0000000000062CEE call 0x0000000000053010
0000000000062CF3 mov %rax,0x28(%rsp)
0000000000062CF8 mov 0x28(%rsp),%rdi
0000000000062CFD callq *0x311960
0000000000062D03 mov %rax,0x40(%rsp)
0000000000062D08 mov 0x40(%rsp),%rax
0000000000062D0D test %rax,%rax
0000000000062D10 sete %al
0000000000062D13 movzbl %al,%eax
0000000000062D16 jne 0x0000000000062D1E
0000000000062D18 jmp 0x0000000000062D1A
0000000000062D1A jmp 0x0000000000062D44
0000000000062D1C ud2
0000000000062D1E mov 0x18(%rsp),%rcx
0000000000062D23 mov 0x20(%rsp),%rax
0000000000062D28 mov 0x40(%rsp),%rdx
0000000000062D2D mov %rdx,8(%rsp)
0000000000062D32 add 0x10(%rcx),%rax
0000000000062D36 mov %rax,0x10(%rsp)
0000000000062D3B setb %al
0000000000062D3E test $1,%al
0000000000062D40 jne 0x0000000000062D7E
0000000000062D42 jmp 0x0000000000062D68
0000000000062D44 lea 0xEDBD0,%rax
0000000000062D4B call *%rax
0000000000062D4D mov %rdx,0x38(%rsp)
0000000000062D52 mov %rax,0x30(%rsp)
0000000000062D57 jmp 0x0000000000062D59
0000000000062D59 mov 0x30(%rsp),%rax
0000000000062D5E mov 0x38(%rsp),%rdx
0000000000062D63 add $0x68,%rsp
0000000000062D67 ret
0000000000062D68 mov 0x10(%rsp),%rax
0000000000062D6D add $1,%rax
0000000000062D71 mov %rax,(%rsp)
0000000000062D75 setb %al
0000000000062D78 test $1,%al
0000000000062D7A jne 0x0000000000062DEA
0000000000062D7C jmp 0x0000000000062DB0
0000000000062D7E lea 0x255290,%rdi
0000000000062D85 lea 0x303758,%rdx
0000000000062D8C lea 0x2FB10,%rax
0000000000062D93 mov $0x1C,%esi
0000000000062D98 call *%rax
0000000000062D9A jmp 0x0000000000062DAE
0000000000062D9C jmp 0x0000000000062E08
0000000000062D9E mov %rax,%rcx
0000000000062DA1 mov %edx,%eax
0000000000062DA3 mov %rcx,0x58(%rsp)
0000000000062DA8 mov %eax,0x60(%rsp)
0000000000062DAC jmp 0x0000000000062D9C
0000000000062DAE ud2
0000000000062DB0 mov 8(%rsp),%rax
0000000000062DB5 mov 0x10(%rsp),%rcx
0000000000062DBA mov 0x18(%rsp),%rdx
0000000000062DBF mov (%rsp),%rsi
0000000000062DC3 mov %rsi,0x10(%rdx)
0000000000062DC7 mov %rcx,0x48(%rsp)
0000000000062DCC mov %rax,0x50(%rsp)
0000000000062DD1 mov 0x48(%rsp),%rcx
0000000000062DD6 mov 0x50(%rsp),%rax
0000000000062DDB mov %rcx,0x30(%rsp)
0000000000062DE0 mov %rax,0x38(%rsp)
0000000000062DE5 jmp 0x0000000000062D59
0000000000062DEA lea 0x255290,%rdi
0000000000062DF1 lea 0x303770,%rdx
0000000000062DF8 lea 0x2FB10,%rax
0000000000062DFF mov $0x1C,%esi
0000000000062E04 call *%rax
0000000000062E06 jmp 0x0000000000062DAE

 Function call queue at function 62ce0: []

Analyzing function at 31300
0000000000031300 sub $0x68,%rsp
0000000000031304 mov %rdi,(%rsp)
0000000000031308 mov %dl,%al
000000000003130A mov %rdi,8(%rsp)
000000000003130F mov %al,0x17(%rsp)
0000000000031313 mov (%rsi),%rdi
0000000000031316 mov 8(%rsi),%rsi
000000000003131A call 0x00000000000A2A80
000000000003131F mov %rdx,0x28(%rsp)
0000000000031324 mov %rax,0x20(%rsp)
0000000000031329 lea 0x17(%rsp),%rax
000000000003132E mov %rax,0x30(%rsp)
0000000000031333 mov 0x30(%rsp),%rsi
0000000000031338 lea 0x20(%rsp),%rdi
000000000003133D call 0x00000000000536D0
0000000000031342 mov %rax,0x18(%rsp)
0000000000031347 mov 0x18(%rsp),%rax
000000000003134C test %rax,%rax
000000000003134F setne %al
0000000000031352 movzbl %al,%eax
0000000000031355 je 0x000000000003135D
0000000000031357 jmp 0x0000000000031359
0000000000031359 jmp 0x000000000003138E
000000000003135B ud2
000000000003135D mov (%rsp),%rdi
0000000000031361 mov 0x17(%rsp),%al
0000000000031365 mov %al,0x39(%rsp)
0000000000031369 movb $2,0x38(%rsp)
000000000003136E add $8,%rdi
0000000000031372 lea 0x38(%rsp),%rsi
0000000000031377 mov $0x30,%edx
000000000003137C call 0x000000000002E4B8
0000000000031381 mov (%rsp),%rax
0000000000031385 movq $1,(%rax)
000000000003138C jmp 0x00000000000313A5
000000000003138E mov (%rsp),%rax
0000000000031392 mov 0x18(%rsp),%rcx
0000000000031397 mov (%rcx),%rcx
000000000003139A mov %rcx,8(%rax)
000000000003139E movq $0,(%rax)
00000000000313A5 mov 8(%rsp),%rax
00000000000313AA add $0x68,%rsp
00000000000313AE ret

 Function call queue at function 31300: [536d0]

Analyzing function at 536d0
00000000000536D0 sub $0x58,%rsp
00000000000536D4 mov %rdi,0x18(%rsp)
00000000000536D9 mov %rsi,0x20(%rsp)
00000000000536DE mov 0x18(%rsp),%rdi
00000000000536E3 call 0x0000000000053F30
00000000000536E8 mov %rax,0x10(%rsp)
00000000000536ED jmp 0x0000000000053701
00000000000536EF jmp 0x0000000000053768
00000000000536F1 mov %rax,%rcx
00000000000536F4 mov %edx,%eax
00000000000536F6 mov %rcx,0x48(%rsp)
00000000000536FB mov %eax,0x50(%rsp)
00000000000536FF jmp 0x00000000000536EF
0000000000053701 mov 0x10(%rsp),%rax
0000000000053706 mov %rax,0x30(%rsp)
000000000005370B mov $1,%eax
0000000000053710 xor %ecx,%ecx
0000000000053712 cmpq $0,0x30(%rsp)
0000000000053718 cmove %rcx,%rax
000000000005371C cmp $1,%rax
0000000000053720 jne 0x000000000005374B
0000000000053722 mov 0x30(%rsp),%rax
0000000000053727 mov %rax,0x38(%rsp)
000000000005372C lea 0x38(%rsp),%rax
0000000000053731 mov %rax,0x40(%rsp)
0000000000053736 mov 0x40(%rsp),%rsi
000000000005373B lea 0x20(%rsp),%rdi
0000000000053740 call 0x00000000000A4740
0000000000053745 mov %al,0xF(%rsp)
0000000000053749 jmp 0x000000000005375E
000000000005374B movq $0,0x28(%rsp)
0000000000053754 mov 0x28(%rsp),%rax
0000000000053759 add $0x58,%rsp
000000000005375D ret
000000000005375E mov 0xF(%rsp),%al
0000000000053762 test $1,%al
0000000000053764 jne 0x0000000000053779
0000000000053766 jmp 0x0000000000053774
0000000000053768 mov 0x48(%rsp),%rdi
000000000005376D call 0x000000000002E3D0
0000000000053772 ud2
0000000000053774 jmp 0x00000000000536DE
0000000000053779 mov 0x38(%rsp),%rax
000000000005377E mov %rax,0x28(%rsp)
0000000000053783 jmp 0x0000000000053754

 Function call queue at function 536d0: [a4740]

Analyzing function at a4740
00000000000A4740 sub $0x18,%rsp
00000000000A4744 mov %rdi,%rax
00000000000A4747 mov (%rsi),%rcx
00000000000A474A mov (%rcx),%rdi
00000000000A474D add $0x28,%rdi
00000000000A4751 mov (%rax),%rax
00000000000A4754 mov (%rax),%al
00000000000A4756 mov %al,0x11(%rsp)
00000000000A475A movb $1,0x10(%rsp)
00000000000A475F lea 0x10(%rsp),%rsi
00000000000A4764 call 0x000000000006EF20
00000000000A4769 mov %al,0xF(%rsp)
00000000000A476D mov 0xF(%rsp),%al
00000000000A4771 and $1,%al
00000000000A4773 movzbl %al,%eax
00000000000A4776 add $0x18,%rsp
00000000000A477A ret

 Function call queue at function a4740: [6ef20]

Analyzing function at 6ef20
000000000006EF20 sub $0x28,%rsp
000000000006EF24 mov %rdi,(%rsp)
000000000006EF28 mov %rsi,8(%rsp)
000000000006EF2D mov (%rdi),%al
000000000006EF2F and $1,%al
000000000006EF31 movzbl %al,%eax
000000000006EF34 mov (%rsi),%cl
000000000006EF36 and $1,%cl
000000000006EF39 movzbl %cl,%ecx
000000000006EF3C cmp %rcx,%rax
000000000006EF3F je 0x000000000006EF48
000000000006EF41 movb $0,0x17(%rsp)
000000000006EF46 jmp 0x000000000006EFA9
000000000006EF48 mov 8(%rsp),%rax
000000000006EF4D mov (%rsp),%rcx
000000000006EF51 mov %rcx,0x18(%rsp)
000000000006EF56 mov %rax,0x20(%rsp)
000000000006EF5B mov 0x18(%rsp),%rax
000000000006EF60 mov (%rax),%al
000000000006EF62 and $1,%al
000000000006EF64 movzbl %al,%eax
000000000006EF67 cmp $1,%rax
000000000006EF6B jne 0x000000000006EF7F
000000000006EF6D mov 0x20(%rsp),%rax
000000000006EF72 mov (%rax),%al
000000000006EF74 and $1,%al
000000000006EF76 movzbl %al,%eax
000000000006EF79 cmp $1,%rax
000000000006EF7D je 0x000000000006EF86
000000000006EF7F movb $1,0x17(%rsp)
000000000006EF84 jmp 0x000000000006EFA5
000000000006EF86 mov 0x18(%rsp),%rdi
000000000006EF8B add $1,%rdi
000000000006EF8F mov 0x20(%rsp),%rsi
000000000006EF94 add $1,%rsi
000000000006EF98 call 0x00000000000A7360
000000000006EF9D and $1,%al
000000000006EF9F mov %al,0x17(%rsp)
000000000006EFA3 jmp 0x000000000006EFA7
000000000006EFA5 jmp 0x000000000006EFA9
000000000006EFA7 jmp 0x000000000006EFA5
000000000006EFA9 mov 0x17(%rsp),%al
000000000006EFAD and $1,%al
000000000006EFAF movzbl %al,%eax
000000000006EFB2 add $0x28,%rsp
000000000006EFB6 ret

 Function call queue at function 6ef20: [a7360]

Analyzing function at a7360
00000000000A7360 mov (%rdi),%al
00000000000A7362 cmp (%rsi),%al
00000000000A7364 sete %al
00000000000A7367 and $1,%al
00000000000A7369 movzbl %al,%eax
00000000000A736C ret

 Function call queue at function a7360: []

Analyzing function at 60c20
0000000000060C20 sub $0x38,%rsp
0000000000060C24 mov %rdx,(%rsp)
0000000000060C28 mov %rsi,8(%rsp)
0000000000060C2D mov %rdi,0x10(%rsp)
0000000000060C32 mov %rdi,0x18(%rsp)
0000000000060C37 cmp $1,%rdx
0000000000060C3B jae 0x0000000000060C4B
0000000000060C3D mov 0x10(%rsp),%rax
0000000000060C42 movq $0,(%rax)
0000000000060C49 jmp 0x0000000000060C93
0000000000060C4B mov 0x10(%rsp),%rax
0000000000060C50 mov 8(%rsp),%rsi
0000000000060C55 mov (%rsp),%rdi
0000000000060C59 mov %rdi,%rcx
0000000000060C5C sub $1,%rcx
0000000000060C60 mov %rsi,%rdx
0000000000060C63 sub $1,%rdi
0000000000060C67 add %rdi,%rsi
0000000000060C6A mov %rsi,0x20(%rsp)
0000000000060C6F mov %rdx,0x28(%rsp)
0000000000060C74 mov %rcx,0x30(%rsp)
0000000000060C79 mov 0x20(%rsp),%rcx
0000000000060C7E mov %rcx,(%rax)
0000000000060C81 mov 0x28(%rsp),%rcx
0000000000060C86 mov %rcx,8(%rax)
0000000000060C8A mov 0x30(%rsp),%rcx
0000000000060C8F mov %rcx,0x10(%rax)
0000000000060C93 mov 0x18(%rsp),%rax
0000000000060C98 add $0x38,%rsp
0000000000060C9C ret

 Function call queue at function 60c20: []

Analyzing function at 6e370
000000000006E370 sub $0x28,%rsp
000000000006E374 mov %rdx,8(%rsp)
000000000006E379 mov %rsi,0x10(%rsp)
000000000006E37E mov %rdi,0x18(%rsp)
000000000006E383 mov %rdi,0x20(%rsp)
000000000006E388 mov (%rsi),%rax
000000000006E38B test %rax,%rax
000000000006E38E setne %al
000000000006E391 movzbl %al,%eax
000000000006E394 je 0x000000000006E39C
000000000006E396 jmp 0x000000000006E398
000000000006E398 jmp 0x000000000006E3B8
000000000006E39A ud2
000000000006E39C mov 8(%rsp),%rdx
000000000006E3A1 lea 0x255699,%rdi
000000000006E3A8 lea 0x2FB10,%rax
000000000006E3AF mov $0x2B,%esi
000000000006E3B4 call *%rax
000000000006E3B6 ud2
000000000006E3B8 mov 0x20(%rsp),%rax
000000000006E3BD mov 0x18(%rsp),%rcx
000000000006E3C2 mov 0x10(%rsp),%rdx
000000000006E3C7 mov (%rdx),%rsi
000000000006E3CA mov %rsi,(%rcx)
000000000006E3CD mov 8(%rdx),%rsi
000000000006E3D1 mov %rsi,8(%rcx)
000000000006E3D5 mov 0x10(%rdx),%rdx
000000000006E3D9 mov %rdx,0x10(%rcx)
000000000006E3DD add $0x28,%rsp
000000000006E3E1 ret

 Function call queue at function 6e370: []

Analyzing function at 52790
0000000000052790 sub $0x18,%rsp
0000000000052794 callq *0x316178
000000000005279A mov %rax,8(%rsp)
000000000005279F mov %rdx,0x10(%rsp)
00000000000527A4 mov 0x10(%rsp),%rdx
00000000000527A9 mov 8(%rsp),%rax
00000000000527AE add $0x18,%rsp
00000000000527B2 ret

 Function call queue at function 52790: []

Analyzing function at 6e230
000000000006E230 sub $0x18,%rsp
000000000006E234 mov %rdx,8(%rsp)
000000000006E239 mov %sil,%al
000000000006E23C mov %dil,%cl
000000000006E23F and $1,%cl
000000000006E242 mov %cl,0x10(%rsp)
000000000006E246 mov %al,0x11(%rsp)
000000000006E24A movzbl 0x10(%rsp),%eax
000000000006E24F test $1,%al
000000000006E251 je 0x000000000006E259
000000000006E253 jmp 0x000000000006E255
000000000006E255 jmp 0x000000000006E275
000000000006E257 ud2
000000000006E259 mov 8(%rsp),%rdx
000000000006E25E lea 0x255699,%rdi
000000000006E265 lea 0x2FB10,%rax
000000000006E26C mov $0x2B,%esi
000000000006E271 call *%rax
000000000006E273 ud2
000000000006E275 mov 0x11(%rsp),%al
000000000006E279 add $0x18,%rsp
000000000006E27D ret

 Function call queue at function 6e230: []

Analyzing function at 9bc00
000000000009BC00 sub $0x18,%rsp
000000000009BC04 mov %rdi,(%rsp)
000000000009BC08 call 0x000000000009ED90
000000000009BC0D jmp 0x000000000009BC2A
000000000009BC0F mov (%rsp),%rdi
000000000009BC13 call 0x000000000009BCD0
000000000009BC18 jmp 0x000000000009BC40
000000000009BC1A mov %rax,%rcx
000000000009BC1D mov %edx,%eax
000000000009BC1F mov %rcx,8(%rsp)
000000000009BC24 mov %eax,0x10(%rsp)
000000000009BC28 jmp 0x000000000009BC0F
000000000009BC2A mov (%rsp),%rdi
000000000009BC2E call 0x000000000009BCD0
000000000009BC33 jmp 0x000000000009BC4C
000000000009BC35 lea 0x2FBE0,%rax
000000000009BC3C call *%rax
000000000009BC3E ud2
000000000009BC40 mov 8(%rsp),%rdi
000000000009BC45 call 0x000000000002E3D0
000000000009BC4A ud2
000000000009BC4C add $0x18,%rsp
000000000009BC50 ret

 Function call queue at function 9bc00: [9bcd0]

Analyzing function at 9bcd0
000000000009BCD0 push %rax
000000000009BCD1 call 0x000000000009F450
000000000009BCD6 pop %rax
000000000009BCD7 ret

 Function call queue at function 9bcd0: []

Analyzing function at 5c6a0
000000000005C6A0 sub $0x18,%rsp
000000000005C6A4 lea 0x305CC0,%rsi
000000000005C6AB call 0x0000000000031510
000000000005C6B0 mov %rax,8(%rsp)
000000000005C6B5 mov 8(%rsp),%rax
000000000005C6BA cmp $0,%rax
000000000005C6BE ja 0x000000000005C6C7
000000000005C6C0 movb $0,0x17(%rsp)
000000000005C6C5 jmp 0x000000000005C6CC
000000000005C6C7 movb $1,0x17(%rsp)
000000000005C6CC mov 0x17(%rsp),%al
000000000005C6D0 and $1,%al
000000000005C6D2 movzbl %al,%eax
000000000005C6D5 add $0x18,%rsp
000000000005C6D9 ret

 Function call queue at function 5c6a0: []

Analyzing function at 9dbb0
000000000009DBB0 sub $0x18,%rsp
000000000009DBB4 mov %rdi,(%rsp)
000000000009DBB8 call 0x000000000009ED10
000000000009DBBD jmp 0x000000000009DBDA
000000000009DBBF mov (%rsp),%rdi
000000000009DBC3 call 0x000000000009E1E0
000000000009DBC8 jmp 0x000000000009DBF0
000000000009DBCA mov %rax,%rcx
000000000009DBCD mov %edx,%eax
000000000009DBCF mov %rcx,8(%rsp)
000000000009DBD4 mov %eax,0x10(%rsp)
000000000009DBD8 jmp 0x000000000009DBBF
000000000009DBDA mov (%rsp),%rdi
000000000009DBDE call 0x000000000009E1E0
000000000009DBE3 jmp 0x000000000009DBFC
000000000009DBE5 lea 0x2FBE0,%rax
000000000009DBEC call *%rax
000000000009DBEE ud2
000000000009DBF0 mov 8(%rsp),%rdi
000000000009DBF5 call 0x000000000002E3D0
000000000009DBFA ud2
000000000009DBFC add $0x18,%rsp
000000000009DC00 ret

 Function call queue at function 9dbb0: [9e1e0]

Analyzing function at 9e1e0
000000000009E1E0 push %rax
000000000009E1E1 call 0x000000000009EFA0
000000000009E1E6 pop %rax
000000000009E1E7 ret

 Function call queue at function 9e1e0: []

Analyzing function at 62280
0000000000062280 sub $0x18,%rsp
0000000000062284 lea 0x305C90,%rsi
000000000006228B call 0x0000000000031510
0000000000062290 mov %rax,8(%rsp)
0000000000062295 mov 8(%rsp),%rax
000000000006229A cmp $0,%rax
000000000006229E ja 0x00000000000622A7
00000000000622A0 movb $0,0x17(%rsp)
00000000000622A5 jmp 0x00000000000622AC
00000000000622A7 movb $1,0x17(%rsp)
00000000000622AC mov 0x17(%rsp),%al
00000000000622B0 and $1,%al
00000000000622B2 movzbl %al,%eax
00000000000622B5 add $0x18,%rsp
00000000000622B9 ret

 Function call queue at function 62280: []

Analyzing function at 4ea30
000000000004EA30 sub $0x748,%rsp
000000000004EA37 mov %rdx,8(%rsp)
000000000004EA3C mov %rsi,0x10(%rsp)
000000000004EA41 mov %rdi,0x18(%rsp)
000000000004EA46 mov %rdi,0x20(%rsp)
000000000004EA4B lea 0xD0(%rsp),%rdi
000000000004EA53 call 0x000000000005DFB0
000000000004EA58 lea 0x78(%rsp),%rdi
000000000004EA5D lea 0xD0(%rsp),%rsi
000000000004EA65 call 0x0000000000078180
000000000004EA6A mov 0x78(%rsp),%rax
000000000004EA6F test %rax,%rax
000000000004EA72 je 0x000000000004EA7A
000000000004EA74 jmp 0x000000000004EA76
000000000004EA76 jmp 0x000000000004EAB9
000000000004EA78 ud2
000000000004EA7A lea 0x78(%rsp),%rsi
000000000004EA7F add $8,%rsi
000000000004EA83 lea 0x198(%rsp),%rdi
000000000004EA8B mov $0x50,%edx
000000000004EA90 call 0x000000000002E4B8
000000000004EA95 lea 0x28(%rsp),%rdi
000000000004EA9A lea 0x198(%rsp),%rsi
000000000004EAA2 mov $0x50,%edx
000000000004EAA7 call 0x000000000002E4B8
000000000004EAAC movzbl 0x28(%rsp),%eax
000000000004EAB1 cmp $1,%rax
000000000004EAB5 je 0x000000000004EB16
000000000004EAB7 jmp 0x000000000004EB20
000000000004EAB9 lea 0x78(%rsp),%rsi
000000000004EABE add $8,%rsi
000000000004EAC2 lea 0x128(%rsp),%rdi
000000000004EACA mov $0x38,%edx
000000000004EACF call 0x000000000002E4B8
000000000004EAD4 lea 0x160(%rsp),%rdi
000000000004EADC lea 0x128(%rsp),%rsi
000000000004EAE4 mov $0x38,%edx
000000000004EAE9 call 0x000000000002E4B8
000000000004EAEE mov 0x18(%rsp),%rdi
000000000004EAF3 lea 0x160(%rsp),%rsi
000000000004EAFB lea 0x302B00,%rdx
000000000004EB02 call 0x0000000000076460
000000000004EB07 jmp 0x000000000004EB09
000000000004EB09 mov 0x20(%rsp),%rax
000000000004EB0E add $0x748,%rsp
000000000004EB15 ret
000000000004EB16 movb $1,0x287(%rsp)
000000000004EB1E jmp 0x000000000004EB28
000000000004EB20 movb $0,0x287(%rsp)
000000000004EB28 mov 0x10(%rsp),%rsi
000000000004EB2D mov 0x287(%rsp),%al
000000000004EB34 lea 0x240(%rsp),%rdi
000000000004EB3C and $1,%al
000000000004EB3E movzbl %al,%edx
000000000004EB41 call 0x000000000005D2D0
000000000004EB46 lea 0x200(%rsp),%rdi
000000000004EB4E lea 0x240(%rsp),%rsi
000000000004EB56 call 0x0000000000077780
000000000004EB5B mov 0x200(%rsp),%rax
000000000004EB63 test %rax,%rax
000000000004EB66 je 0x000000000004EB6E
000000000004EB68 jmp 0x000000000004EB6A
000000000004EB6A jmp 0x000000000004EBE2
000000000004EB6C ud2
000000000004EB6E mov 0x10(%rsp),%rsi
000000000004EB73 mov 0x208(%rsp),%rax
000000000004EB7B mov %rax,0x2F8(%rsp)
000000000004EB83 mov 0x210(%rsp),%rax
000000000004EB8B mov %rax,0x300(%rsp)
000000000004EB93 mov 0x218(%rsp),%rax
000000000004EB9B mov %rax,0x308(%rsp)
000000000004EBA3 mov 0x2F8(%rsp),%rax
000000000004EBAB mov %rax,0x1E8(%rsp)
000000000004EBB3 mov 0x300(%rsp),%rax
000000000004EBBB mov %rax,0x1F0(%rsp)
000000000004EBC3 mov 0x308(%rsp),%rax
000000000004EBCB mov %rax,0x1F8(%rsp)
000000000004EBD3 lea 0x370(%rsp),%rdi
000000000004EBDB call 0x0000000000044DA0
000000000004EBE0 jmp 0x000000000004EC38
000000000004EBE2 lea 0x200(%rsp),%rsi
000000000004EBEA add $8,%rsi
000000000004EBEE lea 0x288(%rsp),%rdi
000000000004EBF6 mov $0x38,%edx
000000000004EBFB call 0x000000000002E4B8
000000000004EC00 lea 0x2C0(%rsp),%rdi
000000000004EC08 lea 0x288(%rsp),%rsi
000000000004EC10 mov $0x38,%edx
000000000004EC15 call 0x000000000002E4B8
000000000004EC1A mov 0x18(%rsp),%rdi
000000000004EC1F lea 0x2C0(%rsp),%rsi
000000000004EC27 lea 0x302B18,%rdx
000000000004EC2E call 0x0000000000076460
000000000004EC33 jmp 0x000000000004EB09
000000000004EC38 lea 0x330(%rsp),%rdi
000000000004EC40 lea 0x370(%rsp),%rsi
000000000004EC48 call 0x0000000000078F80
000000000004EC4D mov 0x330(%rsp),%rax
000000000004EC55 test %rax,%rax
000000000004EC58 je 0x000000000004EC60
000000000004EC5A jmp 0x000000000004EC5C
000000000004EC5C jmp 0x000000000004ECB9
000000000004EC5E ud2
000000000004EC60 mov 8(%rsp),%rdx
000000000004EC65 mov 0x10(%rsp),%rsi
000000000004EC6A movups 0x338(%rsp),%xmm0
000000000004EC72 movups 0x348(%rsp),%xmm1
000000000004EC7A movaps %xmm1,0x430(%rsp)
000000000004EC82 movaps %xmm0,0x420(%rsp)
000000000004EC8A movaps 0x420(%rsp),%xmm0
000000000004EC92 movaps 0x430(%rsp),%xmm1
000000000004EC9A movaps %xmm1,0x320(%rsp)
000000000004ECA2 movaps %xmm0,0x310(%rsp)
000000000004ECAA lea 0x4C0(%rsp),%rdi
000000000004ECB2 call 0x00000000000B25F0
000000000004ECB7 jmp 0x000000000004ED37
000000000004ECB9 lea 0x330(%rsp),%rsi
000000000004ECC1 add $8,%rsi
000000000004ECC5 lea 0x3B0(%rsp),%rdi
000000000004ECCD mov $0x38,%edx
000000000004ECD2 call 0x000000000002E4B8
000000000004ECD7 lea 0x3E8(%rsp),%rdi
000000000004ECDF lea 0x3B0(%rsp),%rsi
000000000004ECE7 mov $0x38,%edx
000000000004ECEC call 0x000000000002E4B8
000000000004ECF1 mov 0x18(%rsp),%rdi
000000000004ECF6 lea 0x3E8(%rsp),%rsi
000000000004ECFE lea 0x302B30,%rdx
000000000004ED05 call 0x0000000000076460
000000000004ED0A jmp 0x000000000004EB09
000000000004ED0F lea 0x310(%rsp),%rdi
000000000004ED17 call 0x000000000009C8C0
000000000004ED1C jmp 0x000000000004EFEB
000000000004ED21 mov %rax,%rcx
000000000004ED24 mov %edx,%eax
000000000004ED26 mov %rcx,0x738(%rsp)
000000000004ED2E mov %eax,0x740(%rsp)
000000000004ED35 jmp 0x000000000004ED0F
000000000004ED37 lea 0x480(%rsp),%rdi
000000000004ED3F lea 0x4C0(%rsp),%rsi
000000000004ED47 call 0x0000000000078590
000000000004ED4C jmp 0x000000000004ED4E
000000000004ED4E mov 0x480(%rsp),%rax
000000000004ED56 test %rax,%rax
000000000004ED59 je 0x000000000004ED64
000000000004ED5B jmp 0x000000000004ED5D
000000000004ED5D jmp 0x000000000004EF18
000000000004ED62 ud2
000000000004ED64 lea 0x480(%rsp),%rsi
000000000004ED6C add $8,%rsi
000000000004ED70 lea 0x580(%rsp),%rdi
000000000004ED78 mov $0x38,%edx
000000000004ED7D call 0x000000000002E4B8
000000000004ED82 lea 0x448(%rsp),%rdi
000000000004ED8A lea 0x580(%rsp),%rsi
000000000004ED92 mov $0x38,%edx
000000000004ED97 call 0x000000000002E4B8
000000000004ED9C mov 0x1E8(%rsp),%rax
000000000004EDA4 mov %rax,0x678(%rsp)
000000000004EDAC mov 0x1F0(%rsp),%rax
000000000004EDB4 mov %rax,0x680(%rsp)
000000000004EDBC mov 0x1F8(%rsp),%rax
000000000004EDC4 mov %rax,0x688(%rsp)
000000000004EDCC mov 0x310(%rsp),%rax
000000000004EDD4 mov %rax,0x690(%rsp)
000000000004EDDC mov 0x318(%rsp),%rax
000000000004EDE4 mov %rax,0x698(%rsp)
000000000004EDEC mov 0x320(%rsp),%rax
000000000004EDF4 mov %rax,0x6A0(%rsp)
000000000004EDFC mov 0x328(%rsp),%rax
000000000004EE04 mov %rax,0x6A8(%rsp)
000000000004EE0C lea 0x6B0(%rsp),%rdi
000000000004EE14 lea 0x28(%rsp),%rsi
000000000004EE19 mov $0x50,%edx
000000000004EE1E call 0x000000000002E4B8
000000000004EE23 lea 0x700(%rsp),%rdi
000000000004EE2B lea 0x448(%rsp),%rsi
000000000004EE33 mov $0x38,%edx
000000000004EE38 call 0x000000000002E4B8
000000000004EE3D mov 0x678(%rsp),%rax
000000000004EE45 mov %rax,0x5B8(%rsp)
000000000004EE4D mov 0x680(%rsp),%rax
000000000004EE55 mov %rax,0x5C0(%rsp)
000000000004EE5D mov 0x688(%rsp),%rax
000000000004EE65 mov %rax,0x5C8(%rsp)
000000000004EE6D mov 0x690(%rsp),%rax
000000000004EE75 mov %rax,0x5D0(%rsp)
000000000004EE7D mov 0x698(%rsp),%rax
000000000004EE85 mov %rax,0x5D8(%rsp)
000000000004EE8D mov 0x6A0(%rsp),%rax
000000000004EE95 mov %rax,0x5E0(%rsp)
000000000004EE9D mov 0x6A8(%rsp),%rax
000000000004EEA5 mov %rax,0x5E8(%rsp)
000000000004EEAD lea 0x5B8(%rsp),%rdi
000000000004EEB5 add $0x38,%rdi
000000000004EEB9 lea 0x6B0(%rsp),%rsi
000000000004EEC1 mov $0x50,%edx
000000000004EEC6 call 0x000000000002E4B8
000000000004EECB lea 0x5B8(%rsp),%rdi
000000000004EED3 add $0x88,%rdi
000000000004EEDA lea 0x700(%rsp),%rsi
000000000004EEE2 mov $0x38,%edx
000000000004EEE7 call 0x000000000002E4B8
000000000004EEEC mov 0x18(%rsp),%rdi
000000000004EEF1 add $8,%rdi
000000000004EEF5 lea 0x5B8(%rsp),%rsi
000000000004EEFD mov $0xC0,%edx
000000000004EF02 call 0x000000000002E4B8
000000000004EF07 mov 0x18(%rsp),%rax
000000000004EF0C movq $0,(%rax)
000000000004EF13 jmp 0x000000000004EB09
000000000004EF18 mov 0x18(%rsp),%rdi
000000000004EF1D mov 0x4B8(%rsp),%rax
000000000004EF25 mov %rax,0x530(%rsp)
000000000004EF2D movups 0x488(%rsp),%xmm0
000000000004EF35 movups 0x498(%rsp),%xmm1
000000000004EF3D movups 0x4A8(%rsp),%xmm2
000000000004EF45 movaps %xmm2,0x520(%rsp)
000000000004EF4D movaps %xmm1,0x510(%rsp)
000000000004EF55 movaps %xmm0,0x500(%rsp)
000000000004EF5D mov 0x530(%rsp),%rax
000000000004EF65 mov %rax,0x570(%rsp)
000000000004EF6D movaps 0x500(%rsp),%xmm0
000000000004EF75 movaps 0x510(%rsp),%xmm1
000000000004EF7D movaps 0x520(%rsp),%xmm2
000000000004EF85 movaps %xmm2,0x560(%rsp)
000000000004EF8D movaps %xmm1,0x550(%rsp)
000000000004EF95 movaps %xmm0,0x540(%rsp)
000000000004EF9D lea 0x302B48,%rdx
000000000004EFA4 lea 0x540(%rsp),%rsi
000000000004EFAC call 0x0000000000076460
000000000004EFB1 jmp 0x000000000004EFCE
000000000004EFB3 jmp 0x000000000004ED0F
000000000004EFB8 mov %rax,%rcx
000000000004EFBB mov %edx,%eax
000000000004EFBD mov %rcx,0x738(%rsp)
000000000004EFC5 mov %eax,0x740(%rsp)
000000000004EFCC jmp 0x000000000004EFB3
000000000004EFCE lea 0x310(%rsp),%rdi
000000000004EFD6 call 0x000000000009C8C0
000000000004EFDB jmp 0x000000000004EB09

 Function call queue at function 4ea30: [5dfb0, 78180, 76460, 5d2d0, 77780, 44da0, 78f80, b25f0, 9c8c0, 78590]

Analyzing function at 5dfb0
000000000005DFB0 sub $0x418,%rsp
000000000005DFB7 mov %rdx,0x18(%rsp)
000000000005DFBC mov %rsi,0x20(%rsp)
000000000005DFC1 mov %rdi,0x28(%rsp)
000000000005DFC6 mov %rdi,0x30(%rsp)
000000000005DFCB lea 0xA8(%rsp),%rdi
000000000005DFD3 call 0x000000000005E2C0
000000000005DFD8 lea 0x68(%rsp),%rdi
000000000005DFDD lea 0xA8(%rsp),%rsi
000000000005DFE5 call 0x0000000000078490
000000000005DFEA mov 0x68(%rsp),%rax
000000000005DFEF test %rax,%rax
000000000005DFF2 je 0x000000000005DFFA
000000000005DFF4 jmp 0x000000000005DFF6
000000000005DFF6 jmp 0x000000000005E040
000000000005DFF8 ud2
000000000005DFFA lea 0x68(%rsp),%rsi
000000000005DFFF add $8,%rsi
000000000005E003 lea 0x158(%rsp),%rdi
000000000005E00B mov $0x30,%edx
000000000005E010 call 0x000000000002E4B8
000000000005E015 lea 0x38(%rsp),%rdi
000000000005E01A lea 0x158(%rsp),%rsi
000000000005E022 mov $0x30,%edx
000000000005E027 call 0x000000000002E4B8
000000000005E02C mov 0x18(%rsp),%rsi
000000000005E031 lea 0x1C8(%rsp),%rdi
000000000005E039 call 0x000000000005F050
000000000005E03E jmp 0x000000000005E09D
000000000005E040 lea 0x68(%rsp),%rsi
000000000005E045 add $8,%rsi
000000000005E049 lea 0xE8(%rsp),%rdi
000000000005E051 mov $0x38,%edx
000000000005E056 call 0x000000000002E4B8
000000000005E05B lea 0x120(%rsp),%rdi
000000000005E063 lea 0xE8(%rsp),%rsi
000000000005E06B mov $0x38,%edx
000000000005E070 call 0x000000000002E4B8
000000000005E075 mov 0x28(%rsp),%rdi
000000000005E07A lea 0x120(%rsp),%rsi
000000000005E082 lea 0x3032B8,%rdx
000000000005E089 call 0x00000000000765E0
000000000005E08E jmp 0x000000000005E090
000000000005E090 mov 0x30(%rsp),%rax
000000000005E095 add $0x418,%rsp
000000000005E09C ret
000000000005E09D lea 0x188(%rsp),%rdi
000000000005E0A5 lea 0x1C8(%rsp),%rsi
000000000005E0AD call 0x00000000000780C0
000000000005E0B2 mov 0x188(%rsp),%rax
000000000005E0BA test %rax,%rax
000000000005E0BD je 0x000000000005E0C5
000000000005E0BF jmp 0x000000000005E0C1
000000000005E0C1 jmp 0x000000000005E0F8
000000000005E0C3 ud2
000000000005E0C5 mov 0x18(%rsp),%rdx
000000000005E0CA mov 0x20(%rsp),%rsi
000000000005E0CF mov 0x190(%rsp),%rax
000000000005E0D7 mov %rax,8(%rsp)
000000000005E0DC mov 0x198(%rsp),%rax
000000000005E0E4 mov %rax,0x10(%rsp)
000000000005E0E9 lea 0x2C8(%rsp),%rdi
000000000005E0F1 call 0x000000000004C000
000000000005E0F6 jmp 0x000000000005E14E
000000000005E0F8 lea 0x188(%rsp),%rsi
000000000005E100 add $8,%rsi
000000000005E104 lea 0x208(%rsp),%rdi
000000000005E10C mov $0x38,%edx
000000000005E111 call 0x000000000002E4B8
000000000005E116 lea 0x240(%rsp),%rdi
000000000005E11E lea 0x208(%rsp),%rsi
000000000005E126 mov $0x38,%edx
000000000005E12B call 0x000000000002E4B8
000000000005E130 mov 0x28(%rsp),%rdi
000000000005E135 lea 0x240(%rsp),%rsi
000000000005E13D lea 0x3032D0,%rdx
000000000005E144 call 0x00000000000765E0
000000000005E149 jmp 0x000000000005E090
000000000005E14E lea 0x288(%rsp),%rdi
000000000005E156 lea 0x2C8(%rsp),%rsi
000000000005E15E call 0x0000000000077BF0
000000000005E163 mov 0x288(%rsp),%eax
000000000005E16A test %rax,%rax
000000000005E16D je 0x000000000005E178
000000000005E16F jmp 0x000000000005E171
000000000005E171 jmp 0x000000000005E267
000000000005E176 ud2
000000000005E178 mov 0x28C(%rsp),%rax
000000000005E180 mov %rax,0x378(%rsp)
000000000005E188 mov 0x294(%rsp),%eax
000000000005E18F mov %eax,0x380(%rsp)
000000000005E196 mov 0x378(%rsp),%rax
000000000005E19E mov %rax,0x278(%rsp)
000000000005E1A6 mov 0x380(%rsp),%eax
000000000005E1AD mov %eax,0x280(%rsp)
000000000005E1B4 lea 0x3D8(%rsp),%rdi
000000000005E1BC lea 0x38(%rsp),%rsi
000000000005E1C1 mov $0x30,%edx
000000000005E1C6 call 0x000000000002E4B8
000000000005E1CB mov 0x278(%rsp),%rax
000000000005E1D3 mov %rax,0x408(%rsp)
000000000005E1DB mov 0x280(%rsp),%eax
000000000005E1E2 mov %eax,0x410(%rsp)
000000000005E1E9 lea 0x388(%rsp),%rdi
000000000005E1F1 lea 0x3D8(%rsp),%rsi
000000000005E1F9 mov $0x30,%edx
000000000005E1FE call 0x000000000002E4B8
000000000005E203 mov 8(%rsp),%rcx
000000000005E208 mov 0x10(%rsp),%rax
000000000005E20D mov 0x28(%rsp),%rdi
000000000005E212 mov %rcx,0x3B8(%rsp)
000000000005E21A mov %rax,0x3C0(%rsp)
000000000005E222 mov 0x408(%rsp),%rax
000000000005E22A mov %rax,0x3C8(%rsp)
000000000005E232 mov 0x410(%rsp),%eax
000000000005E239 mov %eax,0x3D0(%rsp)
000000000005E240 add $8,%rdi
000000000005E244 lea 0x388(%rsp),%rsi
000000000005E24C mov $0x50,%edx
000000000005E251 call 0x000000000002E4B8
000000000005E256 mov 0x28(%rsp),%rax
000000000005E25B movq $0,(%rax)
000000000005E262 jmp 0x000000000005E090
000000000005E267 lea 0x288(%rsp),%rsi
000000000005E26F add $8,%rsi
000000000005E273 lea 0x308(%rsp),%rdi
000000000005E27B mov $0x38,%edx
000000000005E280 call 0x000000000002E4B8
000000000005E285 lea 0x340(%rsp),%rdi
000000000005E28D lea 0x308(%rsp),%rsi
000000000005E295 mov $0x38,%edx
000000000005E29A call 0x000000000002E4B8
000000000005E29F mov 0x28(%rsp),%rdi
000000000005E2A4 lea 0x340(%rsp),%rsi
000000000005E2AC lea 0x3032E8,%rdx
000000000005E2B3 call 0x00000000000765E0
000000000005E2B8 jmp 0x000000000005E090

 Function call queue at function 5dfb0: [5e2c0, 78490, 5f050, 765e0, 780c0, 4c000, 77bf0]

Analyzing function at 5e2c0
000000000005E2C0 sub $0xF88,%rsp
000000000005E2C7 mov %rdx,0x28(%rsp)
000000000005E2CC mov %rsi,0x30(%rsp)
000000000005E2D1 mov %rdi,%rax
000000000005E2D4 mov 0x30(%rsp),%rdi
000000000005E2D9 mov %rax,0x38(%rsp)
000000000005E2DE mov %rax,0x40(%rsp)
000000000005E2E3 call 0x00000000000A5610
000000000005E2E8 mov %rax,0x48(%rsp)
000000000005E2ED mov $1,%eax
000000000005E2F2 xor %ecx,%ecx
000000000005E2F4 cmpq $0,0x48(%rsp)
000000000005E2FA cmove %rcx,%rax
000000000005E2FE cmp $1,%rax
000000000005E302 jne 0x000000000005E323
000000000005E304 mov 0x48(%rsp),%rdi
000000000005E309 mov %rdi,0x18(%rsp)
000000000005E30E lea 0x305D20,%rsi
000000000005E315 call 0x0000000000030FD0
000000000005E31A mov %al,0x27(%rsp)
000000000005E31E jmp 0x000000000005E48C
000000000005E323 mov 0x30(%rsp),%rsi
000000000005E328 lea 0x88(%rsp),%rdi
000000000005E330 call 0x00000000000A8E40
000000000005E335 lea 0x50(%rsp),%rdi
000000000005E33A lea 0x88(%rsp),%rsi
000000000005E342 call 0x0000000000077CD0
000000000005E347 mov 0x50(%rsp),%al
000000000005E34B add $0xF6,%al
000000000005E34D setne %al
000000000005E350 movzbl %al,%eax
000000000005E353 je 0x000000000005E35B
000000000005E355 jmp 0x000000000005E357
000000000005E357 jmp 0x000000000005E36F
000000000005E359 ud2
000000000005E35B mov 0x30(%rsp),%rsi
000000000005E360 lea 0x170(%rsp),%rdi
000000000005E368 call 0x0000000000046820
000000000005E36D jmp 0x000000000005E3C8
000000000005E36F lea 0x50(%rsp),%rsi
000000000005E374 lea 0xC0(%rsp),%rdi
000000000005E37C mov $0x38,%edx
000000000005E381 call 0x000000000002E4B8
000000000005E386 lea 0xF8(%rsp),%rdi
000000000005E38E lea 0xC0(%rsp),%rsi
000000000005E396 mov $0x38,%edx
000000000005E39B call 0x000000000002E4B8
000000000005E3A0 mov 0x38(%rsp),%rdi
000000000005E3A5 lea 0xF8(%rsp),%rsi
000000000005E3AD lea 0x303300,%rdx
000000000005E3B4 call 0x0000000000075FD0
000000000005E3B9 jmp 0x000000000005E3BB
000000000005E3BB mov 0x40(%rsp),%rax
000000000005E3C0 add $0xF88,%rsp
000000000005E3C7 ret
000000000005E3C8 lea 0x130(%rsp),%rdi
000000000005E3D0 lea 0x170(%rsp),%rsi
000000000005E3D8 call 0x0000000000078330
000000000005E3DD movzbl 0x130(%rsp),%eax
000000000005E3E5 test $1,%al
000000000005E3E7 je 0x000000000005E3EF
000000000005E3E9 jmp 0x000000000005E3EB
000000000005E3EB jmp 0x000000000005E40A
000000000005E3ED ud2
000000000005E3EF mov 0x131(%rsp),%al
000000000005E3F6 lea 0x220(%rsp),%rdi
000000000005E3FE and $1,%al
000000000005E400 movzbl %al,%esi
000000000005E403 call 0x00000000000A9520
000000000005E408 jmp 0x000000000005E460
000000000005E40A lea 0x130(%rsp),%rsi
000000000005E412 add $8,%rsi
000000000005E416 lea 0x1B0(%rsp),%rdi
000000000005E41E mov $0x38,%edx
000000000005E423 call 0x000000000002E4B8
000000000005E428 lea 0x1E8(%rsp),%rdi
000000000005E430 lea 0x1B0(%rsp),%rsi
000000000005E438 mov $0x38,%edx
000000000005E43D call 0x000000000002E4B8
000000000005E442 mov 0x38(%rsp),%rdi
000000000005E447 lea 0x1E8(%rsp),%rsi
000000000005E44F lea 0x303318,%rdx
000000000005E456 call 0x0000000000075FD0
000000000005E45B jmp 0x000000000005E3BB
000000000005E460 mov 0x38(%rsp),%rdi
000000000005E465 add $8,%rdi
000000000005E469 lea 0x220(%rsp),%rsi
000000000005E471 mov $0x30,%edx
000000000005E476 call 0x000000000002E4B8
000000000005E47B mov 0x38(%rsp),%rax
000000000005E480 movq $0,(%rax)
000000000005E487 jmp 0x000000000005E3BB
000000000005E48C mov 0x27(%rsp),%al
000000000005E490 test $1,%al
000000000005E492 jne 0x000000000005E4AD
000000000005E494 jmp 0x000000000005E496
000000000005E496 mov 0x18(%rsp),%rdi
000000000005E49B lea 0x305DE0,%rsi
000000000005E4A2 call 0x0000000000030FD0
000000000005E4A7 mov %al,0x17(%rsp)
000000000005E4AB jmp 0x000000000005E4C8
000000000005E4AD movb $1,0x256(%rsp)
000000000005E4B5 testb $1,0x256(%rsp)
000000000005E4BD jne 0x000000000005E5B3
000000000005E4C3 jmp 0x000000000005E59C
000000000005E4C8 mov 0x17(%rsp),%al
000000000005E4CC test $1,%al
000000000005E4CE jne 0x000000000005E4DF
000000000005E4D0 jmp 0x000000000005E4D2
000000000005E4D2 movb $0,0x257(%rsp)
000000000005E4DA jmp 0x000000000005E587
000000000005E4DF mov 0x30(%rsp),%rsi
000000000005E4E4 lea 0x298(%rsp),%rdi
000000000005E4EC lea 0x305D20,%rdx
000000000005E4F3 call 0x00000000000314A0
000000000005E4F8 lea 0x258(%rsp),%rdi
000000000005E500 lea 0x298(%rsp),%rsi
000000000005E508 call 0x0000000000077B40
000000000005E50D movzbl 0x258(%rsp),%eax
000000000005E515 test $1,%al
000000000005E517 je 0x000000000005E51F
000000000005E519 jmp 0x000000000005E51B
000000000005E51B jmp 0x000000000005E531
000000000005E51D ud2
000000000005E51F mov 0x259(%rsp),%al
000000000005E526 and $1,%al
000000000005E528 mov %al,0x257(%rsp)
000000000005E52F jmp 0x000000000005E587
000000000005E531 lea 0x258(%rsp),%rsi
000000000005E539 add $8,%rsi
000000000005E53D lea 0x2D8(%rsp),%rdi
000000000005E545 mov $0x38,%edx
000000000005E54A call 0x000000000002E4B8
000000000005E54F lea 0x310(%rsp),%rdi
000000000005E557 lea 0x2D8(%rsp),%rsi
000000000005E55F mov $0x38,%edx
000000000005E564 call 0x000000000002E4B8
000000000005E569 mov 0x38(%rsp),%rdi
000000000005E56E lea 0x310(%rsp),%rsi
000000000005E576 lea 0x303330,%rdx
000000000005E57D call 0x0000000000075FD0
000000000005E582 jmp 0x000000000005E3BB
000000000005E587 mov 0x257(%rsp),%al
000000000005E58E and $1,%al
000000000005E590 mov %al,0x256(%rsp)
000000000005E597 jmp 0x000000000005E4B5
000000000005E59C mov 0x18(%rsp),%rdi
000000000005E5A1 lea 0x305D50,%rsi
000000000005E5A8 call 0x0000000000030FD0
000000000005E5AD mov %al,0x16(%rsp)
000000000005E5B1 jmp 0x000000000005E5CE
000000000005E5B3 movb $1,0x255(%rsp)
000000000005E5BB testb $1,0x255(%rsp)
000000000005E5C3 jne 0x000000000005E6B9
000000000005E5C9 jmp 0x000000000005E6A2
000000000005E5CE mov 0x16(%rsp),%al
000000000005E5D2 test $1,%al
000000000005E5D4 jne 0x000000000005E5E5
000000000005E5D6 jmp 0x000000000005E5D8
000000000005E5D8 movb $0,0x34F(%rsp)
000000000005E5E0 jmp 0x000000000005E68D
000000000005E5E5 mov 0x30(%rsp),%rsi
000000000005E5EA lea 0x390(%rsp),%rdi
000000000005E5F2 lea 0x305D20,%rdx
000000000005E5F9 call 0x00000000000314A0
000000000005E5FE lea 0x350(%rsp),%rdi
000000000005E606 lea 0x390(%rsp),%rsi
000000000005E60E call 0x0000000000077B40
000000000005E613 movzbl 0x350(%rsp),%eax
000000000005E61B test $1,%al
000000000005E61D je 0x000000000005E625
000000000005E61F jmp 0x000000000005E621
000000000005E621 jmp 0x000000000005E637
000000000005E623 ud2
000000000005E625 mov 0x351(%rsp),%al
000000000005E62C and $1,%al
000000000005E62E mov %al,0x34F(%rsp)
000000000005E635 jmp 0x000000000005E68D
000000000005E637 lea 0x350(%rsp),%rsi
000000000005E63F add $8,%rsi
000000000005E643 lea 0x3D0(%rsp),%rdi
000000000005E64B mov $0x38,%edx
000000000005E650 call 0x000000000002E4B8
000000000005E655 lea 0x408(%rsp),%rdi
000000000005E65D lea 0x3D0(%rsp),%rsi
000000000005E665 mov $0x38,%edx
000000000005E66A call 0x000000000002E4B8
000000000005E66F mov 0x38(%rsp),%rdi
000000000005E674 lea 0x408(%rsp),%rsi
000000000005E67C lea 0x303348,%rdx
000000000005E683 call 0x0000000000075FD0
000000000005E688 jmp 0x000000000005E3BB
000000000005E68D mov 0x34F(%rsp),%al
000000000005E694 and $1,%al
000000000005E696 mov %al,0x255(%rsp)
000000000005E69D jmp 0x000000000005E5BB
000000000005E6A2 mov 0x30(%rsp),%rsi
000000000005E6A7 lea 0xA48(%rsp),%rdi
000000000005E6AF call 0x00000000000A8E40
000000000005E6B4 jmp 0x000000000005EBEB
000000000005E6B9 mov 0x30(%rsp),%rsi
000000000005E6BE lea 0x480(%rsp),%rdi
000000000005E6C6 lea 0x305D20,%rdx
000000000005E6CD call 0x00000000000314A0
000000000005E6D2 lea 0x440(%rsp),%rdi
000000000005E6DA lea 0x480(%rsp),%rsi
000000000005E6E2 call 0x0000000000077B40
000000000005E6E7 movzbl 0x440(%rsp),%eax
000000000005E6EF test $1,%al
000000000005E6F1 je 0x000000000005E6F9
000000000005E6F3 jmp 0x000000000005E6F5
000000000005E6F5 jmp 0x000000000005E712
000000000005E6F7 ud2
000000000005E6F9 mov 0x28(%rsp),%rdx
000000000005E6FE mov 0x30(%rsp),%rsi
000000000005E703 lea 0x588(%rsp),%rdi
000000000005E70B call 0x0000000000057C20
000000000005E710 jmp 0x000000000005E768
000000000005E712 lea 0x440(%rsp),%rsi
000000000005E71A add $8,%rsi
000000000005E71E lea 0x4C0(%rsp),%rdi
000000000005E726 mov $0x38,%edx
000000000005E72B call 0x000000000002E4B8
000000000005E730 lea 0x4F8(%rsp),%rdi
000000000005E738 lea 0x4C0(%rsp),%rsi
000000000005E740 mov $0x38,%edx
000000000005E745 call 0x000000000002E4B8
000000000005E74A mov 0x38(%rsp),%rdi
000000000005E74F lea 0x4F8(%rsp),%rsi
000000000005E757 lea 0x303360,%rdx
000000000005E75E call 0x0000000000075FD0
000000000005E763 jmp 0x000000000005E3BB
000000000005E768 lea 0x548(%rsp),%rdi
000000000005E770 lea 0x588(%rsp),%rsi
000000000005E778 call 0x0000000000078DD0
000000000005E77D movzbl 0x548(%rsp),%eax
000000000005E785 test $1,%al
000000000005E787 je 0x000000000005E78F
000000000005E789 jmp 0x000000000005E78B
000000000005E78B jmp 0x000000000005E803
000000000005E78D ud2
000000000005E78F mov 0x30(%rsp),%rdi
000000000005E794 mov 0x549(%rsp),%rax
000000000005E79C mov %rax,0x638(%rsp)
000000000005E7A4 mov 0x551(%rsp),%rax
000000000005E7AC mov %rax,0x640(%rsp)
000000000005E7B4 mov 0x559(%rsp),%ax
000000000005E7BC mov %ax,0x648(%rsp)
000000000005E7C4 mov 0x638(%rsp),%rax
000000000005E7CC mov %rax,0x530(%rsp)
000000000005E7D4 mov 0x640(%rsp),%rax
000000000005E7DC mov %rax,0x538(%rsp)
000000000005E7E4 mov 0x648(%rsp),%ax
000000000005E7EC mov %ax,0x540(%rsp)
000000000005E7F4 call 0x00000000000A5300
000000000005E7F9 mov %rax,0x650(%rsp)
000000000005E801 jmp 0x000000000005E859
000000000005E803 lea 0x548(%rsp),%rsi
000000000005E80B add $8,%rsi
000000000005E80F lea 0x5C8(%rsp),%rdi
000000000005E817 mov $0x38,%edx
000000000005E81C call 0x000000000002E4B8
000000000005E821 lea 0x600(%rsp),%rdi
000000000005E829 lea 0x5C8(%rsp),%rsi
000000000005E831 mov $0x38,%edx
000000000005E836 call 0x000000000002E4B8
000000000005E83B mov 0x38(%rsp),%rdi
000000000005E840 lea 0x600(%rsp),%rsi
000000000005E848 lea 0x303378,%rdx
000000000005E84F call 0x0000000000075FD0
000000000005E854 jmp 0x000000000005E3BB
000000000005E859 lea 0x650(%rsp),%rdi
000000000005E861 call 0x000000000006E6D0
000000000005E866 mov %al,0x15(%rsp)
000000000005E86A mov 0x15(%rsp),%al
000000000005E86E test $1,%al
000000000005E870 jne 0x000000000005E87E
000000000005E872 jmp 0x000000000005E874
000000000005E874 movb $0,0x65F(%rsp)
000000000005E87C jmp 0x000000000005E8B9
000000000005E87E mov 0x650(%rsp),%rdi
000000000005E886 lea 0x303390,%rsi
000000000005E88D call 0x000000000006E2D0
000000000005E892 mov %rax,8(%rsp)
000000000005E897 mov 8(%rsp),%rdi
000000000005E89C lea 0x305D50,%rsi
000000000005E8A3 call 0x0000000000030FD0
000000000005E8A8 mov %al,7(%rsp)
000000000005E8AC mov 7(%rsp),%al
000000000005E8B0 and $1,%al
000000000005E8B2 mov %al,0x65F(%rsp)
000000000005E8B9 testb $1,0x65F(%rsp)
000000000005E8C1 jne 0x000000000005E90D
000000000005E8C3 mov 0x530(%rsp),%rax
000000000005E8CB mov %rax,0x9F8(%rsp)
000000000005E8D3 mov 0x538(%rsp),%rax
000000000005E8DB mov %rax,0xA00(%rsp)
000000000005E8E3 mov 0x540(%rsp),%ax
000000000005E8EB mov %ax,0xA08(%rsp)
000000000005E8F3 lea 0x9C8(%rsp),%rdi
000000000005E8FB lea 0x9F8(%rsp),%rsi
000000000005E903 call 0x00000000000A9530
000000000005E908 jmp 0x000000000005EBBF
000000000005E90D mov 0x30(%rsp),%rsi
000000000005E912 lea 0x6A0(%rsp),%rdi
000000000005E91A lea 0x305D50,%rdx
000000000005E921 call 0x00000000000314A0
000000000005E926 lea 0x660(%rsp),%rdi
000000000005E92E lea 0x6A0(%rsp),%rsi
000000000005E936 call 0x0000000000077B40
000000000005E93B movzbl 0x660(%rsp),%eax
000000000005E943 test $1,%al
000000000005E945 je 0x000000000005E94D
000000000005E947 jmp 0x000000000005E949
000000000005E949 jmp 0x000000000005E961
000000000005E94B ud2
000000000005E94D mov 0x30(%rsp),%rsi
000000000005E952 lea 0x790(%rsp),%rdi
000000000005E95A call 0x0000000000046820
000000000005E95F jmp 0x000000000005E9B7
000000000005E961 lea 0x660(%rsp),%rsi
000000000005E969 add $8,%rsi
000000000005E96D lea 0x6E0(%rsp),%rdi
000000000005E975 mov $0x38,%edx
000000000005E97A call 0x000000000002E4B8
000000000005E97F lea 0x718(%rsp),%rdi
000000000005E987 lea 0x6E0(%rsp),%rsi
000000000005E98F mov $0x38,%edx
000000000005E994 call 0x000000000002E4B8
000000000005E999 mov 0x38(%rsp),%rdi
000000000005E99E lea 0x718(%rsp),%rsi
000000000005E9A6 lea 0x3033A8,%rdx
000000000005E9AD call 0x0000000000075FD0
000000000005E9B2 jmp 0x000000000005E3BB
000000000005E9B7 lea 0x750(%rsp),%rdi
000000000005E9BF lea 0x790(%rsp),%rsi
000000000005E9C7 call 0x0000000000078330
000000000005E9CC movzbl 0x750(%rsp),%eax
000000000005E9D4 test $1,%al
000000000005E9D6 je 0x000000000005E9DE
000000000005E9D8 jmp 0x000000000005E9DA
000000000005E9DA jmp 0x000000000005E9FD
000000000005E9DC ud2
000000000005E9DE mov 0x28(%rsp),%rsi
000000000005E9E3 mov 0x751(%rsp),%al
000000000005E9EA mov %al,6(%rsp)
000000000005E9EE lea 0x880(%rsp),%rdi
000000000005E9F6 call 0x0000000000065330
000000000005E9FB jmp 0x000000000005EA53
000000000005E9FD lea 0x750(%rsp),%rsi
000000000005EA05 add $8,%rsi
000000000005EA09 lea 0x7D0(%rsp),%rdi
000000000005EA11 mov $0x38,%edx
000000000005EA16 call 0x000000000002E4B8
000000000005EA1B lea 0x808(%rsp),%rdi
000000000005EA23 lea 0x7D0(%rsp),%rsi
000000000005EA2B mov $0x38,%edx
000000000005EA30 call 0x000000000002E4B8
000000000005EA35 mov 0x38(%rsp),%rdi
000000000005EA3A lea 0x808(%rsp),%rsi
000000000005EA42 lea 0x3033C0,%rdx
000000000005EA49 call 0x0000000000075FD0
000000000005EA4E jmp 0x000000000005E3BB
000000000005EA53 lea 0x840(%rsp),%rdi
000000000005EA5B lea 0x880(%rsp),%rsi
000000000005EA63 call 0x0000000000078B80
000000000005EA68 mov 0x840(%rsp),%rax
000000000005EA70 test %rax,%rax
000000000005EA73 je 0x000000000005EA7E
000000000005EA75 jmp 0x000000000005EA77
000000000005EA77 jmp 0x000000000005EB3D
000000000005EA7C ud2
000000000005EA7E mov 6(%rsp),%dl
000000000005EA82 mov 0x848(%rsp),%rcx
000000000005EA8A mov 0x850(%rsp),%rax
000000000005EA92 mov 0x530(%rsp),%rsi
000000000005EA9A mov %rsi,0x958(%rsp)
000000000005EAA2 mov 0x538(%rsp),%rsi
000000000005EAAA mov %rsi,0x960(%rsp)
000000000005EAB2 mov 0x540(%rsp),%si
000000000005EABA mov %si,0x968(%rsp)
000000000005EAC2 and $1,%dl
000000000005EAC5 mov %dl,0x940(%rsp)
000000000005EACC mov 0x958(%rsp),%rdx
000000000005EAD4 mov %rdx,0x941(%rsp)
000000000005EADC mov 0x960(%rsp),%rdx
000000000005EAE4 mov %rdx,0x949(%rsp)
000000000005EAEC mov 0x968(%rsp),%dx
000000000005EAF4 mov %dx,0x951(%rsp)
000000000005EAFC mov %rcx,0x930(%rsp)
000000000005EB04 mov %rax,0x938(%rsp)
000000000005EB0C lea 0x9A0(%rsp),%rdi
000000000005EB14 lea 0x930(%rsp),%rsi
000000000005EB1C mov $0x28,%edx
000000000005EB21 call 0x000000000002E4B8
000000000005EB26 lea 0x970(%rsp),%rdi
000000000005EB2E lea 0x9A0(%rsp),%rsi
000000000005EB36 call 0x00000000000A9550
000000000005EB3B jmp 0x000000000005EB93
000000000005EB3D lea 0x840(%rsp),%rsi
000000000005EB45 add $8,%rsi
000000000005EB49 lea 0x8C0(%rsp),%rdi
000000000005EB51 mov $0x38,%edx
000000000005EB56 call 0x000000000002E4B8
000000000005EB5B lea 0x8F8(%rsp),%rdi
000000000005EB63 lea 0x8C0(%rsp),%rsi
000000000005EB6B mov $0x38,%edx
000000000005EB70 call 0x000000000002E4B8
000000000005EB75 mov 0x38(%rsp),%rdi
000000000005EB7A lea 0x8F8(%rsp),%rsi
000000000005EB82 lea 0x3033D8,%rdx
000000000005EB89 call 0x0000000000075FD0
000000000005EB8E jmp 0x000000000005E3BB
000000000005EB93 mov 0x38(%rsp),%rdi
000000000005EB98 add $8,%rdi
000000000005EB9C lea 0x970(%rsp),%rsi
000000000005EBA4 mov $0x30,%edx
000000000005EBA9 call 0x000000000002E4B8
000000000005EBAE mov 0x38(%rsp),%rax
000000000005EBB3 movq $0,(%rax)
000000000005EBBA jmp 0x000000000005E3BB
000000000005EBBF mov 0x38(%rsp),%rdi
000000000005EBC4 add $8,%rdi
000000000005EBC8 lea 0x9C8(%rsp),%rsi
000000000005EBD0 mov $0x30,%edx
000000000005EBD5 call 0x000000000002E4B8
000000000005EBDA mov 0x38(%rsp),%rax
000000000005EBDF movq $0,(%rax)
000000000005EBE6 jmp 0x000000000005E3BB
000000000005EBEB lea 0xA10(%rsp),%rdi
000000000005EBF3 lea 0xA48(%rsp),%rsi
000000000005EBFB call 0x0000000000077CD0
000000000005EC00 mov 0xA10(%rsp),%al
000000000005EC07 add $0xF6,%al
000000000005EC09 setne %al
000000000005EC0C movzbl %al,%eax
000000000005EC0F je 0x000000000005EC17
000000000005EC11 jmp 0x000000000005EC13
000000000005EC13 jmp 0x000000000005EC2E
000000000005EC15 ud2
000000000005EC17 mov 0x18(%rsp),%rdi
000000000005EC1C lea 0x305DE0,%rsi
000000000005EC23 call 0x0000000000030FD0
000000000005EC28 mov %al,5(%rsp)
000000000005EC2C jmp 0x000000000005EC80
000000000005EC2E lea 0xA10(%rsp),%rsi
000000000005EC36 lea 0xA80(%rsp),%rdi
000000000005EC3E mov $0x38,%edx
000000000005EC43 call 0x000000000002E4B8
000000000005EC48 lea 0xAB8(%rsp),%rdi
000000000005EC50 lea 0xA80(%rsp),%rsi
000000000005EC58 mov $0x38,%edx
000000000005EC5D call 0x000000000002E4B8
000000000005EC62 mov 0x38(%rsp),%rdi
000000000005EC67 lea 0xAB8(%rsp),%rsi
000000000005EC6F lea 0x3033F0,%rdx
000000000005EC76 call 0x0000000000075FD0
000000000005EC7B jmp 0x000000000005E3BB
000000000005EC80 mov 5(%rsp),%al
000000000005EC84 test $1,%al
000000000005EC86 jne 0x000000000005ECA4
000000000005EC88 jmp 0x000000000005EC8A
000000000005EC8A mov 0x18(%rsp),%rdi
000000000005EC8F lea 0x305CF0,%rsi
000000000005EC96 call 0x0000000000030FD0
000000000005EC9B mov %al,4(%rsp)
000000000005EC9F jmp 0x000000000005EEA1
000000000005ECA4 mov 0x30(%rsp),%rsi
000000000005ECA9 lea 0xB30(%rsp),%rdi
000000000005ECB1 lea 0x305DE0,%rdx
000000000005ECB8 call 0x00000000000314A0
000000000005ECBD lea 0xAF0(%rsp),%rdi
000000000005ECC5 lea 0xB30(%rsp),%rsi
000000000005ECCD call 0x0000000000077B40
000000000005ECD2 movzbl 0xAF0(%rsp),%eax
000000000005ECDA test $1,%al
000000000005ECDC je 0x000000000005ECE4
000000000005ECDE jmp 0x000000000005ECE0
000000000005ECE0 jmp 0x000000000005ECF8
000000000005ECE2 ud2
000000000005ECE4 mov 0x30(%rsp),%rsi
000000000005ECE9 lea 0xC38(%rsp),%rdi
000000000005ECF1 call 0x0000000000070A70
000000000005ECF6 jmp 0x000000000005ED4E
000000000005ECF8 lea 0xAF0(%rsp),%rsi
000000000005ED00 add $8,%rsi
000000000005ED04 lea 0xB70(%rsp),%rdi
000000000005ED0C mov $0x38,%edx
000000000005ED11 call 0x000000000002E4B8
000000000005ED16 lea 0xBA8(%rsp),%rdi
000000000005ED1E lea 0xB70(%rsp),%rsi
000000000005ED26 mov $0x38,%edx
000000000005ED2B call 0x000000000002E4B8
000000000005ED30 mov 0x38(%rsp),%rdi
000000000005ED35 lea 0xBA8(%rsp),%rsi
000000000005ED3D lea 0x303408,%rdx
000000000005ED44 call 0x0000000000075FD0
000000000005ED49 jmp 0x000000000005E3BB
000000000005ED4E lea 0xBF8(%rsp),%rdi
000000000005ED56 lea 0xC38(%rsp),%rsi
000000000005ED5E call 0x0000000000078DD0
000000000005ED63 movzbl 0xBF8(%rsp),%eax
000000000005ED6B test $1,%al
000000000005ED6D je 0x000000000005ED78
000000000005ED6F jmp 0x000000000005ED71
000000000005ED71 jmp 0x000000000005EE1F
000000000005ED76 ud2
000000000005ED78 mov 0xBF9(%rsp),%rax
000000000005ED80 mov %rax,0xCE8(%rsp)
000000000005ED88 mov 0xC01(%rsp),%rax
000000000005ED90 mov %rax,0xCF0(%rsp)
000000000005ED98 mov 0xC09(%rsp),%ax
000000000005EDA0 mov %ax,0xCF8(%rsp)
000000000005EDA8 mov 0xCE8(%rsp),%rax
000000000005EDB0 mov %rax,0xBE0(%rsp)
000000000005EDB8 mov 0xCF0(%rsp),%rax
000000000005EDC0 mov %rax,0xBE8(%rsp)
000000000005EDC8 mov 0xCF8(%rsp),%ax
000000000005EDD0 mov %ax,0xBF0(%rsp)
000000000005EDD8 mov 0xBE0(%rsp),%rax
000000000005EDE0 mov %rax,0xD30(%rsp)
000000000005EDE8 mov 0xBE8(%rsp),%rax
000000000005EDF0 mov %rax,0xD38(%rsp)
000000000005EDF8 mov 0xBF0(%rsp),%ax
000000000005EE00 mov %ax,0xD40(%rsp)
000000000005EE08 lea 0xD00(%rsp),%rdi
000000000005EE10 lea 0xD30(%rsp),%rsi
000000000005EE18 call 0x00000000000A9530
000000000005EE1D jmp 0x000000000005EE75
000000000005EE1F lea 0xBF8(%rsp),%rsi
000000000005EE27 add $8,%rsi
000000000005EE2B lea 0xC78(%rsp),%rdi
000000000005EE33 mov $0x38,%edx
000000000005EE38 call 0x000000000002E4B8
000000000005EE3D lea 0xCB0(%rsp),%rdi
000000000005EE45 lea 0xC78(%rsp),%rsi
000000000005EE4D mov $0x38,%edx
000000000005EE52 call 0x000000000002E4B8
000000000005EE57 mov 0x38(%rsp),%rdi
000000000005EE5C lea 0xCB0(%rsp),%rsi
000000000005EE64 lea 0x303420,%rdx
000000000005EE6B call 0x0000000000075FD0
000000000005EE70 jmp 0x000000000005E3BB
000000000005EE75 mov 0x38(%rsp),%rdi
000000000005EE7A add $8,%rdi
000000000005EE7E lea 0xD00(%rsp),%rsi
000000000005EE86 mov $0x30,%edx
000000000005EE8B call 0x000000000002E4B8
000000000005EE90 mov 0x38(%rsp),%rax
000000000005EE95 movq $0,(%rax)
000000000005EE9C jmp 0x000000000005E3BB
000000000005EEA1 mov 4(%rsp),%al
000000000005EEA5 test $1,%al
000000000005EEA7 jne 0x000000000005EEC2
000000000005EEA9 jmp 0x000000000005EEAB
000000000005EEAB mov 0x30(%rsp),%rsi
000000000005EEB0 lea 0xEA8(%rsp),%rdi
000000000005EEB8 call 0x0000000000046820
000000000005EEBD jmp 0x000000000005EF8C
000000000005EEC2 mov 0x30(%rsp),%rsi
000000000005EEC7 lea 0xD88(%rsp),%rdi
000000000005EECF lea 0x305CF0,%rdx
000000000005EED6 call 0x00000000000314A0
000000000005EEDB lea 0xD48(%rsp),%rdi
000000000005EEE3 lea 0xD88(%rsp),%rsi
000000000005EEEB call 0x0000000000077B40
000000000005EEF0 movzbl 0xD48(%rsp),%eax
000000000005EEF8 test $1,%al
000000000005EEFA je 0x000000000005EF02
000000000005EEFC jmp 0x000000000005EEFE
000000000005EEFE jmp 0x000000000005EF36
000000000005EF00 ud2
000000000005EF02 mov 0x38(%rsp),%rdi
000000000005EF07 movb $3,0xE38(%rsp)
000000000005EF0F add $8,%rdi
000000000005EF13 lea 0xE38(%rsp),%rsi
000000000005EF1B mov $0x30,%edx
000000000005EF20 call 0x000000000002E4B8
000000000005EF25 mov 0x38(%rsp),%rax
000000000005EF2A movq $0,(%rax)
000000000005EF31 jmp 0x000000000005E3BB
000000000005EF36 lea 0xD48(%rsp),%rsi
000000000005EF3E add $8,%rsi
000000000005EF42 lea 0xDC8(%rsp),%rdi
000000000005EF4A mov $0x38,%edx
000000000005EF4F call 0x000000000002E4B8
000000000005EF54 lea 0xE00(%rsp),%rdi
000000000005EF5C lea 0xDC8(%rsp),%rsi
000000000005EF64 mov $0x38,%edx
000000000005EF69 call 0x000000000002E4B8
000000000005EF6E mov 0x38(%rsp),%rdi
000000000005EF73 lea 0xE00(%rsp),%rsi
000000000005EF7B lea 0x303438,%rdx
000000000005EF82 call 0x0000000000075FD0
000000000005EF87 jmp 0x000000000005E3BB
000000000005EF8C lea 0xE68(%rsp),%rdi
000000000005EF94 lea 0xEA8(%rsp),%rsi
000000000005EF9C call 0x0000000000078330
000000000005EFA1 movzbl 0xE68(%rsp),%eax
000000000005EFA9 test $1,%al
000000000005EFAB je 0x000000000005EFB3
000000000005EFAD jmp 0x000000000005EFAF
000000000005EFAF jmp 0x000000000005EFCE
000000000005EFB1 ud2
000000000005EFB3 mov 0xE69(%rsp),%al
000000000005EFBA lea 0xF58(%rsp),%rdi
000000000005EFC2 and $1,%al
000000000005EFC4 movzbl %al,%esi
000000000005EFC7 call 0x00000000000A9520
000000000005EFCC jmp 0x000000000005F024
000000000005EFCE lea 0xE68(%rsp),%rsi
000000000005EFD6 add $8,%rsi
000000000005EFDA lea 0xEE8(%rsp),%rdi
000000000005EFE2 mov $0x38,%edx
000000000005EFE7 call 0x000000000002E4B8
000000000005EFEC lea 0xF20(%rsp),%rdi
000000000005EFF4 lea 0xEE8(%rsp),%rsi
000000000005EFFC mov $0x38,%edx
000000000005F001 call 0x000000000002E4B8
000000000005F006 mov 0x38(%rsp),%rdi
000000000005F00B lea 0xF20(%rsp),%rsi
000000000005F013 lea 0x303450,%rdx
000000000005F01A call 0x0000000000075FD0
000000000005F01F jmp 0x000000000005E3BB
000000000005F024 mov 0x38(%rsp),%rdi
000000000005F029 add $8,%rdi
000000000005F02D lea 0xF58(%rsp),%rsi
000000000005F035 mov $0x30,%edx
000000000005F03A call 0x000000000002E4B8
000000000005F03F mov 0x38(%rsp),%rax
000000000005F044 movq $0,(%rax)
000000000005F04B jmp 0x000000000005E3BB

 Function call queue at function 5e2c0: [a5610, 30fd0, a8e40, 77cd0, 46820, 75fd0, 78330, a9520, 314a0, 77b40, 57c20, 78dd0, a5300, 6e6d0, 6e2d0, a9530, 65330, 78b80, a9550, 70a70]

Analyzing function at a5610
00000000000A5610 sub $0x78,%rsp
00000000000A5614 call 0x00000000000963E0
00000000000A5619 mov %rdx,0x38(%rsp)
00000000000A561E mov %rax,0x40(%rsp)
00000000000A5623 jmp 0x00000000000A563A
00000000000A5625 jmp 0x00000000000A56B7
00000000000A562A mov %rax,%rcx
00000000000A562D mov %edx,%eax
00000000000A562F mov %rcx,0x68(%rsp)
00000000000A5634 mov %eax,0x70(%rsp)
00000000000A5638 jmp 0x00000000000A5625
00000000000A563A mov 0x38(%rsp),%rsi
00000000000A563F mov 0x40(%rsp),%rdi
00000000000A5644 call 0x00000000000A2A50
00000000000A5649 mov %rdx,0x28(%rsp)
00000000000A564E mov %rax,0x30(%rsp)
00000000000A5653 jmp 0x00000000000A5655
00000000000A5655 mov 0x28(%rsp),%rsi
00000000000A565A mov 0x30(%rsp),%rdi
00000000000A565F call 0x0000000000050FD0
00000000000A5664 mov %rdx,0x18(%rsp)
00000000000A5669 mov %rax,0x20(%rsp)
00000000000A566E jmp 0x00000000000A5670
00000000000A5670 mov 0x18(%rsp),%rax
00000000000A5675 mov 0x20(%rsp),%rcx
00000000000A567A mov %rcx,0x50(%rsp)
00000000000A567F mov %rax,0x58(%rsp)
00000000000A5684 lea 0x48(%rsp),%rax
00000000000A5689 mov %rax,0x60(%rsp)
00000000000A568E mov 0x60(%rsp),%rsi
00000000000A5693 lea 0x50(%rsp),%rdi
00000000000A5698 call 0x0000000000089300
00000000000A569D mov %rax,0x10(%rsp)
00000000000A56A2 jmp 0x00000000000A56A4
00000000000A56A4 mov 0x10(%rsp),%rdi
00000000000A56A9 call 0x000000000006D6D0
00000000000A56AE mov %rax,8(%rsp)
00000000000A56B3 jmp 0x00000000000A56B5
00000000000A56B5 jmp 0x00000000000A56C3
00000000000A56B7 mov 0x68(%rsp),%rdi
00000000000A56BC call 0x000000000002E3D0
00000000000A56C1 ud2
00000000000A56C3 mov 8(%rsp),%rax
00000000000A56C8 add $0x78,%rsp
00000000000A56CC ret

 Function call queue at function a5610: [a2a50, 50fd0, 89300, 6d6d0]

Analyzing function at a2a50
00000000000A2A50 sub $0x18,%rsp
00000000000A2A54 call 0x0000000000052370
00000000000A2A59 mov %rax,8(%rsp)
00000000000A2A5E mov %rdx,0x10(%rsp)
00000000000A2A63 mov 0x10(%rsp),%rdx
00000000000A2A68 mov 8(%rsp),%rax
00000000000A2A6D add $0x18,%rsp
00000000000A2A71 ret

 Function call queue at function a2a50: []

Analyzing function at 50fd0
0000000000050FD0 sub $0x18,%rsp
0000000000050FD4 call 0x0000000000089270
0000000000050FD9 mov %rax,8(%rsp)
0000000000050FDE mov %rdx,0x10(%rsp)
0000000000050FE3 mov 0x10(%rsp),%rdx
0000000000050FE8 mov 8(%rsp),%rax
0000000000050FED add $0x18,%rsp
0000000000050FF1 ret

 Function call queue at function 50fd0: []

Analyzing function at 89300
0000000000089300 push %rax
0000000000089301 call 0x0000000000050410
0000000000089306 mov %rax,(%rsp)
000000000008930A mov (%rsp),%rax
000000000008930E pop %rcx
000000000008930F ret

 Function call queue at function 89300: []

Analyzing function at 6d6d0
000000000006D6D0 sub $0x28,%rsp
000000000006D6D4 mov %rdi,8(%rsp)
000000000006D6D9 movb $1,0x27(%rsp)
000000000006D6DE mov 8(%rsp),%rax
000000000006D6E3 test %rax,%rax
000000000006D6E6 setne %al
000000000006D6E9 movzbl %al,%eax
000000000006D6EC je 0x000000000006D6F4
000000000006D6EE jmp 0x000000000006D6F0
000000000006D6F0 jmp 0x000000000006D6FF
000000000006D6F2 ud2
000000000006D6F4 movq $0,0x10(%rsp)
000000000006D6FD jmp 0x000000000006D725
000000000006D6FF mov 8(%rsp),%rax
000000000006D704 movb $0,0x27(%rsp)
000000000006D709 mov %rax,0x18(%rsp)
000000000006D70E mov 0x18(%rsp),%rdi
000000000006D713 call 0x00000000000A5910
000000000006D718 mov %rax,(%rsp)
000000000006D71C mov (%rsp),%rax
000000000006D720 mov %rax,0x10(%rsp)
000000000006D725 testb $1,0x27(%rsp)
000000000006D72A jne 0x000000000006D736
000000000006D72C mov 0x10(%rsp),%rax
000000000006D731 add $0x28,%rsp
000000000006D735 ret
000000000006D736 jmp 0x000000000006D72C

 Function call queue at function 6d6d0: [a5910]

Analyzing function at a5910
00000000000A5910 mov %rdi,%rax
00000000000A5913 ret

 Function call queue at function a5910: []

Analyzing function at 30fd0
0000000000030FD0 sub $0x28,%rsp
0000000000030FD4 mov %rdi,8(%rsp)
0000000000030FD9 mov %rsi,0x10(%rsp)
0000000000030FDE movzbl (%rdi),%eax
0000000000030FE1 test $1,%al
0000000000030FE3 je 0x0000000000030FEB
0000000000030FE5 jmp 0x0000000000030FE7
0000000000030FE7 jmp 0x0000000000031017
0000000000030FE9 ud2
0000000000030FEB mov 8(%rsp),%rax
0000000000030FF0 mov 0x10(%rsp),%rdi
0000000000030FF5 add $0x28,%rdi
0000000000030FF9 mov 1(%rax),%al
0000000000030FFC mov %al,0x21(%rsp)
0000000000031000 movb $1,0x20(%rsp)
0000000000031005 lea 0x20(%rsp),%rsi
000000000003100A call 0x000000000006EF20
000000000003100F and $1,%al
0000000000031011 mov %al,0x1F(%rsp)
0000000000031015 jmp 0x0000000000031031
0000000000031017 mov 0x10(%rsp),%rdi
000000000003101C mov 8(%rsp),%rsi
0000000000031021 add $8,%rsi
0000000000031025 callq *0x316A88
000000000003102B and $1,%al
000000000003102D mov %al,0x1F(%rsp)
0000000000031031 mov 0x1F(%rsp),%al
0000000000031035 and $1,%al
0000000000031037 movzbl %al,%eax
000000000003103A add $0x28,%rsp
000000000003103E ret

 Function call queue at function 30fd0: []

Analyzing function at a8e40
00000000000A8E40 sub $0x5F8,%rsp
00000000000A8E47 mov %rsi,0x18(%rsp)
00000000000A8E4C mov %rdi,%rax
00000000000A8E4F mov 0x18(%rsp),%rdi
00000000000A8E54 mov %rax,0x20(%rsp)
00000000000A8E59 mov %rax,0x28(%rsp)
00000000000A8E5E call 0x0000000000031580
00000000000A8E63 mov %al,0x37(%rsp)
00000000000A8E67 mov 0x37(%rsp),%al
00000000000A8E6B test $1,%al
00000000000A8E6D jne 0x00000000000A8E7E
00000000000A8E6F jmp 0x00000000000A8E71
00000000000A8E71 mov 0x20(%rsp),%rax
00000000000A8E76 movb $0xA,(%rax)
00000000000A8E79 jmp 0x00000000000A900E
00000000000A8E7E lea 0x3061A0,%rax
00000000000A8E85 mov %rax,0x38(%rsp)
00000000000A8E8A lea 0x3061D0,%rax
00000000000A8E91 mov %rax,0x40(%rsp)
00000000000A8E96 lea 0x3062C0,%rax
00000000000A8E9D mov %rax,0x48(%rsp)
00000000000A8EA2 lea 0x3062F0,%rax
00000000000A8EA9 mov %rax,0x50(%rsp)
00000000000A8EAE lea 0x306260,%rax
00000000000A8EB5 mov %rax,0x58(%rsp)
00000000000A8EBA lea 0x306380,%rax
00000000000A8EC1 mov %rax,0x60(%rsp)
00000000000A8EC6 lea 0x3063F0,%rax
00000000000A8ECD mov %rax,0x68(%rsp)
00000000000A8ED2 lea 0x306200,%rax
00000000000A8ED9 mov %rax,0x70(%rsp)
00000000000A8EDE lea 0x306230,%rax
00000000000A8EE5 mov %rax,0x78(%rsp)
00000000000A8EEA lea 0x38(%rsp),%rdi
00000000000A8EEF call 0x00000000000A2A20
00000000000A8EF4 mov %rax,8(%rsp)
00000000000A8EF9 mov %rdx,0x10(%rsp)
00000000000A8EFE mov 0x10(%rsp),%rax
00000000000A8F03 mov 8(%rsp),%rcx
00000000000A8F08 mov %rcx,0x80(%rsp)
00000000000A8F10 mov %rax,0x88(%rsp)
00000000000A8F18 lea 0x80(%rsp),%rdi
00000000000A8F20 call 0x0000000000053F30
00000000000A8F25 mov %rax,0x90(%rsp)
00000000000A8F2D mov 0x90(%rsp),%rax
00000000000A8F35 test %rax,%rax
00000000000A8F38 setne %al
00000000000A8F3B movzbl %al,%eax
00000000000A8F3E je 0x00000000000A8F46
00000000000A8F40 jmp 0x00000000000A8F42
00000000000A8F42 jmp 0x00000000000A8F64
00000000000A8F44 ud2
00000000000A8F46 mov 0x18(%rsp),%rsi
00000000000A8F4B lea 0x200(%rsp),%rdi
00000000000A8F53 lea 0x3065E0,%rdx
00000000000A8F5A call 0x00000000000314A0
00000000000A8F5F jmp 0x00000000000A9062
00000000000A8F64 mov 0x18(%rsp),%rsi
00000000000A8F69 mov 0x90(%rsp),%rax
00000000000A8F71 mov %rax,(%rsp)
00000000000A8F75 mov (%rax),%rdx
00000000000A8F78 lea 0xD8(%rsp),%rdi
00000000000A8F80 call 0x00000000000314A0
00000000000A8F85 lea 0x98(%rsp),%rdi
00000000000A8F8D lea 0xD8(%rsp),%rsi
00000000000A8F95 call 0x0000000000077B40
00000000000A8F9A movzbl 0x98(%rsp),%eax
00000000000A8FA2 test $1,%al
00000000000A8FA4 je 0x00000000000A8FAC
00000000000A8FA6 jmp 0x00000000000A8FA8
00000000000A8FA8 jmp 0x00000000000A8FBB
00000000000A8FAA ud2
00000000000A8FAC testb $1,0x99(%rsp)
00000000000A8FB4 jne 0x00000000000A901B
00000000000A8FB6 jmp 0x00000000000A8F18
00000000000A8FBB lea 0x98(%rsp),%rsi
00000000000A8FC3 add $8,%rsi
00000000000A8FC7 lea 0x118(%rsp),%rdi
00000000000A8FCF mov $0x38,%edx
00000000000A8FD4 call 0x000000000002E4B8
00000000000A8FD9 lea 0x150(%rsp),%rdi
00000000000A8FE1 lea 0x118(%rsp),%rsi
00000000000A8FE9 mov $0x38,%edx
00000000000A8FEE call 0x000000000002E4B8
00000000000A8FF3 mov 0x20(%rsp),%rdi
00000000000A8FF8 lea 0x150(%rsp),%rsi
00000000000A9000 lea 0x305938,%rdx
00000000000A9007 call 0x00000000000763A0
00000000000A900C jmp 0x00000000000A900E
00000000000A900E mov 0x28(%rsp),%rax
00000000000A9013 add $0x5F8,%rsp
00000000000A901A ret
00000000000A901B mov 0x20(%rsp),%rdi
00000000000A9020 mov (%rsp),%rax
00000000000A9024 mov (%rax),%rax
00000000000A9027 mov %rax,0x190(%rsp)
00000000000A902F movb $0,0x189(%rsp)
00000000000A9037 lea 0x305D20,%rax
00000000000A903E mov %rax,0x198(%rsp)
00000000000A9046 movb $5,0x188(%rsp)
00000000000A904E lea 0x188(%rsp),%rsi
00000000000A9056 mov $0x38,%edx
00000000000A905B call 0x000000000002E4B8
00000000000A9060 jmp 0x00000000000A900E
00000000000A9062 lea 0x1C0(%rsp),%rdi
00000000000A906A lea 0x200(%rsp),%rsi
00000000000A9072 call 0x0000000000077B40
00000000000A9077 movzbl 0x1C0(%rsp),%eax
00000000000A907F test $1,%al
00000000000A9081 je 0x00000000000A9089
00000000000A9083 jmp 0x00000000000A9085
00000000000A9085 jmp 0x00000000000A9095
00000000000A9087 ud2
00000000000A9089 testb $1,0x1C1(%rsp)
00000000000A9091 jne 0x00000000000A9106
00000000000A9093 jmp 0x00000000000A90EB
00000000000A9095 lea 0x1C0(%rsp),%rsi
00000000000A909D add $8,%rsi
00000000000A90A1 lea 0x240(%rsp),%rdi
00000000000A90A9 mov $0x38,%edx
00000000000A90AE call 0x000000000002E4B8
00000000000A90B3 lea 0x278(%rsp),%rdi
00000000000A90BB lea 0x240(%rsp),%rsi
00000000000A90C3 mov $0x38,%edx
00000000000A90C8 call 0x000000000002E4B8
00000000000A90CD mov 0x20(%rsp),%rdi
00000000000A90D2 lea 0x278(%rsp),%rsi
00000000000A90DA lea 0x305950,%rdx
00000000000A90E1 call 0x00000000000763A0
00000000000A90E6 jmp 0x00000000000A900E
00000000000A90EB mov 0x18(%rsp),%rsi
00000000000A90F0 lea 0x330(%rsp),%rdi
00000000000A90F8 lea 0x305F90,%rdx
00000000000A90FF call 0x00000000000314A0
00000000000A9104 jmp 0x00000000000A9150
00000000000A9106 mov 0x20(%rsp),%rdi
00000000000A910B lea 0x3065E0,%rax
00000000000A9112 mov %rax,0x2B8(%rsp)
00000000000A911A movb $0,0x2B1(%rsp)
00000000000A9122 lea 0x305D20,%rax
00000000000A9129 mov %rax,0x2C0(%rsp)
00000000000A9131 movb $5,0x2B0(%rsp)
00000000000A9139 lea 0x2B0(%rsp),%rsi
00000000000A9141 mov $0x38,%edx
00000000000A9146 call 0x000000000002E4B8
00000000000A914B jmp 0x00000000000A900E
00000000000A9150 lea 0x2F0(%rsp),%rdi
00000000000A9158 lea 0x330(%rsp),%rsi
00000000000A9160 call 0x0000000000077B40
00000000000A9165 movzbl 0x2F0(%rsp),%eax
00000000000A916D test $1,%al
00000000000A916F je 0x00000000000A9177
00000000000A9171 jmp 0x00000000000A9173
00000000000A9173 jmp 0x00000000000A9183
00000000000A9175 ud2
00000000000A9177 testb $1,0x2F1(%rsp)
00000000000A917F jne 0x00000000000A91E6
00000000000A9181 jmp 0x00000000000A91D9
00000000000A9183 lea 0x2F0(%rsp),%rsi
00000000000A918B add $8,%rsi
00000000000A918F lea 0x370(%rsp),%rdi
00000000000A9197 mov $0x38,%edx
00000000000A919C call 0x000000000002E4B8
00000000000A91A1 lea 0x3A8(%rsp),%rdi
00000000000A91A9 lea 0x370(%rsp),%rsi
00000000000A91B1 mov $0x38,%edx
00000000000A91B6 call 0x000000000002E4B8
00000000000A91BB mov 0x20(%rsp),%rdi
00000000000A91C0 lea 0x3A8(%rsp),%rsi
00000000000A91C8 lea 0x305968,%rdx
00000000000A91CF call 0x00000000000763A0
00000000000A91D4 jmp 0x00000000000A900E
00000000000A91D9 movb $0,0x2EF(%rsp)
00000000000A91E1 jmp 0x00000000000A9290
00000000000A91E6 mov 0x18(%rsp),%rsi
00000000000A91EB lea 0x420(%rsp),%rdi
00000000000A91F3 lea 0x305DB0,%rdx
00000000000A91FA call 0x00000000000314A0
00000000000A91FF lea 0x3E0(%rsp),%rdi
00000000000A9207 lea 0x420(%rsp),%rsi
00000000000A920F call 0x0000000000077B40
00000000000A9214 movzbl 0x3E0(%rsp),%eax
00000000000A921C test $1,%al
00000000000A921E je 0x00000000000A9226
00000000000A9220 jmp 0x00000000000A9222
00000000000A9222 jmp 0x00000000000A923A
00000000000A9224 ud2
00000000000A9226 mov 0x3E1(%rsp),%al
00000000000A922D xor $0xFF,%al
00000000000A922F and $1,%al
00000000000A9231 mov %al,0x2EF(%rsp)
00000000000A9238 jmp 0x00000000000A9290
00000000000A923A lea 0x3E0(%rsp),%rsi
00000000000A9242 add $8,%rsi
00000000000A9246 lea 0x460(%rsp),%rdi
00000000000A924E mov $0x38,%edx
00000000000A9253 call 0x000000000002E4B8
00000000000A9258 lea 0x498(%rsp),%rdi
00000000000A9260 lea 0x460(%rsp),%rsi
00000000000A9268 mov $0x38,%edx
00000000000A926D call 0x000000000002E4B8
00000000000A9272 mov 0x20(%rsp),%rdi
00000000000A9277 lea 0x498(%rsp),%rsi
00000000000A927F lea 0x305980,%rdx
00000000000A9286 call 0x00000000000763A0
00000000000A928B jmp 0x00000000000A91D4
00000000000A9290 testb $1,0x2EF(%rsp)
00000000000A9298 jne 0x00000000000A92A7
00000000000A929A movb $0,0x2EE(%rsp)
00000000000A92A2 jmp 0x00000000000A9351
00000000000A92A7 mov 0x18(%rsp),%rsi
00000000000A92AC lea 0x510(%rsp),%rdi
00000000000A92B4 lea 0x305DE0,%rdx
00000000000A92BB call 0x00000000000314A0
00000000000A92C0 lea 0x4D0(%rsp),%rdi
00000000000A92C8 lea 0x510(%rsp),%rsi
00000000000A92D0 call 0x0000000000077B40
00000000000A92D5 movzbl 0x4D0(%rsp),%eax
00000000000A92DD test $1,%al
00000000000A92DF je 0x00000000000A92E7
00000000000A92E1 jmp 0x00000000000A92E3
00000000000A92E3 jmp 0x00000000000A92FB
00000000000A92E5 ud2
00000000000A92E7 mov 0x4D1(%rsp),%al
00000000000A92EE xor $0xFF,%al
00000000000A92F0 and $1,%al
00000000000A92F2 mov %al,0x2EE(%rsp)
00000000000A92F9 jmp 0x00000000000A9351
00000000000A92FB lea 0x4D0(%rsp),%rsi
00000000000A9303 add $8,%rsi
00000000000A9307 lea 0x550(%rsp),%rdi
00000000000A930F mov $0x38,%edx
00000000000A9314 call 0x000000000002E4B8
00000000000A9319 lea 0x588(%rsp),%rdi
00000000000A9321 lea 0x550(%rsp),%rsi
00000000000A9329 mov $0x38,%edx
00000000000A932E call 0x000000000002E4B8
00000000000A9333 mov 0x20(%rsp),%rdi
00000000000A9338 lea 0x588(%rsp),%rsi
00000000000A9340 lea 0x305998,%rdx
00000000000A9347 call 0x00000000000763A0
00000000000A934C jmp 0x00000000000A91D4
00000000000A9351 testb $1,0x2EE(%rsp)
00000000000A9359 je 0x00000000000A8E71
00000000000A935F mov 0x20(%rsp),%rdi
00000000000A9364 lea 0x305F90,%rax
00000000000A936B mov %rax,0x5C8(%rsp)
00000000000A9373 lea 0x305DB0,%rax
00000000000A937A mov %rax,0x5D0(%rsp)
00000000000A9382 lea 0x305DE0,%rax
00000000000A9389 mov %rax,0x5D8(%rsp)
00000000000A9391 movb $6,0x5C0(%rsp)
00000000000A9399 lea 0x5C0(%rsp),%rsi
00000000000A93A1 mov $0x38,%edx
00000000000A93A6 call 0x000000000002E4B8
00000000000A93AB jmp 0x00000000000A900E

 Function call queue at function a8e40: [31580, a2a20, 763a0]

Analyzing function at 31580
0000000000031580 push %rax
0000000000031581 add $0x18,%rdi
0000000000031585 lea 0x25305C,%rsi
000000000003158C call 0x0000000000031D50
0000000000031591 mov %al,7(%rsp)
0000000000031595 mov 7(%rsp),%al
0000000000031599 and $1,%al
000000000003159B movzbl %al,%eax
000000000003159E pop %rcx
000000000003159F ret

 Function call queue at function 31580: []

Analyzing function at a2a20
00000000000A2A20 sub $0x18,%rsp
00000000000A2A24 mov $9,%esi
00000000000A2A29 call 0x00000000000A2A80
00000000000A2A2E mov %rax,8(%rsp)
00000000000A2A33 mov %rdx,0x10(%rsp)
00000000000A2A38 mov 0x10(%rsp),%rdx
00000000000A2A3D mov 8(%rsp),%rax
00000000000A2A42 add $0x18,%rsp
00000000000A2A46 ret

 Function call queue at function a2a20: []

Analyzing function at 763a0
00000000000763A0 sub $0xB8,%rsp
00000000000763A7 mov %rdi,(%rsp)
00000000000763AB mov %rdi,8(%rsp)
00000000000763B0 lea 0x10(%rsp),%rdi
00000000000763B5 mov $0x38,%edx
00000000000763BA call 0x000000000002E4B8
00000000000763BF lea 0x80(%rsp),%rdi
00000000000763C7 lea 0x10(%rsp),%rsi
00000000000763CC mov $0x38,%edx
00000000000763D1 call 0x000000000002E4B8
00000000000763D6 lea 0x48(%rsp),%rdi
00000000000763DB lea 0x80(%rsp),%rsi
00000000000763E3 call 0x0000000000089330
00000000000763E8 mov (%rsp),%rdi
00000000000763EC lea 0x48(%rsp),%rsi
00000000000763F1 mov $0x38,%edx
00000000000763F6 call 0x000000000002E4B8
00000000000763FB mov 8(%rsp),%rax
0000000000076400 add $0xB8,%rsp
0000000000076407 ret

 Function call queue at function 763a0: [89330]

Analyzing function at 89330
0000000000089330 push %rax
0000000000089331 mov %rdi,%rax
0000000000089334 mov %rax,(%rsp)
0000000000089338 mov $0x38,%edx
000000000008933D call 0x000000000002E4B8
0000000000089342 mov (%rsp),%rax
0000000000089346 pop %rcx
0000000000089347 ret

 Function call queue at function 89330: []

Analyzing function at 77cd0
0000000000077CD0 sub $0xC8,%rsp
0000000000077CD7 mov %rsi,8(%rsp)
0000000000077CDC mov %rdi,0x10(%rsp)
0000000000077CE1 mov %rdi,0x18(%rsp)
0000000000077CE6 mov (%rsi),%al
0000000000077CE8 add $0xF6,%al
0000000000077CEA setne %al
0000000000077CED movzbl %al,%eax
0000000000077CF0 je 0x0000000000077CF8
0000000000077CF2 jmp 0x0000000000077CF4
0000000000077CF4 jmp 0x0000000000077D02
0000000000077CF6 ud2
0000000000077CF8 mov 0x10(%rsp),%rax
0000000000077CFD movb $0xA,(%rax)
0000000000077D00 jmp 0x0000000000077D58
0000000000077D02 mov 8(%rsp),%rsi
0000000000077D07 lea 0x20(%rsp),%rdi
0000000000077D0C mov $0x38,%edx
0000000000077D11 call 0x000000000002E4B8
0000000000077D16 lea 0x90(%rsp),%rdi
0000000000077D1E lea 0x20(%rsp),%rsi
0000000000077D23 mov $0x38,%edx
0000000000077D28 call 0x000000000002E4B8
0000000000077D2D lea 0x58(%rsp),%rdi
0000000000077D32 lea 0x90(%rsp),%rsi
0000000000077D3A mov $0x38,%edx
0000000000077D3F call 0x000000000002E4B8
0000000000077D44 mov 0x10(%rsp),%rdi
0000000000077D49 lea 0x58(%rsp),%rsi
0000000000077D4E mov $0x38,%edx
0000000000077D53 call 0x000000000002E4B8
0000000000077D58 mov 0x18(%rsp),%rax
0000000000077D5D add $0xC8,%rsp
0000000000077D64 ret

 Function call queue at function 77cd0: []

Analyzing function at 46820
0000000000046820 sub $0x108,%rsp
0000000000046827 mov %rdi,(%rsp)
000000000004682B mov %rdi,8(%rsp)
0000000000046830 lea 0x58(%rsp),%rdi
0000000000046835 lea 0x305D80,%rdx
000000000004683C call 0x00000000000314A0
0000000000046841 lea 0x18(%rsp),%rdi
0000000000046846 lea 0x58(%rsp),%rsi
000000000004684B call 0x0000000000077B40
0000000000046850 movzbl 0x18(%rsp),%eax
0000000000046855 test $1,%al
0000000000046857 je 0x000000000004685F
0000000000046859 jmp 0x000000000004685B
000000000004685B jmp 0x000000000004687D
000000000004685D ud2
000000000004685F mov (%rsp),%rax
0000000000046863 mov 0x19(%rsp),%cl
0000000000046867 and $1,%cl
000000000004686A mov %cl,0x17(%rsp)
000000000004686E mov 0x17(%rsp),%cl
0000000000046872 and $1,%cl
0000000000046875 mov %cl,1(%rax)
0000000000046878 movb $0,(%rax)
000000000004687B jmp 0x00000000000468CC
000000000004687D lea 0x18(%rsp),%rsi
0000000000046882 add $8,%rsi
0000000000046886 lea 0x98(%rsp),%rdi
000000000004688E mov $0x38,%edx
0000000000046893 call 0x000000000002E4B8
0000000000046898 lea 0xD0(%rsp),%rdi
00000000000468A0 lea 0x98(%rsp),%rsi
00000000000468A8 mov $0x38,%edx
00000000000468AD call 0x000000000002E4B8
00000000000468B2 mov (%rsp),%rdi
00000000000468B6 lea 0xD0(%rsp),%rsi
00000000000468BE lea 0x302808,%rdx
00000000000468C5 call 0x00000000000764E0
00000000000468CA jmp 0x00000000000468CC
00000000000468CC mov 8(%rsp),%rax
00000000000468D1 add $0x108,%rsp
00000000000468D8 ret

 Function call queue at function 46820: [764e0]

Analyzing function at 764e0
00000000000764E0 sub $0xB8,%rsp
00000000000764E7 mov %rdi,(%rsp)
00000000000764EB mov %rdi,8(%rsp)
00000000000764F0 lea 0x10(%rsp),%rdi
00000000000764F5 mov $0x38,%edx
00000000000764FA call 0x000000000002E4B8
00000000000764FF lea 0x80(%rsp),%rdi
0000000000076507 lea 0x10(%rsp),%rsi
000000000007650C mov $0x38,%edx
0000000000076511 call 0x000000000002E4B8
0000000000076516 lea 0x48(%rsp),%rdi
000000000007651B lea 0x80(%rsp),%rsi
0000000000076523 call 0x0000000000089330
0000000000076528 mov (%rsp),%rdi
000000000007652C add $8,%rdi
0000000000076530 lea 0x48(%rsp),%rsi
0000000000076535 mov $0x38,%edx
000000000007653A call 0x000000000002E4B8
000000000007653F mov (%rsp),%rcx
0000000000076543 mov 8(%rsp),%rax
0000000000076548 movb $1,(%rcx)
000000000007654B add $0xB8,%rsp
0000000000076552 ret

 Function call queue at function 764e0: []

Analyzing function at 75fd0
0000000000075FD0 sub $0xB8,%rsp
0000000000075FD7 mov %rdi,(%rsp)
0000000000075FDB mov %rdi,8(%rsp)
0000000000075FE0 lea 0x10(%rsp),%rdi
0000000000075FE5 mov $0x38,%edx
0000000000075FEA call 0x000000000002E4B8
0000000000075FEF lea 0x80(%rsp),%rdi
0000000000075FF7 lea 0x10(%rsp),%rsi
0000000000075FFC mov $0x38,%edx
0000000000076001 call 0x000000000002E4B8
0000000000076006 lea 0x48(%rsp),%rdi
000000000007600B lea 0x80(%rsp),%rsi
0000000000076013 call 0x0000000000089330
0000000000076018 mov (%rsp),%rdi
000000000007601C add $8,%rdi
0000000000076020 lea 0x48(%rsp),%rsi
0000000000076025 mov $0x38,%edx
000000000007602A call 0x000000000002E4B8
000000000007602F mov (%rsp),%rcx
0000000000076033 mov 8(%rsp),%rax
0000000000076038 movq $1,(%rcx)
000000000007603F add $0xB8,%rsp
0000000000076046 ret

 Function call queue at function 75fd0: []

Analyzing function at 78330
0000000000078330 sub $0xC8,%rsp
0000000000078337 mov %rsi,8(%rsp)
000000000007833C mov %rdi,0x10(%rsp)
0000000000078341 mov %rdi,0x18(%rsp)
0000000000078346 movzbl (%rsi),%eax
0000000000078349 test $1,%al
000000000007834B je 0x0000000000078353
000000000007834D jmp 0x000000000007834F
000000000007834F jmp 0x000000000007836B
0000000000078351 ud2
0000000000078353 mov 0x10(%rsp),%rax
0000000000078358 mov 8(%rsp),%rcx
000000000007835D mov 1(%rcx),%cl
0000000000078360 and $1,%cl
0000000000078363 mov %cl,1(%rax)
0000000000078366 movb $0,(%rax)
0000000000078369 jmp 0x00000000000783D1
000000000007836B mov 8(%rsp),%rsi
0000000000078370 add $8,%rsi
0000000000078374 lea 0x20(%rsp),%rdi
0000000000078379 mov $0x38,%edx
000000000007837E call 0x000000000002E4B8
0000000000078383 lea 0x90(%rsp),%rdi
000000000007838B lea 0x20(%rsp),%rsi
0000000000078390 mov $0x38,%edx
0000000000078395 call 0x000000000002E4B8
000000000007839A lea 0x58(%rsp),%rdi
000000000007839F lea 0x90(%rsp),%rsi
00000000000783A7 mov $0x38,%edx
00000000000783AC call 0x000000000002E4B8
00000000000783B1 mov 0x10(%rsp),%rdi
00000000000783B6 add $8,%rdi
00000000000783BA lea 0x58(%rsp),%rsi
00000000000783BF mov $0x38,%edx
00000000000783C4 call 0x000000000002E4B8
00000000000783C9 mov 0x10(%rsp),%rax
00000000000783CE movb $1,(%rax)
00000000000783D1 mov 0x18(%rsp),%rax
00000000000783D6 add $0xC8,%rsp
00000000000783DD ret

 Function call queue at function 78330: []

Analyzing function at a9520
00000000000A9520 mov %sil,%cl
00000000000A9523 mov %rdi,%rax
00000000000A9526 and $1,%cl
00000000000A9529 mov %cl,1(%rdi)
00000000000A952C movb $0,(%rdi)
00000000000A952F ret

 Function call queue at function a9520: []

Analyzing function at 314a0
00000000000314A0 sub $0x58,%rsp
00000000000314A4 mov %rdi,(%rsp)
00000000000314A8 mov %rdi,8(%rsp)
00000000000314AD mov %rdx,0x50(%rsp)
00000000000314B2 mov 0x50(%rsp),%rdx
00000000000314B7 lea 0x10(%rsp),%rdi
00000000000314BC call 0x00000000000A4E50
00000000000314C1 mov (%rsp),%rdi
00000000000314C5 lea 0x10(%rsp),%rsi
00000000000314CA call 0x0000000000076D60
00000000000314CF mov 8(%rsp),%rax
00000000000314D4 add $0x58,%rsp
00000000000314D8 ret

 Function call queue at function 314a0: [a4e50, 76d60]

Analyzing function at a4e50
00000000000A4E50 sub $0x148,%rsp
00000000000A4E57 mov %rsi,0x68(%rsp)
00000000000A4E5C mov %rdi,%rax
00000000000A4E5F mov 0x68(%rsp),%rdi
00000000000A4E64 mov %rax,0x70(%rsp)
00000000000A4E69 mov %rax,0x78(%rsp)
00000000000A4E6E mov %rdx,0x88(%rsp)
00000000000A4E76 movb $0,0x137(%rsp)
00000000000A4E7E movb $1,0x137(%rsp)
00000000000A4E86 call 0x0000000000031580
00000000000A4E8B mov %al,0x87(%rsp)
00000000000A4E92 jmp 0x00000000000A4EBD
00000000000A4E94 testb $1,0x137(%rsp)
00000000000A4E9C jne 0x00000000000A516F
00000000000A4EA2 jmp 0x00000000000A5160
00000000000A4EA7 mov %rax,%rcx
00000000000A4EAA mov %edx,%eax
00000000000A4EAC mov %rcx,0x138(%rsp)
00000000000A4EB4 mov %eax,0x140(%rsp)
00000000000A4EBB jmp 0x00000000000A4E94
00000000000A4EBD mov 0x87(%rsp),%al
00000000000A4EC4 test $1,%al
00000000000A4EC6 jne 0x00000000000A4EEE
00000000000A4EC8 jmp 0x00000000000A4ECA
00000000000A4ECA mov 0x68(%rsp),%rdi
00000000000A4ECF movb $0,0x137(%rsp)
00000000000A4ED7 mov 0x88(%rsp),%rsi
00000000000A4EDF call 0x00000000000A5480
00000000000A4EE4 mov %rax,0x60(%rsp)
00000000000A4EE9 jmp 0x00000000000A5149
00000000000A4EEE mov 0x68(%rsp),%rdi
00000000000A4EF3 call 0x00000000000963E0
00000000000A4EF8 mov %rdx,0x50(%rsp)
00000000000A4EFD mov %rax,0x58(%rsp)
00000000000A4F02 jmp 0x00000000000A4F04
00000000000A4F04 mov 0x50(%rsp),%rsi
00000000000A4F09 mov 0x58(%rsp),%rdi
00000000000A4F0E call 0x00000000000A2A50
00000000000A4F13 mov %rdx,0x40(%rsp)
00000000000A4F18 mov %rax,0x48(%rsp)
00000000000A4F1D jmp 0x00000000000A4F1F
00000000000A4F1F mov 0x40(%rsp),%rdx
00000000000A4F24 mov 0x48(%rsp),%rsi
00000000000A4F29 lea 0x88(%rsp),%rax
00000000000A4F31 mov %rax,0xC0(%rsp)
00000000000A4F39 mov 0xC0(%rsp),%rcx
00000000000A4F41 lea 0xA8(%rsp),%rdi
00000000000A4F49 call 0x00000000000518D0
00000000000A4F4E jmp 0x00000000000A4F50
00000000000A4F50 lea 0x90(%rsp),%rdi
00000000000A4F58 lea 0xA8(%rsp),%rsi
00000000000A4F60 call 0x000000000005AA10
00000000000A4F65 jmp 0x00000000000A4F67
00000000000A4F67 lea 0x90(%rsp),%rdi
00000000000A4F6F call 0x0000000000094110
00000000000A4F74 mov %rax,0x38(%rsp)
00000000000A4F79 jmp 0x00000000000A4FA3
00000000000A4F7B lea 0x90(%rsp),%rdi
00000000000A4F83 call 0x000000000009BC70
00000000000A4F88 jmp 0x00000000000A4E94
00000000000A4F8D mov %rax,%rcx
00000000000A4F90 mov %edx,%eax
00000000000A4F92 mov %rcx,0x138(%rsp)
00000000000A4F9A mov %eax,0x140(%rsp)
00000000000A4FA1 jmp 0x00000000000A4F7B
00000000000A4FA3 mov 0x38(%rsp),%rax
00000000000A4FA8 cmp $2,%rax
00000000000A4FAC jb 0x00000000000A4FCD
00000000000A4FAE lea 0x3057B0,%rdx
00000000000A4FB5 xor %eax,%eax
00000000000A4FB7 mov %eax,%esi
00000000000A4FB9 lea 0x90(%rsp),%rdi
00000000000A4FC1 call 0x0000000000096910
00000000000A4FC6 mov %rax,0x30(%rsp)
00000000000A4FCB jmp 0x00000000000A5034
00000000000A4FCD lea 0x90(%rsp),%rdi
00000000000A4FD5 call 0x0000000000096260
00000000000A4FDA mov %rdx,0x20(%rsp)
00000000000A4FDF mov %rax,0x28(%rsp)
00000000000A4FE4 jmp 0x00000000000A4FE6
00000000000A4FE6 mov 0x20(%rsp),%rsi
00000000000A4FEB mov 0x28(%rsp),%rdi
00000000000A4FF0 call 0x00000000000A2AB0
00000000000A4FF5 mov %rax,0x18(%rsp)
00000000000A4FFA jmp 0x00000000000A4FFC
00000000000A4FFC mov 0x18(%rsp),%rdi
00000000000A5001 call 0x000000000006D220
00000000000A5006 mov %rax,0x10(%rsp)
00000000000A500B jmp 0x00000000000A500D
00000000000A500D mov 0x70(%rsp),%rax
00000000000A5012 mov 0x10(%rsp),%rcx
00000000000A5017 mov %rcx,8(%rax)
00000000000A501B movq $0,(%rax)
00000000000A5022 lea 0x90(%rsp),%rdi
00000000000A502A call 0x000000000009BC70
00000000000A502F jmp 0x00000000000A513D
00000000000A5034 mov 0x30(%rsp),%rax
00000000000A5039 mov (%rax),%rax
00000000000A503C mov 0x10(%rax),%rcx
00000000000A5040 mov %rcx,0x110(%rsp)
00000000000A5048 movups (%rax),%xmm0
00000000000A504B movaps %xmm0,0x100(%rsp)
00000000000A5053 lea 0x3057C8,%rdx
00000000000A505A lea 0x90(%rsp),%rdi
00000000000A5062 mov $1,%esi
00000000000A5067 call 0x0000000000096910
00000000000A506C mov %rax,8(%rsp)
00000000000A5071 jmp 0x00000000000A5073
00000000000A5073 mov 0x70(%rsp),%rdi
00000000000A5078 mov 8(%rsp),%rax
00000000000A507D mov (%rax),%rax
00000000000A5080 mov (%rax),%rcx
00000000000A5083 mov %rcx,0x118(%rsp)
00000000000A508B mov 8(%rax),%rcx
00000000000A508F mov %rcx,0x120(%rsp)
00000000000A5097 mov 0x10(%rax),%rax
00000000000A509B mov %rax,0x128(%rsp)
00000000000A50A3 mov 0x100(%rsp),%rax
00000000000A50AB mov %rax,0xD0(%rsp)
00000000000A50B3 mov 0x108(%rsp),%rax
00000000000A50BB mov %rax,0xD8(%rsp)
00000000000A50C3 mov 0x110(%rsp),%rax
00000000000A50CB mov %rax,0xE0(%rsp)
00000000000A50D3 mov 0x118(%rsp),%rax
00000000000A50DB mov %rax,0xE8(%rsp)
00000000000A50E3 mov 0x120(%rsp),%rax
00000000000A50EB mov %rax,0xF0(%rsp)
00000000000A50F3 mov 0x128(%rsp),%rax
00000000000A50FB mov %rax,0xF8(%rsp)
00000000000A5103 movb $3,0xC8(%rsp)
00000000000A510B add $8,%rdi
00000000000A510F lea 0xC8(%rsp),%rsi
00000000000A5117 mov $0x38,%edx
00000000000A511C call 0x000000000002E4B8
00000000000A5121 mov 0x70(%rsp),%rax
00000000000A5126 movq $1,(%rax)
00000000000A512D jmp 0x00000000000A5022
00000000000A5132 lea 0x2FBE0,%rax
00000000000A5139 call *%rax
00000000000A513B ud2
00000000000A513D testb $1,0x137(%rsp)
00000000000A5145 jne 0x00000000000A517E
00000000000A5147 jmp 0x00000000000A5171
00000000000A5149 mov 0x70(%rsp),%rax
00000000000A514E mov 0x60(%rsp),%rcx
00000000000A5153 mov %rcx,8(%rax)
00000000000A5157 movq $0,(%rax)
00000000000A515E jmp 0x00000000000A513D
00000000000A5160 mov 0x138(%rsp),%rdi
00000000000A5168 call 0x000000000002E3D0
00000000000A516D ud2
00000000000A516F jmp 0x00000000000A5160
00000000000A5171 mov 0x78(%rsp),%rax
00000000000A5176 add $0x148,%rsp
00000000000A517D ret
00000000000A517E jmp 0x00000000000A5171

 Function call queue at function a4e50: [a5480, 963e0, 518d0, 5aa10, 94110, 9bc70, 96910, 96260, a2ab0, 6d220]

Analyzing function at a5480
00000000000A5480 sub $0x78,%rsp
00000000000A5484 mov %rsi,0x48(%rsp)
00000000000A5489 call 0x00000000000963E0
00000000000A548E mov %rdx,0x38(%rsp)
00000000000A5493 mov %rax,0x40(%rsp)
00000000000A5498 jmp 0x00000000000A54AF
00000000000A549A jmp 0x00000000000A552C
00000000000A549F mov %rax,%rcx
00000000000A54A2 mov %edx,%eax
00000000000A54A4 mov %rcx,0x68(%rsp)
00000000000A54A9 mov %eax,0x70(%rsp)
00000000000A54AD jmp 0x00000000000A549A
00000000000A54AF mov 0x38(%rsp),%rsi
00000000000A54B4 mov 0x40(%rsp),%rdi
00000000000A54B9 call 0x00000000000A2A50
00000000000A54BE mov %rdx,0x28(%rsp)
00000000000A54C3 mov %rax,0x30(%rsp)
00000000000A54C8 jmp 0x00000000000A54CA
00000000000A54CA mov 0x28(%rsp),%rsi
00000000000A54CF mov 0x30(%rsp),%rdi
00000000000A54D4 call 0x0000000000050FD0
00000000000A54D9 mov %rdx,0x18(%rsp)
00000000000A54DE mov %rax,0x20(%rsp)
00000000000A54E3 jmp 0x00000000000A54E5
00000000000A54E5 mov 0x18(%rsp),%rax
00000000000A54EA mov 0x20(%rsp),%rcx
00000000000A54EF mov %rcx,0x50(%rsp)
00000000000A54F4 mov %rax,0x58(%rsp)
00000000000A54F9 lea 0x48(%rsp),%rax
00000000000A54FE mov %rax,0x60(%rsp)
00000000000A5503 mov 0x60(%rsp),%rsi
00000000000A5508 lea 0x50(%rsp),%rdi
00000000000A550D call 0x0000000000089290
00000000000A5512 mov %rax,0x10(%rsp)
00000000000A5517 jmp 0x00000000000A5519
00000000000A5519 mov 0x10(%rsp),%rdi
00000000000A551E call 0x000000000006D860
00000000000A5523 mov %rax,8(%rsp)
00000000000A5528 jmp 0x00000000000A552A
00000000000A552A jmp 0x00000000000A5538
00000000000A552C mov 0x68(%rsp),%rdi
00000000000A5531 call 0x000000000002E3D0
00000000000A5536 ud2
00000000000A5538 mov 8(%rsp),%rax
00000000000A553D add $0x78,%rsp
00000000000A5541 ret

 Function call queue at function a5480: [89290, 6d860]

Analyzing function at 89290
0000000000089290 push %rax
0000000000089291 call 0x0000000000050320
0000000000089296 mov %rax,(%rsp)
000000000008929A mov (%rsp),%rax
000000000008929E pop %rcx
000000000008929F ret

 Function call queue at function 89290: []

Analyzing function at 6d860
000000000006D860 sub $0x28,%rsp
000000000006D864 mov %rdi,8(%rsp)
000000000006D869 movb $1,0x27(%rsp)
000000000006D86E mov 8(%rsp),%rax
000000000006D873 test %rax,%rax
000000000006D876 setne %al
000000000006D879 movzbl %al,%eax
000000000006D87C je 0x000000000006D884
000000000006D87E jmp 0x000000000006D880
000000000006D880 jmp 0x000000000006D88F
000000000006D882 ud2
000000000006D884 movq $0,0x10(%rsp)
000000000006D88D jmp 0x000000000006D8B5
000000000006D88F mov 8(%rsp),%rax
000000000006D894 movb $0,0x27(%rsp)
000000000006D899 mov %rax,0x18(%rsp)
000000000006D89E mov 0x18(%rsp),%rdi
000000000006D8A3 call 0x00000000000A5940
000000000006D8A8 mov %rax,(%rsp)
000000000006D8AC mov (%rsp),%rax
000000000006D8B0 mov %rax,0x10(%rsp)
000000000006D8B5 testb $1,0x27(%rsp)
000000000006D8BA jne 0x000000000006D8C6
000000000006D8BC mov 0x10(%rsp),%rax
000000000006D8C1 add $0x28,%rsp
000000000006D8C5 ret
000000000006D8C6 jmp 0x000000000006D8BC

 Function call queue at function 6d860: [a5940]

Analyzing function at a5940
00000000000A5940 mov %rdi,%rax
00000000000A5943 ret

 Function call queue at function a5940: []

Analyzing function at 963e0
00000000000963E0 sub $0x28,%rsp
00000000000963E4 mov %rdi,0x18(%rsp)
00000000000963E9 call 0x0000000000095400
00000000000963EE mov %rax,0x20(%rsp)
00000000000963F3 mov 0x20(%rsp),%rdi
00000000000963F8 mov 0x18(%rsp),%rax
00000000000963FD mov 0x10(%rax),%rsi
0000000000096401 call 0x00000000000628A0
0000000000096406 mov %rax,8(%rsp)
000000000009640B mov %rdx,0x10(%rsp)
0000000000096410 mov 0x10(%rsp),%rdx
0000000000096415 mov 8(%rsp),%rax
000000000009641A add $0x28,%rsp
000000000009641E ret

 Function call queue at function 963e0: [628a0]

Analyzing function at 628a0
00000000000628A0 sub $0x18,%rsp
00000000000628A4 call 0x0000000000066FE0
00000000000628A9 mov %rax,8(%rsp)
00000000000628AE mov %rdx,0x10(%rsp)
00000000000628B3 mov 0x10(%rsp),%rdx
00000000000628B8 mov 8(%rsp),%rax
00000000000628BD add $0x18,%rsp
00000000000628C1 ret

 Function call queue at function 628a0: []

Analyzing function at 518d0
00000000000518D0 push %rax
00000000000518D1 mov %rdi,%rax
00000000000518D4 mov %rax,(%rsp)
00000000000518D8 call 0x000000000005ACC0
00000000000518DD mov (%rsp),%rax
00000000000518E1 pop %rcx
00000000000518E2 ret

 Function call queue at function 518d0: []

Analyzing function at 5aa10
000000000005AA10 sub $0x28,%rsp
000000000005AA14 mov %rdi,%rax
000000000005AA17 mov %rax,8(%rsp)
000000000005AA1C mov (%rsi),%rax
000000000005AA1F mov %rax,0x10(%rsp)
000000000005AA24 mov 8(%rsi),%rax
000000000005AA28 mov %rax,0x18(%rsp)
000000000005AA2D mov 0x10(%rsi),%rax
000000000005AA31 mov %rax,0x20(%rsp)
000000000005AA36 lea 0x10(%rsp),%rsi
000000000005AA3B call 0x0000000000097F80
000000000005AA40 mov 8(%rsp),%rax
000000000005AA45 add $0x28,%rsp
000000000005AA49 ret

 Function call queue at function 5aa10: [97f80]

Analyzing function at 97f80
0000000000097F80 sub $0x48,%rsp
0000000000097F84 mov %rdi,8(%rsp)
0000000000097F89 mov %rdi,0x10(%rsp)
0000000000097F8E mov (%rsi),%rax
0000000000097F91 mov %rax,0x30(%rsp)
0000000000097F96 mov 8(%rsi),%rax
0000000000097F9A mov %rax,0x38(%rsp)
0000000000097F9F mov 0x10(%rsi),%rax
0000000000097FA3 mov %rax,0x40(%rsp)
0000000000097FA8 lea 0x18(%rsp),%rdi
0000000000097FAD lea 0x30(%rsp),%rsi
0000000000097FB2 call 0x000000000005AE00
0000000000097FB7 mov 8(%rsp),%rdi
0000000000097FBC lea 0x18(%rsp),%rsi
0000000000097FC1 call 0x00000000000991E0
0000000000097FC6 mov 0x10(%rsp),%rax
0000000000097FCB add $0x48,%rsp
0000000000097FCF ret

 Function call queue at function 97f80: [5ae00, 991e0]

Analyzing function at 5ae00
000000000005AE00 mov %rdi,%rax
000000000005AE03 mov (%rsi),%rcx
000000000005AE06 mov %rcx,(%rdi)
000000000005AE09 mov 8(%rsi),%rcx
000000000005AE0D mov %rcx,8(%rdi)
000000000005AE11 mov 0x10(%rsi),%rcx
000000000005AE15 mov %rcx,0x10(%rdi)
000000000005AE19 ret

 Function call queue at function 5ae00: []

Analyzing function at 991e0
00000000000991E0 sub $0x28,%rsp
00000000000991E4 mov %rdi,%rax
00000000000991E7 mov %rax,8(%rsp)
00000000000991EC mov (%rsi),%rax
00000000000991EF mov %rax,0x10(%rsp)
00000000000991F4 mov 8(%rsi),%rax
00000000000991F8 mov %rax,0x18(%rsp)
00000000000991FD mov 0x10(%rsi),%rax
0000000000099201 mov %rax,0x20(%rsp)
0000000000099206 lea 0x10(%rsp),%rsi
000000000009920B call 0x00000000000905A0
0000000000099210 mov 8(%rsp),%rax
0000000000099215 add $0x28,%rsp
0000000000099219 ret

 Function call queue at function 991e0: [905a0]

Analyzing function at 905a0
00000000000905A0 sub $0xC8,%rsp
00000000000905A7 mov %rsi,0x20(%rsp)
00000000000905AC mov %rdi,%rax
00000000000905AF mov 0x20(%rsp),%rdi
00000000000905B4 mov %rax,0x28(%rsp)
00000000000905B9 mov %rax,0x30(%rsp)
00000000000905BE movb $1,0xAF(%rsp)
00000000000905C6 call 0x000000000005A620
00000000000905CB mov %rax,0x38(%rsp)
00000000000905D0 jmp 0x00000000000905FB
00000000000905D2 testb $1,0xAF(%rsp)
00000000000905DA jne 0x00000000000907E8
00000000000905E0 jmp 0x00000000000907D9
00000000000905E5 mov %rax,%rcx
00000000000905E8 mov %edx,%eax
00000000000905EA mov %rcx,0xB0(%rsp)
00000000000905F2 mov %eax,0xB8(%rsp)
00000000000905F9 jmp 0x00000000000905D2
00000000000905FB mov 0x38(%rsp),%rax
0000000000090600 mov %rax,0x58(%rsp)
0000000000090605 mov 0x58(%rsp),%rax
000000000009060A test %rax,%rax
000000000009060D setne %al
0000000000090610 movzbl %al,%eax
0000000000090613 je 0x000000000009061B
0000000000090615 jmp 0x0000000000090617
0000000000090617 jmp 0x000000000009062A
0000000000090619 ud2
000000000009061B mov 0x28(%rsp),%rdi
0000000000090620 call 0x0000000000091480
0000000000090625 jmp 0x00000000000907D7
000000000009062A mov 0x20(%rsp),%rsi
000000000009062F movb $1,0xAE(%rsp)
0000000000090637 mov 0x58(%rsp),%rax
000000000009063C mov %rax,0x18(%rsp)
0000000000090641 lea 0x60(%rsp),%rdi
0000000000090646 call 0x000000000005A890
000000000009064B jmp 0x0000000000090676
000000000009064D testb $1,0xAE(%rsp)
0000000000090655 jne 0x0000000000090781
000000000009065B jmp 0x00000000000905D2
0000000000090660 mov %rax,%rcx
0000000000090663 mov %edx,%eax
0000000000090665 mov %rcx,0xB0(%rsp)
000000000009066D mov %eax,0xB8(%rsp)
0000000000090674 jmp 0x000000000009064D
0000000000090676 mov 0x60(%rsp),%rax
000000000009067B inc %rax
000000000009067E mov $0xFFFFFFFFFFFFFFFF,%rcx
0000000000090685 cmove %rcx,%rax
0000000000090689 mov %rax,0xC0(%rsp)
0000000000090691 mov 0xC0(%rsp),%rax
0000000000090699 mov %rax,0x10(%rsp)
000000000009069E mov 0x10(%rsp),%rsi
00000000000906A3 lea 0xEFD80,%rax
00000000000906AA mov $4,%edi
00000000000906AF call *%rax
00000000000906B1 mov %rax,8(%rsp)
00000000000906B6 jmp 0x00000000000906B8
00000000000906B8 mov 8(%rsp),%rsi
00000000000906BD lea 0x78(%rsp),%rdi
00000000000906C2 call 0x00000000000911C0
00000000000906C7 jmp 0x00000000000906C9
00000000000906C9 lea 0x78(%rsp),%rdi
00000000000906CE call 0x0000000000091580
00000000000906D3 mov %rax,(%rsp)
00000000000906D7 jmp 0x00000000000906FE
00000000000906D9 lea 0x78(%rsp),%rdi
00000000000906DE call 0x000000000009BC70
00000000000906E3 jmp 0x000000000009064D
00000000000906E8 mov %rax,%rcx
00000000000906EB mov %edx,%eax
00000000000906ED mov %rcx,0xB0(%rsp)
00000000000906F5 mov %eax,0xB8(%rsp)
00000000000906FC jmp 0x00000000000906D9
00000000000906FE mov 0x18(%rsp),%rsi
0000000000090703 mov (%rsp),%rdi
0000000000090707 movb $0,0xAE(%rsp)
000000000009070F call 0x0000000000068940
0000000000090714 jmp 0x0000000000090716
0000000000090716 lea 0x78(%rsp),%rdi
000000000009071B mov $1,%esi
0000000000090720 call 0x00000000000957C0
0000000000090725 jmp 0x0000000000090727
0000000000090727 mov 0x20(%rsp),%rax
000000000009072C mov 0x88(%rsp),%rcx
0000000000090734 mov %rcx,0x50(%rsp)
0000000000090739 movups 0x78(%rsp),%xmm0
000000000009073E movaps %xmm0,0x40(%rsp)
0000000000090743 movb $0,0xAF(%rsp)
000000000009074B mov 0x10(%rax),%rcx
000000000009074F mov %rcx,0xA0(%rsp)
0000000000090757 movups (%rax),%xmm0
000000000009075A movaps %xmm0,0x90(%rsp)
0000000000090762 lea 0x40(%rsp),%rdi
0000000000090767 lea 0x90(%rsp),%rsi
000000000009076F call 0x0000000000098DE0
0000000000090774 jmp 0x00000000000907AB
0000000000090776 lea 0x2FBE0,%rax
000000000009077D call *%rax
000000000009077F ud2
0000000000090781 jmp 0x00000000000905D2
0000000000090786 lea 0x40(%rsp),%rdi
000000000009078B call 0x000000000009BC70
0000000000090790 jmp 0x00000000000905D2
0000000000090795 mov %rax,%rcx
0000000000090798 mov %edx,%eax
000000000009079A mov %rcx,0xB0(%rsp)
00000000000907A2 mov %eax,0xB8(%rsp)
00000000000907A9 jmp 0x0000000000090786
00000000000907AB mov 0x28(%rsp),%rax
00000000000907B0 mov 0x40(%rsp),%rcx
00000000000907B5 mov %rcx,(%rax)
00000000000907B8 mov 0x48(%rsp),%rcx
00000000000907BD mov %rcx,8(%rax)
00000000000907C1 mov 0x50(%rsp),%rcx
00000000000907C6 mov %rcx,0x10(%rax)
00000000000907CA mov 0x30(%rsp),%rax
00000000000907CF add $0xC8,%rsp
00000000000907D6 ret
00000000000907D7 jmp 0x00000000000907CA

 Function call queue at function 905a0: [5a620, 91480, 5a890, 911c0, 91580, 68940, 957c0, 98de0]

Analyzing function at 5a620
000000000005A620 push %rax
000000000005A621 mov %rdi,%rsi
000000000005A624 mov %rsi,%rdi
000000000005A627 add $0x10,%rsi
000000000005A62B call 0x0000000000053250
000000000005A630 mov %rax,(%rsp)
000000000005A634 mov (%rsp),%rax
000000000005A638 pop %rcx
000000000005A639 ret

 Function call queue at function 5a620: [53250]

Analyzing function at 53250
0000000000053250 sub $0x58,%rsp
0000000000053254 mov %rdi,0x18(%rsp)
0000000000053259 mov %rsi,0x20(%rsp)
000000000005325E mov 0x18(%rsp),%rdi
0000000000053263 call 0x0000000000053910
0000000000053268 mov %rax,0x10(%rsp)
000000000005326D jmp 0x0000000000053281
000000000005326F jmp 0x00000000000532E8
0000000000053271 mov %rax,%rcx
0000000000053274 mov %edx,%eax
0000000000053276 mov %rcx,0x48(%rsp)
000000000005327B mov %eax,0x50(%rsp)
000000000005327F jmp 0x000000000005326F
0000000000053281 mov 0x10(%rsp),%rax
0000000000053286 mov %rax,0x30(%rsp)
000000000005328B mov $1,%eax
0000000000053290 xor %ecx,%ecx
0000000000053292 cmpq $0,0x30(%rsp)
0000000000053298 cmove %rcx,%rax
000000000005329C cmp $1,%rax
00000000000532A0 jne 0x00000000000532CB
00000000000532A2 mov 0x30(%rsp),%rax
00000000000532A7 mov %rax,0x38(%rsp)
00000000000532AC lea 0x38(%rsp),%rax
00000000000532B1 mov %rax,0x40(%rsp)
00000000000532B6 mov 0x40(%rsp),%rsi
00000000000532BB lea 0x20(%rsp),%rdi
00000000000532C0 call 0x00000000000A27D0
00000000000532C5 mov %al,0xF(%rsp)
00000000000532C9 jmp 0x00000000000532DE
00000000000532CB movq $0,0x28(%rsp)
00000000000532D4 mov 0x28(%rsp),%rax
00000000000532D9 add $0x58,%rsp
00000000000532DD ret
00000000000532DE mov 0xF(%rsp),%al
00000000000532E2 test $1,%al
00000000000532E4 jne 0x00000000000532F9
00000000000532E6 jmp 0x00000000000532F4
00000000000532E8 mov 0x48(%rsp),%rdi
00000000000532ED call 0x000000000002E3D0
00000000000532F2 ud2
00000000000532F4 jmp 0x000000000005325E
00000000000532F9 mov 0x38(%rsp),%rax
00000000000532FE mov %rax,0x28(%rsp)
0000000000053303 jmp 0x00000000000532D4

 Function call queue at function 53250: [53910, a27d0]

Analyzing function at 53910
0000000000053910 sub $0x48,%rsp
0000000000053914 mov %rdi,0x20(%rsp)
0000000000053919 mov (%rdi),%rdi
000000000005391C call 0x0000000000084370
0000000000053921 mov %rax,0x28(%rsp)
0000000000053926 mov 0x28(%rsp),%rdi
000000000005392B call 0x00000000000A28A0
0000000000053930 jmp 0x0000000000053932
0000000000053932 mov $0x28,%eax
0000000000053937 cmp $0,%rax
000000000005393B jne 0x000000000005393F
000000000005393D jmp 0x000000000005394F
000000000005393F mov 0x20(%rsp),%rax
0000000000053944 mov 8(%rax),%rdi
0000000000053948 call 0x00000000000A2980
000000000005394D jmp 0x000000000005394F
000000000005394F mov 0x20(%rsp),%rax
0000000000053954 mov (%rax),%rdi
0000000000053957 call 0x0000000000084370
000000000005395C mov %rax,0x18(%rsp)
0000000000053961 mov 0x18(%rsp),%rax
0000000000053966 mov 0x20(%rsp),%rcx
000000000005396B cmp 8(%rcx),%rax
000000000005396F je 0x00000000000539C7
0000000000053971 mov 0x20(%rsp),%rax
0000000000053976 mov (%rax),%rdi
0000000000053979 call 0x0000000000084370
000000000005397E mov %rax,%rcx
0000000000053981 mov 0x20(%rsp),%rax
0000000000053986 mov %rcx,8(%rsp)
000000000005398B mov (%rax),%rdi
000000000005398E call 0x0000000000084370
0000000000053993 add $0x28,%rax
0000000000053997 mov %rax,0x40(%rsp)
000000000005399C mov 0x40(%rsp),%rdi
00000000000539A1 call 0x0000000000083630
00000000000539A6 mov 0x20(%rsp),%rcx
00000000000539AB mov %rax,%rdx
00000000000539AE mov 8(%rsp),%rax
00000000000539B3 mov %rdx,(%rcx)
00000000000539B6 mov %rax,0x38(%rsp)
00000000000539BB mov 0x38(%rsp),%rax
00000000000539C0 mov %rax,0x10(%rsp)
00000000000539C5 jmp 0x00000000000539DA
00000000000539C7 movq $0,0x30(%rsp)
00000000000539D0 mov 0x30(%rsp),%rax
00000000000539D5 add $0x48,%rsp
00000000000539D9 ret
00000000000539DA mov 0x10(%rsp),%rax
00000000000539DF mov %rax,0x30(%rsp)
00000000000539E4 jmp 0x00000000000539D0

 Function call queue at function 53910: [a2980, 84370, 83630]

Analyzing function at a2980
00000000000A2980 sub $0x28,%rsp
00000000000A2984 mov %rdi,0x10(%rsp)
00000000000A2989 movq $0,0x20(%rsp)
00000000000A2992 mov 0x20(%rsp),%rdi
00000000000A2997 callq *0x3149C8
00000000000A299D mov %rax,0x18(%rsp)
00000000000A29A2 mov 0x18(%rsp),%rsi
00000000000A29A7 mov 0x10(%rsp),%rdi
00000000000A29AC callq *0x3107A0
00000000000A29B2 mov %al,0xF(%rsp)
00000000000A29B6 mov 0xF(%rsp),%al
00000000000A29BA and $1,%al
00000000000A29BC movzbl %al,%eax
00000000000A29BF add $0x28,%rsp
00000000000A29C3 ret

 Function call queue at function a2980: []

Analyzing function at 84370
0000000000084370 mov %rdi,%rax
0000000000084373 ret

 Function call queue at function 84370: []

Analyzing function at 83630
0000000000083630 push %rax
0000000000083631 mov %rdi,(%rsp)
0000000000083635 mov (%rsp),%rax
0000000000083639 pop %rcx
000000000008363A ret

 Function call queue at function 83630: []

Analyzing function at a27d0
00000000000A27D0 sub $0x18,%rsp
00000000000A27D4 mov %rsi,0x10(%rsp)
00000000000A27D9 mov (%rdi),%rdi
00000000000A27DC mov 0x10(%rsp),%rsi
00000000000A27E1 call 0x00000000000A5260
00000000000A27E6 mov %al,0xF(%rsp)
00000000000A27EA mov 0xF(%rsp),%al
00000000000A27EE and $1,%al
00000000000A27F0 movzbl %al,%eax
00000000000A27F3 add $0x18,%rsp
00000000000A27F7 ret

 Function call queue at function a27d0: [a5260]

Analyzing function at a5260
00000000000A5260 sub $0x28,%rsp
00000000000A5264 mov %rdi,8(%rsp)
00000000000A5269 mov %rsi,0x10(%rsp)
00000000000A526E mov (%rsi),%rdi
00000000000A5271 add $0x18,%rdi
00000000000A5275 call 0x000000000006E5F0
00000000000A527A mov %al,0x1E(%rsp)
00000000000A527E mov 0x1E(%rsp),%al
00000000000A5282 test $1,%al
00000000000A5284 jne 0x00000000000A528F
00000000000A5286 jmp 0x00000000000A5288
00000000000A5288 movb $0,0x1F(%rsp)
00000000000A528D jmp 0x00000000000A52BC
00000000000A528F mov 0x10(%rsp),%rax
00000000000A5294 mov 8(%rsp),%rcx
00000000000A5299 mov (%rcx),%rdi
00000000000A529C mov (%rax),%rax
00000000000A529F mov %rax,0x20(%rsp)
00000000000A52A4 mov 0x20(%rsp),%rsi
00000000000A52A9 call 0x00000000000A47B0
00000000000A52AE mov %al,7(%rsp)
00000000000A52B2 mov 7(%rsp),%al
00000000000A52B6 and $1,%al
00000000000A52B8 mov %al,0x1F(%rsp)
00000000000A52BC mov 0x1F(%rsp),%al
00000000000A52C0 and $1,%al
00000000000A52C2 movzbl %al,%eax
00000000000A52C5 add $0x28,%rsp
00000000000A52C9 ret

 Function call queue at function a5260: [6e5f0, a47b0]

Analyzing function at 6e5f0
000000000006E5F0 push %rax
000000000006E5F1 call 0x000000000006E670
000000000006E5F6 mov %al,7(%rsp)
000000000006E5FA mov 7(%rsp),%al
000000000006E5FE xor $0xFF,%al
000000000006E600 and $1,%al
000000000006E602 movzbl %al,%eax
000000000006E605 pop %rcx
000000000006E606 ret

 Function call queue at function 6e5f0: []

Analyzing function at a47b0
00000000000A47B0 sub $0x18,%rsp
00000000000A47B4 mov %rsi,8(%rsp)
00000000000A47B9 mov %rdi,%rax
00000000000A47BC mov 8(%rsp),%rdi
00000000000A47C1 mov (%rax),%rsi
00000000000A47C4 call 0x0000000000030FD0
00000000000A47C9 mov %al,0x17(%rsp)
00000000000A47CD mov 0x17(%rsp),%al
00000000000A47D1 and $1,%al
00000000000A47D3 movzbl %al,%eax
00000000000A47D6 add $0x18,%rsp
00000000000A47DA ret

 Function call queue at function a47b0: []

Analyzing function at 91480
0000000000091480 mov %rdi,%rax
0000000000091483 mov 0x253718,%rdx
000000000009148A mov 0x253720,%rcx
0000000000091491 mov %rdx,(%rdi)
0000000000091494 mov %rcx,8(%rdi)
0000000000091498 movq $0,0x10(%rdi)
00000000000914A0 ret

 Function call queue at function 91480: []

Analyzing function at 5a890
000000000005A890 sub $0x28,%rsp
000000000005A894 mov %rdi,(%rsp)
000000000005A898 mov %rdi,8(%rsp)
000000000005A89D lea 0x10(%rsp),%rdi
000000000005A8A2 call 0x00000000000548D0
000000000005A8A7 mov 8(%rsp),%rax
000000000005A8AC mov (%rsp),%rcx
000000000005A8B0 mov 0x18(%rsp),%rsi
000000000005A8B5 mov 0x20(%rsp),%rdx
000000000005A8BA movq $0,(%rcx)
000000000005A8C1 mov %rsi,8(%rcx)
000000000005A8C5 mov %rdx,0x10(%rcx)
000000000005A8C9 add $0x28,%rsp
000000000005A8CD ret

 Function call queue at function 5a890: [548d0]

Analyzing function at 548d0
00000000000548D0 sub $0x78,%rsp
00000000000548D4 mov %rsi,0x38(%rsp)
00000000000548D9 mov %rdi,0x40(%rsp)
00000000000548DE mov %rdi,0x48(%rsp)
00000000000548E3 mov (%rsi),%rdi
00000000000548E6 mov %rdi,0x50(%rsp)
00000000000548EB call 0x0000000000084370
00000000000548F0 jmp 0x00000000000548F2
00000000000548F2 mov $0x28,%eax
00000000000548F7 cmp $0,%rax
00000000000548FB jne 0x0000000000054915
00000000000548FD mov 0x38(%rsp),%rax
0000000000054902 mov 8(%rax),%rdi
0000000000054906 call 0x00000000000A2940
000000000005490B mov %rax,0x30(%rsp)
0000000000054910 jmp 0x00000000000549B4
0000000000054915 mov 0x38(%rsp),%rax
000000000005491A mov 8(%rax),%rdi
000000000005491E call 0x00000000000A2940
0000000000054923 mov %rax,0x28(%rsp)
0000000000054928 mov 0x50(%rsp),%rdi
000000000005492D call 0x0000000000084370
0000000000054932 mov %rax,0x20(%rsp)
0000000000054937 mov 0x20(%rsp),%rdi
000000000005493C call 0x00000000000A2830
0000000000054941 mov %rax,0x18(%rsp)
0000000000054946 mov 0x18(%rsp),%rcx
000000000005494B mov 0x28(%rsp),%rax
0000000000054950 sub %rcx,%rax
0000000000054953 mov %rax,0x70(%rsp)
0000000000054958 mov 0x70(%rsp),%rax
000000000005495D mov %rax,0x10(%rsp)
0000000000054962 mov 0x10(%rsp),%rax
0000000000054967 mov $0x28,%ecx
000000000005496C xor %edx,%edx
000000000005496E div %rcx
0000000000054971 mov %rax,0x58(%rsp)
0000000000054976 jmp 0x0000000000054978
0000000000054978 mov 0x48(%rsp),%rax
000000000005497D mov 0x40(%rsp),%rcx
0000000000054982 mov 0x58(%rsp),%rdx
0000000000054987 mov 0x58(%rsp),%rsi
000000000005498C mov %rsi,0x68(%rsp)
0000000000054991 movq $1,0x60(%rsp)
000000000005499A mov %rdx,(%rcx)
000000000005499D mov 0x60(%rsp),%rsi
00000000000549A2 mov 0x68(%rsp),%rdx
00000000000549A7 mov %rsi,8(%rcx)
00000000000549AB mov %rdx,0x10(%rcx)
00000000000549AF add $0x78,%rsp
00000000000549B3 ret
00000000000549B4 mov 0x50(%rsp),%rdi
00000000000549B9 call 0x0000000000084370
00000000000549BE mov %rax,8(%rsp)
00000000000549C3 mov 8(%rsp),%rdi
00000000000549C8 call 0x00000000000A2830
00000000000549CD mov %rax,(%rsp)
00000000000549D1 mov (%rsp),%rcx
00000000000549D5 mov 0x30(%rsp),%rax
00000000000549DA sub %rcx,%rax
00000000000549DD mov %rax,0x58(%rsp)
00000000000549E2 jmp 0x0000000000054978

 Function call queue at function 548d0: [a2940, a2830]

Analyzing function at a2940
00000000000A2940 sub $0x10,%rsp
00000000000A2944 mov %rdi,8(%rsp)
00000000000A2949 mov 8(%rsp),%rax
00000000000A294E mov %rax,(%rsp)
00000000000A2952 mov (%rsp),%rax
00000000000A2956 add $0x10,%rsp
00000000000A295A ret

 Function call queue at function a2940: []

Analyzing function at a2830
00000000000A2830 sub $0x10,%rsp
00000000000A2834 mov %rdi,8(%rsp)
00000000000A2839 mov 8(%rsp),%rax
00000000000A283E mov %rax,(%rsp)
00000000000A2842 mov (%rsp),%rax
00000000000A2846 add $0x10,%rsp
00000000000A284A ret

 Function call queue at function a2830: []

Analyzing function at 911c0
00000000000911C0 push %rax
00000000000911C1 mov %rdi,%rax
00000000000911C4 mov %rax,(%rsp)
00000000000911C8 call 0x0000000000093B00
00000000000911CD mov (%rsp),%rax
00000000000911D1 pop %rcx
00000000000911D2 ret

 Function call queue at function 911c0: []

Analyzing function at 91580
0000000000091580 push %rax
0000000000091581 call 0x00000000000817F0
0000000000091586 mov %rax,(%rsp)
000000000009158A mov (%rsp),%rdi
000000000009158E call 0x00000000000A2850
0000000000091593 mov (%rsp),%rax
0000000000091597 pop %rcx
0000000000091598 ret

 Function call queue at function 91580: [a2850]

Analyzing function at a2850
00000000000A2850 sub $0x28,%rsp
00000000000A2854 mov %rdi,0x10(%rsp)
00000000000A2859 movq $0,0x20(%rsp)
00000000000A2862 mov 0x20(%rsp),%rdi
00000000000A2867 callq *0x30FE80
00000000000A286D mov %rax,0x18(%rsp)
00000000000A2872 mov 0x18(%rsp),%rsi
00000000000A2877 mov 0x10(%rsp),%rdi
00000000000A287C callq *0x312630
00000000000A2882 mov %al,0xF(%rsp)
00000000000A2886 mov 0xF(%rsp),%al
00000000000A288A and $1,%al
00000000000A288C movzbl %al,%eax
00000000000A288F add $0x28,%rsp
00000000000A2893 ret

 Function call queue at function a2850: []

Analyzing function at 68940
0000000000068940 push %rax
0000000000068941 mov %rsi,(%rsp)
0000000000068945 mov (%rsp),%rax
0000000000068949 mov %rax,(%rdi)
000000000006894C pop %rax
000000000006894D ret

 Function call queue at function 68940: []

Analyzing function at 957c0
00000000000957C0 mov %rsi,0x10(%rdi)
00000000000957C4 ret

 Function call queue at function 957c0: []

Analyzing function at 98de0
0000000000098DE0 sub $0x18,%rsp
0000000000098DE4 mov (%rsi),%rax
0000000000098DE7 mov %rax,(%rsp)
0000000000098DEB mov 8(%rsi),%rax
0000000000098DEF mov %rax,8(%rsp)
0000000000098DF4 mov 0x10(%rsi),%rax
0000000000098DF8 mov %rax,0x10(%rsp)
0000000000098DFD mov %rsp,%rsi
0000000000098E00 call 0x00000000000935B0
0000000000098E05 add $0x18,%rsp
0000000000098E09 ret

 Function call queue at function 98de0: [935b0]

Analyzing function at 935b0
00000000000935B0 sub $0x98,%rsp
00000000000935B7 mov %rdi,0x40(%rsp)
00000000000935BC mov %rsi,0x48(%rsp)
00000000000935C1 mov 0x48(%rsp),%rdi
00000000000935C6 call 0x000000000005A620
00000000000935CB mov %rax,0x38(%rsp)
00000000000935D0 jmp 0x00000000000935EA
00000000000935D2 jmp 0x0000000000093731
00000000000935D7 mov %rax,%rcx
00000000000935DA mov %edx,%eax
00000000000935DC mov %rcx,0x78(%rsp)
00000000000935E1 mov %eax,0x80(%rsp)
00000000000935E8 jmp 0x00000000000935D2
00000000000935EA mov 0x38(%rsp),%rax
00000000000935EF mov %rax,0x50(%rsp)
00000000000935F4 mov $1,%eax
00000000000935F9 xor %ecx,%ecx
00000000000935FB cmpq $0,0x50(%rsp)
0000000000093601 cmove %rcx,%rax
0000000000093605 cmp $1,%rax
0000000000093609 jne 0x000000000009362B
000000000009360B mov 0x40(%rsp),%rdi
0000000000093610 movb $1,0x77(%rsp)
0000000000093615 mov 0x50(%rsp),%rax
000000000009361A mov %rax,0x28(%rsp)
000000000009361F call 0x0000000000094110
0000000000093624 mov %rax,0x30(%rsp)
0000000000093629 jmp 0x0000000000093657
000000000009362B jmp 0x000000000009362D
000000000009362D jmp 0x000000000009362F
000000000009362F add $0x98,%rsp
0000000000093636 ret
0000000000093637 testb $1,0x77(%rsp)
000000000009363C jne 0x000000000009372C
0000000000093642 jmp 0x00000000000935D2
0000000000093644 mov %rax,%rcx
0000000000093647 mov %edx,%eax
0000000000093649 mov %rcx,0x78(%rsp)
000000000009364E mov %eax,0x80(%rsp)
0000000000093655 jmp 0x0000000000093637
0000000000093657 mov 0x40(%rsp),%rdi
000000000009365C call 0x0000000000095860
0000000000093661 mov %rax,0x20(%rsp)
0000000000093666 jmp 0x0000000000093668
0000000000093668 mov 0x30(%rsp),%rax
000000000009366D mov 0x20(%rsp),%rcx
0000000000093672 cmp %rcx,%rax
0000000000093675 je 0x0000000000093688
0000000000093677 mov 0x40(%rsp),%rdi
000000000009367C call 0x0000000000091580
0000000000093681 mov %rax,0x18(%rsp)
0000000000093686 jmp 0x00000000000936D4
0000000000093688 mov 0x48(%rsp),%rsi
000000000009368D lea 0x58(%rsp),%rdi
0000000000093692 call 0x000000000005A890
0000000000093697 jmp 0x0000000000093699
0000000000093699 mov 0x58(%rsp),%rax
000000000009369E inc %rax
00000000000936A1 mov $0xFFFFFFFFFFFFFFFF,%rcx
00000000000936A8 cmove %rcx,%rax
00000000000936AC mov %rax,0x88(%rsp)
00000000000936B4 mov 0x88(%rsp),%rax
00000000000936BC mov %rax,0x10(%rsp)
00000000000936C1 mov 0x10(%rsp),%rsi
00000000000936C6 mov 0x40(%rsp),%rdi
00000000000936CB call 0x0000000000095720
00000000000936D0 jmp 0x00000000000936D2
00000000000936D2 jmp 0x0000000000093677
00000000000936D4 mov 0x18(%rsp),%rax
00000000000936D9 mov 0x30(%rsp),%rcx
00000000000936DE shl $3,%rcx
00000000000936E2 add %rcx,%rax
00000000000936E5 mov %rax,0x90(%rsp)
00000000000936ED mov 0x90(%rsp),%rax
00000000000936F5 mov %rax,8(%rsp)
00000000000936FA jmp 0x00000000000936FC
00000000000936FC mov 0x28(%rsp),%rsi
0000000000093701 mov 8(%rsp),%rdi
0000000000093706 movb $0,0x77(%rsp)
000000000009370B call 0x0000000000068940
0000000000093710 jmp 0x0000000000093712
0000000000093712 mov 0x40(%rsp),%rdi
0000000000093717 mov 0x30(%rsp),%rsi
000000000009371C add $1,%rsi
0000000000093720 call 0x00000000000957C0
0000000000093725 jmp 0x0000000000093727
0000000000093727 jmp 0x00000000000935C1

 Function call queue at function 935b0: [95860, 95720]

Analyzing function at 95860
0000000000095860 sub $0x10,%rsp
0000000000095864 mov 8(%rdi),%rax
0000000000095868 mov %rax,8(%rsp)
000000000009586D mov 8(%rsp),%rax
0000000000095872 mov %rax,(%rsp)
0000000000095876 mov (%rsp),%rax
000000000009587A add $0x10,%rsp
000000000009587E ret

 Function call queue at function 95860: []

Analyzing function at 95720
0000000000095720 push %rax
0000000000095721 mov %rsi,%rdx
0000000000095724 mov %rdi,%rax
0000000000095727 mov %rax,%rdi
000000000009572A mov 0x10(%rax),%rsi
000000000009572E call 0x0000000000081D60
0000000000095733 pop %rax
0000000000095734 ret

 Function call queue at function 95720: [81d60]

Analyzing function at 81d60
0000000000081D60 sub $0x28,%rsp
0000000000081D64 mov %rdi,8(%rsp)
0000000000081D69 mov %rsi,0x10(%rsp)
0000000000081D6E mov %rdx,0x18(%rsp)
0000000000081D73 call 0x000000000007C4B0
0000000000081D78 mov %al,0x27(%rsp)
0000000000081D7C mov 0x27(%rsp),%al
0000000000081D80 test $1,%al
0000000000081D82 jne 0x0000000000081D8B
0000000000081D84 jmp 0x0000000000081D86
0000000000081D86 add $0x28,%rsp
0000000000081D8A ret
0000000000081D8B mov 0x18(%rsp),%rdx
0000000000081D90 mov 0x10(%rsp),%rsi
0000000000081D95 mov 8(%rsp),%rdi
0000000000081D9A call 0x0000000000081F40
0000000000081D9F jmp 0x0000000000081D86

 Function call queue at function 81d60: [7c4b0, 81f40]

Analyzing function at 7c4b0
000000000007C4B0 sub $0x28,%rsp
000000000007C4B4 mov %rsi,8(%rsp)
000000000007C4B9 mov %rdx,0x10(%rsp)
000000000007C4BE mov 8(%rdi),%rax
000000000007C4C2 mov %rax,0x20(%rsp)
000000000007C4C7 mov 0x20(%rsp),%rax
000000000007C4CC mov %rax,0x18(%rsp)
000000000007C4D1 mov 8(%rsp),%rcx
000000000007C4D6 mov 0x18(%rsp),%rax
000000000007C4DB sub %rcx,%rax
000000000007C4DE mov %rax,(%rsp)
000000000007C4E2 mov 0x10(%rsp),%rax
000000000007C4E7 mov (%rsp),%rcx
000000000007C4EB cmp %rcx,%rax
000000000007C4EE seta %al
000000000007C4F1 and $1,%al
000000000007C4F3 movzbl %al,%eax
000000000007C4F6 add $0x28,%rsp
000000000007C4FA ret

 Function call queue at function 7c4b0: []

Analyzing function at 81f40
0000000000081F40 sub $0x18,%rsp
0000000000081F44 call 0x000000000007E9E0
0000000000081F49 mov %rax,8(%rsp)
0000000000081F4E mov %rdx,0x10(%rsp)
0000000000081F53 mov 0x10(%rsp),%rsi
0000000000081F58 mov 8(%rsp),%rdi
0000000000081F5D call 0x00000000000A06C0
0000000000081F62 add $0x18,%rsp
0000000000081F66 ret

 Function call queue at function 81f40: []

Analyzing function at 94110
0000000000094110 mov 0x10(%rdi),%rax
0000000000094114 ret

 Function call queue at function 94110: []

Analyzing function at 9bc70
000000000009BC70 sub $0x18,%rsp
000000000009BC74 mov %rdi,(%rsp)
000000000009BC78 call 0x000000000009EAF0
000000000009BC7D jmp 0x000000000009BC9A
000000000009BC7F mov (%rsp),%rdi
000000000009BC83 call 0x000000000009BD10
000000000009BC88 jmp 0x000000000009BCB0
000000000009BC8A mov %rax,%rcx
000000000009BC8D mov %edx,%eax
000000000009BC8F mov %rcx,8(%rsp)
000000000009BC94 mov %eax,0x10(%rsp)
000000000009BC98 jmp 0x000000000009BC7F
000000000009BC9A mov (%rsp),%rdi
000000000009BC9E call 0x000000000009BD10
000000000009BCA3 jmp 0x000000000009BCBC
000000000009BCA5 lea 0x2FBE0,%rax
000000000009BCAC call *%rax
000000000009BCAE ud2
000000000009BCB0 mov 8(%rsp),%rdi
000000000009BCB5 call 0x000000000002E3D0
000000000009BCBA ud2
000000000009BCBC add $0x18,%rsp
000000000009BCC0 ret

 Function call queue at function 9bc70: [9bd10]

Analyzing function at 9bd10
000000000009BD10 push %rax
000000000009BD11 call 0x000000000009F180
000000000009BD16 pop %rax
000000000009BD17 ret

 Function call queue at function 9bd10: []

Analyzing function at 96910
0000000000096910 sub $0x48,%rsp
0000000000096914 mov %rsi,0x10(%rsp)
0000000000096919 mov %rdx,0x18(%rsp)
000000000009691E movb $1,0x37(%rsp)
0000000000096923 call 0x0000000000096260
0000000000096928 mov %rdx,0x20(%rsp)
000000000009692D mov %rax,0x28(%rsp)
0000000000096932 jmp 0x000000000009694D
0000000000096934 testb $1,0x37(%rsp)
0000000000096939 jne 0x0000000000096988
000000000009693B jmp 0x000000000009697C
000000000009693D mov %rax,%rcx
0000000000096940 mov %edx,%eax
0000000000096942 mov %rcx,0x38(%rsp)
0000000000096947 mov %eax,0x40(%rsp)
000000000009694B jmp 0x0000000000096934
000000000009694D mov 0x18(%rsp),%rcx
0000000000096952 mov 0x10(%rsp),%rdx
0000000000096957 mov 0x20(%rsp),%rsi
000000000009695C mov 0x28(%rsp),%rdi
0000000000096961 movb $0,0x37(%rsp)
0000000000096966 call 0x00000000000A2B00
000000000009696B mov %rax,8(%rsp)
0000000000096970 jmp 0x0000000000096972
0000000000096972 mov 8(%rsp),%rax
0000000000096977 add $0x48,%rsp
000000000009697B ret

 Function call queue at function 96910: [a2b00]

Analyzing function at a2b00
00000000000A2B00 sub $0x18,%rsp
00000000000A2B04 mov %rdx,8(%rsp)
00000000000A2B09 mov %rsi,%rdx
00000000000A2B0C mov %rdi,%rsi
00000000000A2B0F mov 8(%rsp),%rdi
00000000000A2B14 call 0x00000000000A7570
00000000000A2B19 mov %rax,0x10(%rsp)
00000000000A2B1E mov 0x10(%rsp),%rax
00000000000A2B23 add $0x18,%rsp
00000000000A2B27 ret

 Function call queue at function a2b00: [a7570]

Analyzing function at a7570
00000000000A7570 sub $0x28,%rsp
00000000000A7574 mov %rdi,8(%rsp)
00000000000A7579 mov %rsi,0x10(%rsp)
00000000000A757E mov %rdx,0x18(%rsp)
00000000000A7583 mov %rcx,0x20(%rsp)
00000000000A7588 cmp %rdx,%rdi
00000000000A758B setb %al
00000000000A758E test $1,%al
00000000000A7590 jne 0x00000000000A7594
00000000000A7592 jmp 0x00000000000A75AA
00000000000A7594 mov 0x10(%rsp),%rax
00000000000A7599 mov 8(%rsp),%rcx
00000000000A759E shl $3,%rcx
00000000000A75A2 add %rcx,%rax
00000000000A75A5 add $0x28,%rsp
00000000000A75A9 ret
00000000000A75AA mov 0x20(%rsp),%rdx
00000000000A75AF mov 0x18(%rsp),%rsi
00000000000A75B4 mov 8(%rsp),%rdi
00000000000A75B9 lea 0x2FB60,%rax
00000000000A75C0 call *%rax
00000000000A75C2 ud2

 Function call queue at function a7570: []

Analyzing function at 96260
0000000000096260 sub $0x28,%rsp
0000000000096264 mov %rdi,0x18(%rsp)
0000000000096269 call 0x0000000000095360
000000000009626E mov %rax,0x20(%rsp)
0000000000096273 mov 0x20(%rsp),%rdi
0000000000096278 mov 0x18(%rsp),%rax
000000000009627D mov 0x10(%rax),%rsi
0000000000096281 call 0x00000000000629C0
0000000000096286 mov %rax,8(%rsp)
000000000009628B mov %rdx,0x10(%rsp)
0000000000096290 mov 0x10(%rsp),%rdx
0000000000096295 mov 8(%rsp),%rax
000000000009629A add $0x28,%rsp
000000000009629E ret

 Function call queue at function 96260: [629c0]

Analyzing function at 629c0
00000000000629C0 sub $0x18,%rsp
00000000000629C4 call 0x0000000000067220
00000000000629C9 mov %rax,8(%rsp)
00000000000629CE mov %rdx,0x10(%rsp)
00000000000629D3 mov 0x10(%rsp),%rdx
00000000000629D8 mov 8(%rsp),%rax
00000000000629DD add $0x18,%rsp
00000000000629E1 ret

 Function call queue at function 629c0: []

Analyzing function at a2ab0
00000000000A2AB0 sub $0x10,%rsp
00000000000A2AB4 mov %rdi,(%rsp)
00000000000A2AB8 cmp $1,%rsi
00000000000A2ABC jae 0x00000000000A2AC9
00000000000A2ABE movq $0,8(%rsp)
00000000000A2AC7 jmp 0x00000000000A2AD2
00000000000A2AC9 mov (%rsp),%rax
00000000000A2ACD mov %rax,8(%rsp)
00000000000A2AD2 mov 8(%rsp),%rax
00000000000A2AD7 add $0x10,%rsp
00000000000A2ADB ret

 Function call queue at function a2ab0: []

Analyzing function at 6d220
000000000006D220 sub $0x28,%rsp
000000000006D224 mov %rdi,8(%rsp)
000000000006D229 movb $1,0x27(%rsp)
000000000006D22E mov 8(%rsp),%rax
000000000006D233 test %rax,%rax
000000000006D236 setne %al
000000000006D239 movzbl %al,%eax
000000000006D23C je 0x000000000006D244
000000000006D23E jmp 0x000000000006D240
000000000006D240 jmp 0x000000000006D24F
000000000006D242 ud2
000000000006D244 movq $0,0x10(%rsp)
000000000006D24D jmp 0x000000000006D275
000000000006D24F mov 8(%rsp),%rax
000000000006D254 movb $0,0x27(%rsp)
000000000006D259 mov %rax,0x18(%rsp)
000000000006D25E mov 0x18(%rsp),%rdi
000000000006D263 call 0x00000000000A52D0
000000000006D268 mov %rax,(%rsp)
000000000006D26C mov (%rsp),%rax
000000000006D270 mov %rax,0x10(%rsp)
000000000006D275 testb $1,0x27(%rsp)
000000000006D27A jne 0x000000000006D286
000000000006D27C mov 0x10(%rsp),%rax
000000000006D281 add $0x28,%rsp
000000000006D285 ret
000000000006D286 jmp 0x000000000006D27C

 Function call queue at function 6d220: [a52d0]

Analyzing function at a52d0
00000000000A52D0 mov (%rdi),%rax
00000000000A52D3 ret

 Function call queue at function a52d0: []

Analyzing function at 76d60
0000000000076D60 sub $0xA8,%rsp
0000000000076D67 mov %rsi,0x10(%rsp)
0000000000076D6C mov %rdi,0x18(%rsp)
0000000000076D71 mov %rdi,0x20(%rsp)
0000000000076D76 movb $1,0xA7(%rsp)
0000000000076D7E mov (%rsi),%rax
0000000000076D81 test %rax,%rax
0000000000076D84 je 0x0000000000076D8C
0000000000076D86 jmp 0x0000000000076D88
0000000000076D88 jmp 0x0000000000076DB2
0000000000076D8A ud2
0000000000076D8C mov 0x10(%rsp),%rax
0000000000076D91 mov 8(%rax),%rax
0000000000076D95 movb $0,0xA7(%rsp)
0000000000076D9D mov %rax,0x28(%rsp)
0000000000076DA2 mov 0x28(%rsp),%rdi
0000000000076DA7 call 0x00000000000A47E0
0000000000076DAC mov %al,0xF(%rsp)
0000000000076DB0 jmp 0x0000000000076E0A
0000000000076DB2 mov 0x10(%rsp),%rsi
0000000000076DB7 add $8,%rsi
0000000000076DBB lea 0x30(%rsp),%rdi
0000000000076DC0 mov $0x38,%edx
0000000000076DC5 call 0x000000000002E4B8
0000000000076DCA lea 0x68(%rsp),%rdi
0000000000076DCF lea 0x30(%rsp),%rsi
0000000000076DD4 mov $0x38,%edx
0000000000076DD9 call 0x000000000002E4B8
0000000000076DDE mov 0x18(%rsp),%rdi
0000000000076DE3 add $8,%rdi
0000000000076DE7 lea 0x68(%rsp),%rsi
0000000000076DEC mov $0x38,%edx
0000000000076DF1 call 0x000000000002E4B8
0000000000076DF6 mov 0x18(%rsp),%rax
0000000000076DFB movb $1,(%rax)
0000000000076DFE testb $1,0xA7(%rsp)
0000000000076E06 jne 0x0000000000076E2B
0000000000076E08 jmp 0x0000000000076E1E
0000000000076E0A mov 0x18(%rsp),%rax
0000000000076E0F mov 0xF(%rsp),%cl
0000000000076E13 and $1,%cl
0000000000076E16 mov %cl,1(%rax)
0000000000076E19 movb $0,(%rax)
0000000000076E1C jmp 0x0000000000076DFE
0000000000076E1E mov 0x20(%rsp),%rax
0000000000076E23 add $0xA8,%rsp
0000000000076E2A ret
0000000000076E2B jmp 0x0000000000076E1E

 Function call queue at function 76d60: [a47e0]

Analyzing function at a47e0
00000000000A47E0 sub $0x18,%rsp
00000000000A47E4 mov %rdi,0x10(%rsp)
00000000000A47E9 lea 0x10(%rsp),%rdi
00000000000A47EE call 0x000000000006E6D0
00000000000A47F3 mov %al,0xF(%rsp)
00000000000A47F7 mov 0xF(%rsp),%al
00000000000A47FB and $1,%al
00000000000A47FD movzbl %al,%eax
00000000000A4800 add $0x18,%rsp
00000000000A4804 ret

 Function call queue at function a47e0: []

Analyzing function at 77b40
0000000000077B40 sub $0xC8,%rsp
0000000000077B47 mov %rsi,8(%rsp)
0000000000077B4C mov %rdi,0x10(%rsp)
0000000000077B51 mov %rdi,0x18(%rsp)
0000000000077B56 movzbl (%rsi),%eax
0000000000077B59 test $1,%al
0000000000077B5B je 0x0000000000077B63
0000000000077B5D jmp 0x0000000000077B5F
0000000000077B5F jmp 0x0000000000077B7B
0000000000077B61 ud2
0000000000077B63 mov 0x10(%rsp),%rax
0000000000077B68 mov 8(%rsp),%rcx
0000000000077B6D mov 1(%rcx),%cl
0000000000077B70 and $1,%cl
0000000000077B73 mov %cl,1(%rax)
0000000000077B76 movb $0,(%rax)
0000000000077B79 jmp 0x0000000000077BE1
0000000000077B7B mov 8(%rsp),%rsi
0000000000077B80 add $8,%rsi
0000000000077B84 lea 0x20(%rsp),%rdi
0000000000077B89 mov $0x38,%edx
0000000000077B8E call 0x000000000002E4B8
0000000000077B93 lea 0x90(%rsp),%rdi
0000000000077B9B lea 0x20(%rsp),%rsi
0000000000077BA0 mov $0x38,%edx
0000000000077BA5 call 0x000000000002E4B8
0000000000077BAA lea 0x58(%rsp),%rdi
0000000000077BAF lea 0x90(%rsp),%rsi
0000000000077BB7 mov $0x38,%edx
0000000000077BBC call 0x000000000002E4B8
0000000000077BC1 mov 0x10(%rsp),%rdi
0000000000077BC6 add $8,%rdi
0000000000077BCA lea 0x58(%rsp),%rsi
0000000000077BCF mov $0x38,%edx
0000000000077BD4 call 0x000000000002E4B8
0000000000077BD9 mov 0x10(%rsp),%rax
0000000000077BDE movb $1,(%rax)
0000000000077BE1 mov 0x18(%rsp),%rax
0000000000077BE6 add $0xC8,%rsp
0000000000077BED ret

 Function call queue at function 77b40: []

Analyzing function at 57c20
0000000000057C20 sub $0x688,%rsp
0000000000057C27 mov %rdx,8(%rsp)
0000000000057C2C mov %rsi,0x10(%rsp)
0000000000057C31 mov %rdi,%rax
0000000000057C34 mov 0x10(%rsp),%rdi
0000000000057C39 mov %rax,0x18(%rsp)
0000000000057C3E mov %rax,0x20(%rsp)
0000000000057C43 call 0x0000000000031580
0000000000057C48 mov %al,0x2E(%rsp)
0000000000057C4C mov 0x2E(%rsp),%al
0000000000057C50 test $1,%al
0000000000057C52 jne 0x0000000000057C72
0000000000057C54 jmp 0x0000000000057C56
0000000000057C56 mov 8(%rsp),%rdx
0000000000057C5B mov 0x10(%rsp),%rsi
0000000000057C60 lea 0x3E8(%rsp),%rdi
0000000000057C68 call 0x000000000004A970
0000000000057C6D jmp 0x0000000000057F1A
0000000000057C72 mov 0x10(%rsp),%rsi
0000000000057C77 lea 0x70(%rsp),%rdi
0000000000057C7C lea 0x305D80,%rdx
0000000000057C83 call 0x00000000000314A0
0000000000057C88 lea 0x30(%rsp),%rdi
0000000000057C8D lea 0x70(%rsp),%rsi
0000000000057C92 call 0x0000000000077B40
0000000000057C97 movzbl 0x30(%rsp),%eax
0000000000057C9C test $1,%al
0000000000057C9E je 0x0000000000057CA6
0000000000057CA0 jmp 0x0000000000057CA2
0000000000057CA2 jmp 0x0000000000057CAF
0000000000057CA4 ud2
0000000000057CA6 testb $1,0x31(%rsp)
0000000000057CAB jne 0x0000000000057D0C
0000000000057CAD jmp 0x0000000000057D02
0000000000057CAF lea 0x30(%rsp),%rsi
0000000000057CB4 add $8,%rsi
0000000000057CB8 lea 0xB0(%rsp),%rdi
0000000000057CC0 mov $0x38,%edx
0000000000057CC5 call 0x000000000002E4B8
0000000000057CCA lea 0xE8(%rsp),%rdi
0000000000057CD2 lea 0xB0(%rsp),%rsi
0000000000057CDA mov $0x38,%edx
0000000000057CDF call 0x000000000002E4B8
0000000000057CE4 mov 0x18(%rsp),%rdi
0000000000057CE9 lea 0xE8(%rsp),%rsi
0000000000057CF1 lea 0x302F18,%rdx
0000000000057CF8 call 0x0000000000075980
0000000000057CFD jmp 0x0000000000057DB3
0000000000057D02 movb $0,0x2F(%rsp)
0000000000057D07 jmp 0x0000000000057DC0
0000000000057D0C mov 0x10(%rsp),%rsi
0000000000057D11 lea 0x160(%rsp),%rdi
0000000000057D19 lea 0x305D50,%rdx
0000000000057D20 call 0x00000000000314A0
0000000000057D25 lea 0x120(%rsp),%rdi
0000000000057D2D lea 0x160(%rsp),%rsi
0000000000057D35 call 0x0000000000077B40
0000000000057D3A movzbl 0x120(%rsp),%eax
0000000000057D42 test $1,%al
0000000000057D44 je 0x0000000000057D4C
0000000000057D46 jmp 0x0000000000057D48
0000000000057D48 jmp 0x0000000000057D5D
0000000000057D4A ud2
0000000000057D4C mov 0x121(%rsp),%al
0000000000057D53 xor $0xFF,%al
0000000000057D55 and $1,%al
0000000000057D57 mov %al,0x2F(%rsp)
0000000000057D5B jmp 0x0000000000057DC0
0000000000057D5D lea 0x120(%rsp),%rsi
0000000000057D65 add $8,%rsi
0000000000057D69 lea 0x1A0(%rsp),%rdi
0000000000057D71 mov $0x38,%edx
0000000000057D76 call 0x000000000002E4B8
0000000000057D7B lea 0x1D8(%rsp),%rdi
0000000000057D83 lea 0x1A0(%rsp),%rsi
0000000000057D8B mov $0x38,%edx
0000000000057D90 call 0x000000000002E4B8
0000000000057D95 mov 0x18(%rsp),%rdi
0000000000057D9A lea 0x1D8(%rsp),%rsi
0000000000057DA2 lea 0x302F30,%rdx
0000000000057DA9 call 0x0000000000075980
0000000000057DAE jmp 0x0000000000057CFD
0000000000057DB3 mov 0x20(%rsp),%rax
0000000000057DB8 add $0x688,%rsp
0000000000057DBF ret
0000000000057DC0 testb $1,0x2F(%rsp)
0000000000057DC5 jne 0x0000000000057DE2
0000000000057DC7 mov 0x10(%rsp),%rsi
0000000000057DCC lea 0x288(%rsp),%rdi
0000000000057DD4 lea 0x305CF0,%rdx
0000000000057DDB call 0x00000000000314A0
0000000000057DE0 jmp 0x0000000000057E38
0000000000057DE2 mov 0x18(%rsp),%rdi
0000000000057DE7 lea 0x305D80,%rax
0000000000057DEE mov %rax,0x218(%rsp)
0000000000057DF6 movb $1,0x211(%rsp)
0000000000057DFE lea 0x305D20,%rax
0000000000057E05 mov %rax,0x220(%rsp)
0000000000057E0D movb $5,0x210(%rsp)
0000000000057E15 add $8,%rdi
0000000000057E19 lea 0x210(%rsp),%rsi
0000000000057E21 mov $0x38,%edx
0000000000057E26 call 0x000000000002E4B8
0000000000057E2B mov 0x18(%rsp),%rax
0000000000057E30 movb $1,(%rax)
0000000000057E33 jmp 0x0000000000057DB3
0000000000057E38 lea 0x248(%rsp),%rdi
0000000000057E40 lea 0x288(%rsp),%rsi
0000000000057E48 call 0x0000000000077B40
0000000000057E4D movzbl 0x248(%rsp),%eax
0000000000057E55 test $1,%al
0000000000057E57 je 0x0000000000057E5F
0000000000057E59 jmp 0x0000000000057E5B
0000000000057E5B jmp 0x0000000000057E6E
0000000000057E5D ud2
0000000000057E5F testb $1,0x249(%rsp)
0000000000057E67 jne 0x0000000000057EC4
0000000000057E69 jmp 0x0000000000057C56
0000000000057E6E lea 0x248(%rsp),%rsi
0000000000057E76 add $8,%rsi
0000000000057E7A lea 0x2C8(%rsp),%rdi
0000000000057E82 mov $0x38,%edx
0000000000057E87 call 0x000000000002E4B8
0000000000057E8C lea 0x300(%rsp),%rdi
0000000000057E94 lea 0x2C8(%rsp),%rsi
0000000000057E9C mov $0x38,%edx
0000000000057EA1 call 0x000000000002E4B8
0000000000057EA6 mov 0x18(%rsp),%rdi
0000000000057EAB lea 0x300(%rsp),%rsi
0000000000057EB3 lea 0x302F48,%rdx
0000000000057EBA call 0x0000000000075980
0000000000057EBF jmp 0x0000000000057DB3
0000000000057EC4 mov 0x18(%rsp),%rdi
0000000000057EC9 lea 0x305CF0,%rax
0000000000057ED0 mov %rax,0x340(%rsp)
0000000000057ED8 movb $1,0x339(%rsp)
0000000000057EE0 lea 0x305D20,%rax
0000000000057EE7 mov %rax,0x348(%rsp)
0000000000057EEF movb $5,0x338(%rsp)
0000000000057EF7 add $8,%rdi
0000000000057EFB lea 0x338(%rsp),%rsi
0000000000057F03 mov $0x38,%edx
0000000000057F08 call 0x000000000002E4B8
0000000000057F0D mov 0x18(%rsp),%rax
0000000000057F12 movb $1,(%rax)
0000000000057F15 jmp 0x0000000000057DB3
0000000000057F1A lea 0x3A8(%rsp),%rdi
0000000000057F22 lea 0x3E8(%rsp),%rsi
0000000000057F2A call 0x0000000000078C40
0000000000057F2F movzbl 0x3A8(%rsp),%eax
0000000000057F37 test $1,%al
0000000000057F39 je 0x0000000000057F41
0000000000057F3B jmp 0x0000000000057F3D
0000000000057F3D jmp 0x0000000000057FBC
0000000000057F3F ud2
0000000000057F41 mov 0x10(%rsp),%rsi
0000000000057F46 mov 0x3A9(%rsp),%rax
0000000000057F4E mov %rax,0x498(%rsp)
0000000000057F56 mov 0x3B1(%rsp),%rax
0000000000057F5E mov %rax,0x4A0(%rsp)
0000000000057F66 mov 0x498(%rsp),%rax
0000000000057F6E mov %rax,0x398(%rsp)
0000000000057F76 mov 0x4A0(%rsp),%rax
0000000000057F7E mov %rax,0x3A0(%rsp)
0000000000057F86 mov 0x398(%rsp),%rax
0000000000057F8E mov %rax,0x388(%rsp)
0000000000057F96 mov 0x3A0(%rsp),%rax
0000000000057F9E mov %rax,0x390(%rsp)
0000000000057FA6 lea 0x4E8(%rsp),%rdi
0000000000057FAE lea 0x306260,%rdx
0000000000057FB5 call 0x00000000000314A0
0000000000057FBA jmp 0x0000000000058012
0000000000057FBC lea 0x3A8(%rsp),%rsi
0000000000057FC4 add $8,%rsi
0000000000057FC8 lea 0x428(%rsp),%rdi
0000000000057FD0 mov $0x38,%edx
0000000000057FD5 call 0x000000000002E4B8
0000000000057FDA lea 0x460(%rsp),%rdi
0000000000057FE2 lea 0x428(%rsp),%rsi
0000000000057FEA mov $0x38,%edx
0000000000057FEF call 0x000000000002E4B8
0000000000057FF4 mov 0x18(%rsp),%rdi
0000000000057FF9 lea 0x460(%rsp),%rsi
0000000000058001 lea 0x302F60,%rdx
0000000000058008 call 0x0000000000075980
000000000005800D jmp 0x0000000000057DB3
0000000000058012 lea 0x4A8(%rsp),%rdi
000000000005801A lea 0x4E8(%rsp),%rsi
0000000000058022 call 0x0000000000077B40
0000000000058027 movzbl 0x4A8(%rsp),%eax
000000000005802F test $1,%al
0000000000058031 je 0x0000000000058039
0000000000058033 jmp 0x0000000000058035
0000000000058035 jmp 0x000000000005805F
0000000000058037 ud2
0000000000058039 mov 0x10(%rsp),%rsi
000000000005803E mov 0x4A9(%rsp),%al
0000000000058045 mov %al,7(%rsp)
0000000000058049 lea 0x5D8(%rsp),%rdi
0000000000058051 lea 0x306610,%rdx
0000000000058058 call 0x00000000000314A0
000000000005805D jmp 0x00000000000580B5
000000000005805F lea 0x4A8(%rsp),%rsi
0000000000058067 add $8,%rsi
000000000005806B lea 0x528(%rsp),%rdi
0000000000058073 mov $0x38,%edx
0000000000058078 call 0x000000000002E4B8
000000000005807D lea 0x560(%rsp),%rdi
0000000000058085 lea 0x528(%rsp),%rsi
000000000005808D mov $0x38,%edx
0000000000058092 call 0x000000000002E4B8
0000000000058097 mov 0x18(%rsp),%rdi
000000000005809C lea 0x560(%rsp),%rsi
00000000000580A4 lea 0x302F78,%rdx
00000000000580AB call 0x0000000000075980
00000000000580B0 jmp 0x000000000005800D
00000000000580B5 lea 0x598(%rsp),%rdi
00000000000580BD lea 0x5D8(%rsp),%rsi
00000000000580C5 call 0x0000000000077B40
00000000000580CA movzbl 0x598(%rsp),%eax
00000000000580D2 test $1,%al
00000000000580D4 je 0x00000000000580DC
00000000000580D6 jmp 0x00000000000580D8
00000000000580D8 jmp 0x000000000005814C
00000000000580DA ud2
00000000000580DC mov 0x18(%rsp),%rax
00000000000580E1 mov 7(%rsp),%dl
00000000000580E5 mov 0x599(%rsp),%cl
00000000000580EC mov 0x388(%rsp),%rsi
00000000000580F4 mov %rsi,0x370(%rsp)
00000000000580FC mov 0x390(%rsp),%rsi
0000000000058104 mov %rsi,0x378(%rsp)
000000000005810C and $1,%dl
000000000005810F mov %dl,0x380(%rsp)
0000000000058116 and $1,%cl
0000000000058119 mov %cl,0x381(%rsp)
0000000000058120 mov 0x370(%rsp),%rcx
0000000000058128 mov %rcx,1(%rax)
000000000005812C mov 0x378(%rsp),%rcx
0000000000058134 mov %rcx,9(%rax)
0000000000058138 mov 0x380(%rsp),%cx
0000000000058140 mov %cx,0x11(%rax)
0000000000058144 movb $0,(%rax)
0000000000058147 jmp 0x0000000000057DB3
000000000005814C lea 0x598(%rsp),%rsi
0000000000058154 add $8,%rsi
0000000000058158 lea 0x618(%rsp),%rdi
0000000000058160 mov $0x38,%edx
0000000000058165 call 0x000000000002E4B8
000000000005816A lea 0x650(%rsp),%rdi
0000000000058172 lea 0x618(%rsp),%rsi
000000000005817A mov $0x38,%edx
000000000005817F call 0x000000000002E4B8
0000000000058184 mov 0x18(%rsp),%rdi
0000000000058189 lea 0x650(%rsp),%rsi
0000000000058191 lea 0x302F90,%rdx
0000000000058198 call 0x0000000000075980
000000000005819D jmp 0x00000000000580B0

 Function call queue at function 57c20: [4a970, 75980, 78c40]

Analyzing function at 4a970
000000000004A970 sub $0x428,%rsp
000000000004A977 mov %rsi,0x10(%rsp)
000000000004A97C mov %rdi,0x18(%rsp)
000000000004A981 mov %rdi,0x20(%rsp)
000000000004A986 lea 0x68(%rsp),%rdi
000000000004A98B call 0x0000000000060570
000000000004A990 lea 0x28(%rsp),%rdi
000000000004A995 lea 0x68(%rsp),%rsi
000000000004A99A call 0x00000000000792E0
000000000004A99F movzbl 0x28(%rsp),%eax
000000000004A9A4 test $1,%al
000000000004A9A6 je 0x000000000004A9AE
000000000004A9A8 jmp 0x000000000004A9AA
000000000004A9AA jmp 0x000000000004A9CA
000000000004A9AC ud2
000000000004A9AE mov 0x10(%rsp),%rsi
000000000004A9B3 mov 0x29(%rsp),%al
000000000004A9B7 mov %al,0xF(%rsp)
000000000004A9BB lea 0x158(%rsp),%rdi
000000000004A9C3 call 0x0000000000085080
000000000004A9C8 jmp 0x000000000004AA27
000000000004A9CA lea 0x28(%rsp),%rsi
000000000004A9CF add $8,%rsi
000000000004A9D3 lea 0xA8(%rsp),%rdi
000000000004A9DB mov $0x38,%edx
000000000004A9E0 call 0x000000000002E4B8
000000000004A9E5 lea 0xE0(%rsp),%rdi
000000000004A9ED lea 0xA8(%rsp),%rsi
000000000004A9F5 mov $0x38,%edx
000000000004A9FA call 0x000000000002E4B8
000000000004A9FF mov 0x18(%rsp),%rdi
000000000004AA04 lea 0xE0(%rsp),%rsi
000000000004AA0C lea 0x302A40,%rdx
000000000004AA13 call 0x0000000000075B50
000000000004AA18 jmp 0x000000000004AA1A
000000000004AA1A mov 0x20(%rsp),%rax
000000000004AA1F add $0x428,%rsp
000000000004AA26 ret
000000000004AA27 lea 0x118(%rsp),%rdi
000000000004AA2F lea 0x158(%rsp),%rsi
000000000004AA37 call 0x0000000000078810
000000000004AA3C movzbl 0x118(%rsp),%eax
000000000004AA44 test $1,%al
000000000004AA46 je 0x000000000004AA4E
000000000004AA48 jmp 0x000000000004AA4A
000000000004AA4A jmp 0x000000000004AA6D
000000000004AA4C ud2
000000000004AA4E mov 0x10(%rsp),%rsi
000000000004AA53 mov 0x119(%rsp),%al
000000000004AA5A mov %al,0xE(%rsp)
000000000004AA5E lea 0x248(%rsp),%rdi
000000000004AA66 call 0x00000000000851B0
000000000004AA6B jmp 0x000000000004AAC3
000000000004AA6D lea 0x118(%rsp),%rsi
000000000004AA75 add $8,%rsi
000000000004AA79 lea 0x198(%rsp),%rdi
000000000004AA81 mov $0x38,%edx
000000000004AA86 call 0x000000000002E4B8
000000000004AA8B lea 0x1D0(%rsp),%rdi
000000000004AA93 lea 0x198(%rsp),%rsi
000000000004AA9B mov $0x38,%edx
000000000004AAA0 call 0x000000000002E4B8
000000000004AAA5 mov 0x18(%rsp),%rdi
000000000004AAAA lea 0x1D0(%rsp),%rsi
000000000004AAB2 lea 0x302A58,%rdx
000000000004AAB9 call 0x0000000000075B50
000000000004AABE jmp 0x000000000004AA1A
000000000004AAC3 lea 0x208(%rsp),%rdi
000000000004AACB lea 0x248(%rsp),%rsi
000000000004AAD3 call 0x00000000000783E0
000000000004AAD8 movzbl 0x208(%rsp),%eax
000000000004AAE0 test $1,%al
000000000004AAE2 je 0x000000000004AAEA
000000000004AAE4 jmp 0x000000000004AAE6
000000000004AAE6 jmp 0x000000000004AB09
000000000004AAE8 ud2
000000000004AAEA mov 0x10(%rsp),%rsi
000000000004AAEF mov 0x209(%rsp),%al
000000000004AAF6 mov %al,0xD(%rsp)
000000000004AAFA lea 0x348(%rsp),%rdi
000000000004AB02 call 0x0000000000084930
000000000004AB07 jmp 0x000000000004AB5F
000000000004AB09 lea 0x208(%rsp),%rsi
000000000004AB11 add $8,%rsi
000000000004AB15 lea 0x288(%rsp),%rdi
000000000004AB1D mov $0x38,%edx
000000000004AB22 call 0x000000000002E4B8
000000000004AB27 lea 0x2C0(%rsp),%rdi
000000000004AB2F lea 0x288(%rsp),%rsi
000000000004AB37 mov $0x38,%edx
000000000004AB3C call 0x000000000002E4B8
000000000004AB41 mov 0x18(%rsp),%rdi
000000000004AB46 lea 0x2C0(%rsp),%rsi
000000000004AB4E lea 0x302A70,%rdx
000000000004AB55 call 0x0000000000075B50
000000000004AB5A jmp 0x000000000004AA1A
000000000004AB5F lea 0x308(%rsp),%rdi
000000000004AB67 lea 0x348(%rsp),%rsi
000000000004AB6F call 0x0000000000078A90
000000000004AB74 movzbl 0x308(%rsp),%eax
000000000004AB7C test $1,%al
000000000004AB7E je 0x000000000004AB89
000000000004AB80 jmp 0x000000000004AB82
000000000004AB82 jmp 0x000000000004AC8A
000000000004AB87 ud2
000000000004AB89 mov 0x18(%rsp),%rax
000000000004AB8E mov 0xD(%rsp),%cl
000000000004AB92 mov 0xF(%rsp),%dl
000000000004AB96 mov 0xE(%rsp),%sil
000000000004AB9B mov 0x309(%rsp),%rdi
000000000004ABA3 mov %rdi,0x3F8(%rsp)
000000000004ABAB mov 0x311(%rsp),%edi
000000000004ABB2 mov %edi,0x400(%rsp)
000000000004ABB9 mov 0x315(%rsp),%dil
000000000004ABC1 mov %dil,0x404(%rsp)
000000000004ABC9 mov 0x3F8(%rsp),%rdi
000000000004ABD1 mov %rdi,0x2F8(%rsp)
000000000004ABD9 mov 0x400(%rsp),%edi
000000000004ABE0 mov %edi,0x300(%rsp)
000000000004ABE7 mov 0x404(%rsp),%dil
000000000004ABEF mov %dil,0x304(%rsp)
000000000004ABF7 mov 0x2F8(%rsp),%rdi
000000000004ABFF mov %rdi,0x418(%rsp)
000000000004AC07 mov 0x300(%rsp),%edi
000000000004AC0E mov %edi,0x420(%rsp)
000000000004AC15 mov 0x304(%rsp),%dil
000000000004AC1D mov %dil,0x424(%rsp)
000000000004AC25 mov %sil,0x408(%rsp)
000000000004AC2D mov %dl,0x409(%rsp)
000000000004AC34 and $1,%cl
000000000004AC37 mov %cl,0x40A(%rsp)
000000000004AC3E mov 0x418(%rsp),%rcx
000000000004AC46 mov %rcx,0x40B(%rsp)
000000000004AC4E mov 0x420(%rsp),%ecx
000000000004AC55 mov %ecx,0x413(%rsp)
000000000004AC5C mov 0x424(%rsp),%cl
000000000004AC63 mov %cl,0x417(%rsp)
000000000004AC6A mov 0x408(%rsp),%rcx
000000000004AC72 mov %rcx,1(%rax)
000000000004AC76 mov 0x410(%rsp),%rcx
000000000004AC7E mov %rcx,9(%rax)
000000000004AC82 movb $0,(%rax)
000000000004AC85 jmp 0x000000000004AA1A
000000000004AC8A lea 0x308(%rsp),%rsi
000000000004AC92 add $8,%rsi
000000000004AC96 lea 0x388(%rsp),%rdi
000000000004AC9E mov $0x38,%edx
000000000004ACA3 call 0x000000000002E4B8
000000000004ACA8 lea 0x3C0(%rsp),%rdi
000000000004ACB0 lea 0x388(%rsp),%rsi
000000000004ACB8 mov $0x38,%edx
000000000004ACBD call 0x000000000002E4B8
000000000004ACC2 mov 0x18(%rsp),%rdi
000000000004ACC7 lea 0x3C0(%rsp),%rsi
000000000004ACCF lea 0x302A88,%rdx
000000000004ACD6 call 0x0000000000075B50
000000000004ACDB jmp 0x000000000004AA1A

 Function call queue at function 4a970: [60570, 792e0, 85080, 75b50, 78810, 851b0, 783e0, 84930, 78a90]

Analyzing function at 60570
0000000000060570 sub $0x1F8,%rsp
0000000000060577 mov %rdx,0x20(%rsp)
000000000006057C mov %rdi,0x28(%rsp)
0000000000060581 mov %rdi,0x30(%rsp)
0000000000060586 movb $0,0x1E7(%rsp)
000000000006058E lea 0xA0(%rsp),%rdi
0000000000060596 lea 0x3064C0,%rdx
000000000006059D call 0x00000000000314E0
00000000000605A2 lea 0x60(%rsp),%rdi
00000000000605A7 lea 0xA0(%rsp),%rsi
00000000000605AF call 0x0000000000077940
00000000000605B4 mov 0x60(%rsp),%rax
00000000000605B9 test %rax,%rax
00000000000605BC je 0x00000000000605C4
00000000000605BE jmp 0x00000000000605C0
00000000000605C0 jmp 0x00000000000605F1
00000000000605C2 ud2
00000000000605C4 mov 0x68(%rsp),%rcx
00000000000605C9 mov 0x70(%rsp),%rax
00000000000605CE mov %rcx,0x50(%rsp)
00000000000605D3 mov %rax,0x58(%rsp)
00000000000605D8 mov $1,%eax
00000000000605DD xor %ecx,%ecx
00000000000605DF cmpq $0,0x50(%rsp)
00000000000605E5 cmove %rcx,%rax
00000000000605E9 cmp $1,%rax
00000000000605ED je 0x000000000006064C
00000000000605EF jmp 0x0000000000060665
00000000000605F1 lea 0x60(%rsp),%rsi
00000000000605F6 add $8,%rsi
00000000000605FA lea 0xE0(%rsp),%rdi
0000000000060602 mov $0x38,%edx
0000000000060607 call 0x000000000002E4B8
000000000006060C lea 0x118(%rsp),%rdi
0000000000060614 lea 0xE0(%rsp),%rsi
000000000006061C mov $0x38,%edx
0000000000060621 call 0x000000000002E4B8
0000000000060626 mov 0x28(%rsp),%rdi
000000000006062B lea 0x118(%rsp),%rsi
0000000000060633 lea 0x3035B0,%rdx
000000000006063A call 0x0000000000075ED0
000000000006063F movb $0,0x1E7(%rsp)
0000000000060647 jmp 0x000000000006079E
000000000006064C mov 0x50(%rsp),%rsi
0000000000060651 mov 0x58(%rsp),%rdx
0000000000060656 lea 0x38(%rsp),%rdi
000000000006065B call 0x0000000000088E10
0000000000060660 jmp 0x00000000000607AB
0000000000060665 mov 0x20(%rsp),%rsi
000000000006066A mov 0x303540,%rdx
0000000000060671 mov 0x303548,%rcx
0000000000060678 lea 0x150(%rsp),%rdi
0000000000060680 call 0x0000000000041970
0000000000060685 mov $1,%eax
000000000006068A xor %ecx,%ecx
000000000006068C cmpq $0,0x150(%rsp)
0000000000060695 cmove %rcx,%rax
0000000000060699 cmp $1,%rax
000000000006069D jne 0x00000000000606C8
000000000006069F lea 0x150(%rsp),%rax
00000000000606A7 mov %rax,0x168(%rsp)
00000000000606AF mov 0x168(%rsp),%rdi
00000000000606B7 call 0x0000000000089060
00000000000606BC mov %rdx,0x10(%rsp)
00000000000606C1 mov %rax,0x18(%rsp)
00000000000606C6 jmp 0x0000000000060710
00000000000606C8 mov 0x28(%rsp),%rax
00000000000606CD movb $0,1(%rax)
00000000000606D1 movb $0,(%rax)
00000000000606D4 lea 0x150(%rsp),%rdi
00000000000606DC callq *0x3150B0
00000000000606E2 jmp 0x000000000006063F
00000000000606E7 lea 0xE3F90,%rax
00000000000606EE lea 0x150(%rsp),%rdi
00000000000606F6 call *%rax
00000000000606F8 jmp 0x0000000000060768
00000000000606FA mov %rax,%rcx
00000000000606FD mov %edx,%eax
00000000000606FF mov %rcx,0x1E8(%rsp)
0000000000060707 mov %eax,0x1F0(%rsp)
000000000006070E jmp 0x00000000000606E7
0000000000060710 mov 0x10(%rsp),%rsi
0000000000060715 mov 0x18(%rsp),%rdi
000000000006071A call 0x0000000000088EB0
000000000006071F mov %al,0xF(%rsp)
0000000000060723 jmp 0x0000000000060725
0000000000060725 mov 0xF(%rsp),%al
0000000000060729 xor $0xFF,%al
000000000006072B test $1,%al
000000000006072D jne 0x0000000000060731
000000000006072F jmp 0x00000000000606C8
0000000000060731 mov 0x168(%rsp),%rsi
0000000000060739 lea 0x38(%rsp),%rdi
000000000006073E call 0x0000000000089020
0000000000060743 jmp 0x0000000000060745
0000000000060745 movb $1,0x1E7(%rsp)
000000000006074D lea 0x150(%rsp),%rdi
0000000000060755 callq *0x3150B0
000000000006075B jmp 0x0000000000060777
000000000006075D lea 0x2FBE0,%rax
0000000000060764 call *%rax
0000000000060766 ud2
0000000000060768 mov 0x1E8(%rsp),%rdi
0000000000060770 call 0x000000000002E3D0
0000000000060775 ud2
0000000000060777 lea 0x38(%rsp),%rax
000000000006077C mov %rax,0x170(%rsp)
0000000000060784 lea 0x3035C8,%rsi
000000000006078B lea 0x170(%rsp),%rdi
0000000000060793 call 0x0000000000032270
0000000000060798 mov %al,0xE(%rsp)
000000000006079C jmp 0x00000000000607DB
000000000006079E mov 0x30(%rsp),%rax
00000000000607A3 add $0x1F8,%rsp
00000000000607AA ret
00000000000607AB movb $1,0x1E7(%rsp)
00000000000607B3 jmp 0x0000000000060777
00000000000607B5 lea 0xC6200,%rax
00000000000607BC lea 0x38(%rsp),%rdi
00000000000607C1 call *%rax
00000000000607C3 jmp 0x0000000000060768
00000000000607C5 mov %rax,%rcx
00000000000607C8 mov %edx,%eax
00000000000607CA mov %rcx,0x1E8(%rsp)
00000000000607D2 mov %eax,0x1F0(%rsp)
00000000000607D9 jmp 0x00000000000607B5
00000000000607DB mov 0xE(%rsp),%al
00000000000607DF test $1,%al
00000000000607E1 jne 0x000000000006080C
00000000000607E3 jmp 0x00000000000607E5
00000000000607E5 lea 0x38(%rsp),%rax
00000000000607EA mov %rax,0x178(%rsp)
00000000000607F2 lea 0x3035D8,%rsi
00000000000607F9 lea 0x178(%rsp),%rdi
0000000000060801 call 0x0000000000032270
0000000000060806 mov %al,0xD(%rsp)
000000000006080A jmp 0x000000000006082B
000000000006080C mov 0x28(%rsp),%rax
0000000000060811 movb $0,1(%rax)
0000000000060815 movb $0,(%rax)
0000000000060818 testb $1,0x1E7(%rsp)
0000000000060820 jne 0x0000000000060976
0000000000060826 jmp 0x0000000000060969
000000000006082B mov 0xD(%rsp),%al
000000000006082F test $1,%al
0000000000060831 jne 0x000000000006085C
0000000000060833 jmp 0x0000000000060835
0000000000060835 lea 0x38(%rsp),%rax
000000000006083A mov %rax,0x180(%rsp)
0000000000060842 lea 0x3035E8,%rsi
0000000000060849 lea 0x180(%rsp),%rdi
0000000000060851 call 0x0000000000032270
0000000000060856 mov %al,0xC(%rsp)
000000000006085A jmp 0x000000000006086A
000000000006085C mov 0x28(%rsp),%rax
0000000000060861 movb $1,1(%rax)
0000000000060865 movb $0,(%rax)
0000000000060868 jmp 0x0000000000060818
000000000006086A mov 0xC(%rsp),%al
000000000006086E test $1,%al
0000000000060870 jne 0x000000000006089B
0000000000060872 jmp 0x0000000000060874
0000000000060874 lea 0x38(%rsp),%rax
0000000000060879 mov %rax,0x188(%rsp)
0000000000060881 lea 0x3035F8,%rsi
0000000000060888 lea 0x188(%rsp),%rdi
0000000000060890 call 0x0000000000032270
0000000000060895 mov %al,0xB(%rsp)
0000000000060899 jmp 0x00000000000608AC
000000000006089B mov 0x28(%rsp),%rax
00000000000608A0 movb $2,1(%rax)
00000000000608A4 movb $0,(%rax)
00000000000608A7 jmp 0x0000000000060818
00000000000608AC mov 0xB(%rsp),%al
00000000000608B0 test $1,%al
00000000000608B2 jne 0x0000000000060958
00000000000608B8 jmp 0x00000000000608BA
00000000000608BA mov 0x28(%rsp),%rdi
00000000000608BF movb $0,0x1E7(%rsp)
00000000000608C7 mov 0x38(%rsp),%rax
00000000000608CC mov %rax,0x1C8(%rsp)
00000000000608D4 mov 0x40(%rsp),%rax
00000000000608D9 mov %rax,0x1D0(%rsp)
00000000000608E1 mov 0x48(%rsp),%rax
00000000000608E6 mov %rax,0x1D8(%rsp)
00000000000608EE lea 0x3064C0,%rax
00000000000608F5 mov %rax,0x198(%rsp)
00000000000608FD mov 0x1C8(%rsp),%rax
0000000000060905 mov %rax,0x1A0(%rsp)
000000000006090D mov 0x1D0(%rsp),%rax
0000000000060915 mov %rax,0x1A8(%rsp)
000000000006091D mov 0x1D8(%rsp),%rax
0000000000060925 mov %rax,0x1B0(%rsp)
000000000006092D movb $1,0x190(%rsp)
0000000000060935 add $8,%rdi
0000000000060939 lea 0x190(%rsp),%rsi
0000000000060941 mov $0x38,%edx
0000000000060946 call 0x000000000002E4B8
000000000006094B mov 0x28(%rsp),%rax
0000000000060950 movb $1,(%rax)
0000000000060953 jmp 0x0000000000060818
0000000000060958 mov 0x28(%rsp),%rax
000000000006095D movb $3,1(%rax)
0000000000060961 movb $0,(%rax)
0000000000060964 jmp 0x0000000000060818
0000000000060969 movb $0,0x1E7(%rsp)
0000000000060971 jmp 0x000000000006079E
0000000000060976 lea 0x38(%rsp),%rdi
000000000006097B callq *0x315E60
0000000000060981 jmp 0x0000000000060969

 Function call queue at function 60570: [314e0, 77940, 75ed0, 89020, 32270]

Analyzing function at 314e0
00000000000314E0 sub $0x18,%rsp
00000000000314E4 mov %rdi,%rax
00000000000314E7 mov %rax,8(%rsp)
00000000000314EC mov %rdx,0x10(%rsp)
00000000000314F1 mov 0x10(%rsp),%rdx
00000000000314F6 call 0x00000000000A5980
00000000000314FB mov 8(%rsp),%rax
0000000000031500 add $0x18,%rsp
0000000000031504 ret

 Function call queue at function 314e0: [a5980]

Analyzing function at a5980
00000000000A5980 sub $0x1A8,%rsp
00000000000A5987 mov %rsi,0xB8(%rsp)
00000000000A598F mov %rdi,%rax
00000000000A5992 mov 0xB8(%rsp),%rdi
00000000000A599A mov %rax,0xC0(%rsp)
00000000000A59A2 mov %rax,0xC8(%rsp)
00000000000A59AA mov %rdx,0xD8(%rsp)
00000000000A59B2 call 0x0000000000031580
00000000000A59B7 mov %al,0xD7(%rsp)
00000000000A59BE jmp 0x00000000000A59DB
00000000000A59C0 jmp 0x00000000000A5D68
00000000000A59C5 mov %rax,%rcx
00000000000A59C8 mov %edx,%eax
00000000000A59CA mov %rcx,0x198(%rsp)
00000000000A59D2 mov %eax,0x1A0(%rsp)
00000000000A59D9 jmp 0x00000000000A59C0
00000000000A59DB mov 0xD7(%rsp),%al
00000000000A59E2 test $1,%al
00000000000A59E4 jne 0x00000000000A5A0A
00000000000A59E6 jmp 0x00000000000A59E8
00000000000A59E8 mov 0xB8(%rsp),%rdi
00000000000A59F0 call 0x00000000000963E0
00000000000A59F5 mov %rdx,0xA8(%rsp)
00000000000A59FD mov %rax,0xB0(%rsp)
00000000000A5A05 jmp 0x00000000000A5CAA
00000000000A5A0A mov 0xB8(%rsp),%rdi
00000000000A5A12 call 0x00000000000963E0
00000000000A5A17 mov %rdx,0x98(%rsp)
00000000000A5A1F mov %rax,0xA0(%rsp)
00000000000A5A27 jmp 0x00000000000A5A29
00000000000A5A29 mov 0x98(%rsp),%rsi
00000000000A5A31 mov 0xA0(%rsp),%rdi
00000000000A5A39 call 0x00000000000A2A50
00000000000A5A3E mov %rdx,0x88(%rsp)
00000000000A5A46 mov %rax,0x90(%rsp)
00000000000A5A4E jmp 0x00000000000A5A50
00000000000A5A50 mov 0x88(%rsp),%rdx
00000000000A5A58 mov 0x90(%rsp),%rsi
00000000000A5A60 lea 0xD8(%rsp),%rax
00000000000A5A68 mov %rax,0x110(%rsp)
00000000000A5A70 mov 0x110(%rsp),%rcx
00000000000A5A78 lea 0xF8(%rsp),%rdi
00000000000A5A80 call 0x0000000000051950
00000000000A5A85 jmp 0x00000000000A5A87
00000000000A5A87 lea 0xE0(%rsp),%rdi
00000000000A5A8F lea 0xF8(%rsp),%rsi
00000000000A5A97 call 0x000000000005A9D0
00000000000A5A9C jmp 0x00000000000A5A9E
00000000000A5A9E lea 0xE0(%rsp),%rdi
00000000000A5AA6 call 0x0000000000094110
00000000000A5AAB mov %rax,0x80(%rsp)
00000000000A5AB3 jmp 0x00000000000A5ADD
00000000000A5AB5 lea 0xE0(%rsp),%rdi
00000000000A5ABD call 0x000000000009BC70
00000000000A5AC2 jmp 0x00000000000A59C0
00000000000A5AC7 mov %rax,%rcx
00000000000A5ACA mov %edx,%eax
00000000000A5ACC mov %rcx,0x198(%rsp)
00000000000A5AD4 mov %eax,0x1A0(%rsp)
00000000000A5ADB jmp 0x00000000000A5AB5
00000000000A5ADD mov 0x80(%rsp),%rax
00000000000A5AE5 cmp $2,%rax
00000000000A5AE9 jb 0x00000000000A5B0D
00000000000A5AEB lea 0x3057E0,%rdx
00000000000A5AF2 xor %eax,%eax
00000000000A5AF4 mov %eax,%esi
00000000000A5AF6 lea 0xE0(%rsp),%rdi
00000000000A5AFE call 0x0000000000096910
00000000000A5B03 mov %rax,0x78(%rsp)
00000000000A5B08 jmp 0x00000000000A5B96
00000000000A5B0D lea 0xE0(%rsp),%rdi
00000000000A5B15 call 0x0000000000096260
00000000000A5B1A mov %rdx,0x68(%rsp)
00000000000A5B1F mov %rax,0x70(%rsp)
00000000000A5B24 jmp 0x00000000000A5B26
00000000000A5B26 mov 0x68(%rsp),%rsi
00000000000A5B2B mov 0x70(%rsp),%rdi
00000000000A5B30 call 0x00000000000A2AB0
00000000000A5B35 mov %rax,0x60(%rsp)
00000000000A5B3A jmp 0x00000000000A5B3C
00000000000A5B3C mov 0x60(%rsp),%rdi
00000000000A5B41 call 0x000000000006EC00
00000000000A5B46 mov %rax,0x58(%rsp)
00000000000A5B4B jmp 0x00000000000A5B4D
00000000000A5B4D mov 0x58(%rsp),%rdi
00000000000A5B52 call 0x000000000006D120
00000000000A5B57 mov %rdx,0x48(%rsp)
00000000000A5B5C mov %rax,0x50(%rsp)
00000000000A5B61 jmp 0x00000000000A5B63
00000000000A5B63 mov 0xC0(%rsp),%rax
00000000000A5B6B mov 0x48(%rsp),%rcx
00000000000A5B70 mov 0x50(%rsp),%rdx
00000000000A5B75 mov %rdx,8(%rax)
00000000000A5B79 mov %rcx,0x10(%rax)
00000000000A5B7D movq $0,(%rax)
00000000000A5B84 lea 0xE0(%rsp),%rdi
00000000000A5B8C call 0x000000000009BC70
00000000000A5B91 jmp 0x00000000000A5CA5
00000000000A5B96 mov 0x78(%rsp),%rax
00000000000A5B9B mov (%rax),%rax
00000000000A5B9E mov 0x10(%rax),%rcx
00000000000A5BA2 mov %rcx,0x160(%rsp)
00000000000A5BAA movups (%rax),%xmm0
00000000000A5BAD movaps %xmm0,0x150(%rsp)
00000000000A5BB5 lea 0x3057F8,%rdx
00000000000A5BBC lea 0xE0(%rsp),%rdi
00000000000A5BC4 mov $1,%esi
00000000000A5BC9 call 0x0000000000096910
00000000000A5BCE mov %rax,0x40(%rsp)
00000000000A5BD3 jmp 0x00000000000A5BD5
00000000000A5BD5 mov 0xC0(%rsp),%rdi
00000000000A5BDD mov 0x40(%rsp),%rax
00000000000A5BE2 mov (%rax),%rax
00000000000A5BE5 mov (%rax),%rcx
00000000000A5BE8 mov %rcx,0x168(%rsp)
00000000000A5BF0 mov 8(%rax),%rcx
00000000000A5BF4 mov %rcx,0x170(%rsp)
00000000000A5BFC mov 0x10(%rax),%rax
00000000000A5C00 mov %rax,0x178(%rsp)
00000000000A5C08 mov 0x150(%rsp),%rax
00000000000A5C10 mov %rax,0x120(%rsp)
00000000000A5C18 mov 0x158(%rsp),%rax
00000000000A5C20 mov %rax,0x128(%rsp)
00000000000A5C28 mov 0x160(%rsp),%rax
00000000000A5C30 mov %rax,0x130(%rsp)
00000000000A5C38 mov 0x168(%rsp),%rax
00000000000A5C40 mov %rax,0x138(%rsp)
00000000000A5C48 mov 0x170(%rsp),%rax
00000000000A5C50 mov %rax,0x140(%rsp)
00000000000A5C58 mov 0x178(%rsp),%rax
00000000000A5C60 mov %rax,0x148(%rsp)
00000000000A5C68 movb $3,0x118(%rsp)
00000000000A5C70 add $8,%rdi
00000000000A5C74 lea 0x118(%rsp),%rsi
00000000000A5C7C mov $0x38,%edx
00000000000A5C81 call 0x000000000002E4B8
00000000000A5C86 mov 0xC0(%rsp),%rax
00000000000A5C8E movq $1,(%rax)
00000000000A5C95 jmp 0x00000000000A5B84
00000000000A5C9A lea 0x2FBE0,%rax
00000000000A5CA1 call *%rax
00000000000A5CA3 ud2
00000000000A5CA5 jmp 0x00000000000A5D77
00000000000A5CAA mov 0xA8(%rsp),%rsi
00000000000A5CB2 mov 0xB0(%rsp),%rdi
00000000000A5CBA call 0x00000000000A2A50
00000000000A5CBF mov %rdx,0x30(%rsp)
00000000000A5CC4 mov %rax,0x38(%rsp)
00000000000A5CC9 jmp 0x00000000000A5CCB
00000000000A5CCB mov 0x30(%rsp),%rsi
00000000000A5CD0 mov 0x38(%rsp),%rdi
00000000000A5CD5 call 0x0000000000050FD0
00000000000A5CDA mov %rdx,0x20(%rsp)
00000000000A5CDF mov %rax,0x28(%rsp)
00000000000A5CE4 jmp 0x00000000000A5CE6
00000000000A5CE6 mov 0x20(%rsp),%rax
00000000000A5CEB mov 0x28(%rsp),%rcx
00000000000A5CF0 mov %rcx,0x180(%rsp)
00000000000A5CF8 mov %rax,0x188(%rsp)
00000000000A5D00 lea 0xD8(%rsp),%rax
00000000000A5D08 mov %rax,0x190(%rsp)
00000000000A5D10 mov 0x190(%rsp),%rsi
00000000000A5D18 lea 0x180(%rsp),%rdi
00000000000A5D20 call 0x00000000000892D0
00000000000A5D25 mov %rax,0x18(%rsp)
00000000000A5D2A jmp 0x00000000000A5D2C
00000000000A5D2C mov 0x18(%rsp),%rdi
00000000000A5D31 call 0x000000000006CB00
00000000000A5D36 mov %rdx,8(%rsp)
00000000000A5D3B mov %rax,0x10(%rsp)
00000000000A5D40 jmp 0x00000000000A5D42
00000000000A5D42 mov 0xC0(%rsp),%rax
00000000000A5D4A mov 8(%rsp),%rcx
00000000000A5D4F mov 0x10(%rsp),%rdx
00000000000A5D54 mov %rdx,8(%rax)
00000000000A5D58 mov %rcx,0x10(%rax)
00000000000A5D5C movq $0,(%rax)
00000000000A5D63 jmp 0x00000000000A5CA5
00000000000A5D68 mov 0x198(%rsp),%rdi
00000000000A5D70 call 0x000000000002E3D0
00000000000A5D75 ud2
00000000000A5D77 mov 0xC8(%rsp),%rax
00000000000A5D7F add $0x1A8,%rsp
00000000000A5D86 ret

 Function call queue at function a5980: [51950, 5a9d0, 6ec00, 6d120, 892d0, 6cb00]

Analyzing function at 51950
0000000000051950 push %rax
0000000000051951 mov %rdi,%rax
0000000000051954 mov %rax,(%rsp)
0000000000051958 call 0x000000000005ACD0
000000000005195D mov (%rsp),%rax
0000000000051961 pop %rcx
0000000000051962 ret

 Function call queue at function 51950: []

Analyzing function at 5a9d0
000000000005A9D0 sub $0x28,%rsp
000000000005A9D4 mov %rdi,%rax
000000000005A9D7 mov %rax,8(%rsp)
000000000005A9DC mov (%rsi),%rax
000000000005A9DF mov %rax,0x10(%rsp)
000000000005A9E4 mov 8(%rsi),%rax
000000000005A9E8 mov %rax,0x18(%rsp)
000000000005A9ED mov 0x10(%rsi),%rax
000000000005A9F1 mov %rax,0x20(%rsp)
000000000005A9F6 lea 0x10(%rsp),%rsi
000000000005A9FB call 0x0000000000098020
000000000005AA00 mov 8(%rsp),%rax
000000000005AA05 add $0x28,%rsp
000000000005AA09 ret

 Function call queue at function 5a9d0: [98020]

Analyzing function at 98020
0000000000098020 sub $0x48,%rsp
0000000000098024 mov %rdi,8(%rsp)
0000000000098029 mov %rdi,0x10(%rsp)
000000000009802E mov (%rsi),%rax
0000000000098031 mov %rax,0x30(%rsp)
0000000000098036 mov 8(%rsi),%rax
000000000009803A mov %rax,0x38(%rsp)
000000000009803F mov 0x10(%rsi),%rax
0000000000098043 mov %rax,0x40(%rsp)
0000000000098048 lea 0x18(%rsp),%rdi
000000000009804D lea 0x30(%rsp),%rsi
0000000000098052 call 0x000000000005AD90
0000000000098057 mov 8(%rsp),%rdi
000000000009805C lea 0x18(%rsp),%rsi
0000000000098061 call 0x0000000000099050
0000000000098066 mov 0x10(%rsp),%rax
000000000009806B add $0x48,%rsp
000000000009806F ret

 Function call queue at function 98020: [5ad90, 99050]

Analyzing function at 5ad90
000000000005AD90 mov %rdi,%rax
000000000005AD93 mov (%rsi),%rcx
000000000005AD96 mov %rcx,(%rdi)
000000000005AD99 mov 8(%rsi),%rcx
000000000005AD9D mov %rcx,8(%rdi)
000000000005ADA1 mov 0x10(%rsi),%rcx
000000000005ADA5 mov %rcx,0x10(%rdi)
000000000005ADA9 ret

 Function call queue at function 5ad90: []

Analyzing function at 99050
0000000000099050 sub $0x28,%rsp
0000000000099054 mov %rdi,%rax
0000000000099057 mov %rax,8(%rsp)
000000000009905C mov (%rsi),%rax
000000000009905F mov %rax,0x10(%rsp)
0000000000099064 mov 8(%rsi),%rax
0000000000099068 mov %rax,0x18(%rsp)
000000000009906D mov 0x10(%rsi),%rax
0000000000099071 mov %rax,0x20(%rsp)
0000000000099076 lea 0x10(%rsp),%rsi
000000000009907B call 0x000000000008F8C0
0000000000099080 mov 8(%rsp),%rax
0000000000099085 add $0x28,%rsp
0000000000099089 ret

 Function call queue at function 99050: [8f8c0]

Analyzing function at 8f8c0
000000000008F8C0 sub $0xC8,%rsp
000000000008F8C7 mov %rsi,0x20(%rsp)
000000000008F8CC mov %rdi,%rax
000000000008F8CF mov 0x20(%rsp),%rdi
000000000008F8D4 mov %rax,0x28(%rsp)
000000000008F8D9 mov %rax,0x30(%rsp)
000000000008F8DE movb $1,0xAF(%rsp)
000000000008F8E6 call 0x000000000005A580
000000000008F8EB mov %rax,0x38(%rsp)
000000000008F8F0 jmp 0x000000000008F91B
000000000008F8F2 testb $1,0xAF(%rsp)
000000000008F8FA jne 0x000000000008FB08
000000000008F900 jmp 0x000000000008FAF9
000000000008F905 mov %rax,%rcx
000000000008F908 mov %edx,%eax
000000000008F90A mov %rcx,0xB0(%rsp)
000000000008F912 mov %eax,0xB8(%rsp)
000000000008F919 jmp 0x000000000008F8F2
000000000008F91B mov 0x38(%rsp),%rax
000000000008F920 mov %rax,0x58(%rsp)
000000000008F925 mov 0x58(%rsp),%rax
000000000008F92A test %rax,%rax
000000000008F92D setne %al
000000000008F930 movzbl %al,%eax
000000000008F933 je 0x000000000008F93B
000000000008F935 jmp 0x000000000008F937
000000000008F937 jmp 0x000000000008F94A
000000000008F939 ud2
000000000008F93B mov 0x28(%rsp),%rdi
000000000008F940 call 0x0000000000091480
000000000008F945 jmp 0x000000000008FAF7
000000000008F94A mov 0x20(%rsp),%rsi
000000000008F94F movb $1,0xAE(%rsp)
000000000008F957 mov 0x58(%rsp),%rax
000000000008F95C mov %rax,0x18(%rsp)
000000000008F961 lea 0x60(%rsp),%rdi
000000000008F966 call 0x000000000005A950
000000000008F96B jmp 0x000000000008F996
000000000008F96D testb $1,0xAE(%rsp)
000000000008F975 jne 0x000000000008FAA1
000000000008F97B jmp 0x000000000008F8F2
000000000008F980 mov %rax,%rcx
000000000008F983 mov %edx,%eax
000000000008F985 mov %rcx,0xB0(%rsp)
000000000008F98D mov %eax,0xB8(%rsp)
000000000008F994 jmp 0x000000000008F96D
000000000008F996 mov 0x60(%rsp),%rax
000000000008F99B inc %rax
000000000008F99E mov $0xFFFFFFFFFFFFFFFF,%rcx
000000000008F9A5 cmove %rcx,%rax
000000000008F9A9 mov %rax,0xC0(%rsp)
000000000008F9B1 mov 0xC0(%rsp),%rax
000000000008F9B9 mov %rax,0x10(%rsp)
000000000008F9BE mov 0x10(%rsp),%rsi
000000000008F9C3 lea 0xEFD80,%rax
000000000008F9CA mov $4,%edi
000000000008F9CF call *%rax
000000000008F9D1 mov %rax,8(%rsp)
000000000008F9D6 jmp 0x000000000008F9D8
000000000008F9D8 mov 8(%rsp),%rsi
000000000008F9DD lea 0x78(%rsp),%rdi
000000000008F9E2 call 0x00000000000911C0
000000000008F9E7 jmp 0x000000000008F9E9
000000000008F9E9 lea 0x78(%rsp),%rdi
000000000008F9EE call 0x0000000000091580
000000000008F9F3 mov %rax,(%rsp)
000000000008F9F7 jmp 0x000000000008FA1E
000000000008F9F9 lea 0x78(%rsp),%rdi
000000000008F9FE call 0x000000000009BC70
000000000008FA03 jmp 0x000000000008F96D
000000000008FA08 mov %rax,%rcx
000000000008FA0B mov %edx,%eax
000000000008FA0D mov %rcx,0xB0(%rsp)
000000000008FA15 mov %eax,0xB8(%rsp)
000000000008FA1C jmp 0x000000000008F9F9
000000000008FA1E mov 0x18(%rsp),%rsi
000000000008FA23 mov (%rsp),%rdi
000000000008FA27 movb $0,0xAE(%rsp)
000000000008FA2F call 0x0000000000068940
000000000008FA34 jmp 0x000000000008FA36
000000000008FA36 lea 0x78(%rsp),%rdi
000000000008FA3B mov $1,%esi
000000000008FA40 call 0x00000000000957C0
000000000008FA45 jmp 0x000000000008FA47
000000000008FA47 mov 0x20(%rsp),%rax
000000000008FA4C mov 0x88(%rsp),%rcx
000000000008FA54 mov %rcx,0x50(%rsp)
000000000008FA59 movups 0x78(%rsp),%xmm0
000000000008FA5E movaps %xmm0,0x40(%rsp)
000000000008FA63 movb $0,0xAF(%rsp)
000000000008FA6B mov 0x10(%rax),%rcx
000000000008FA6F mov %rcx,0xA0(%rsp)
000000000008FA77 movups (%rax),%xmm0
000000000008FA7A movaps %xmm0,0x90(%rsp)
000000000008FA82 lea 0x40(%rsp),%rdi
000000000008FA87 lea 0x90(%rsp),%rsi
000000000008FA8F call 0x0000000000098830
000000000008FA94 jmp 0x000000000008FACB
000000000008FA96 lea 0x2FBE0,%rax
000000000008FA9D call *%rax
000000000008FA9F ud2
000000000008FAA1 jmp 0x000000000008F8F2
000000000008FAA6 lea 0x40(%rsp),%rdi
000000000008FAAB call 0x000000000009BC70
000000000008FAB0 jmp 0x000000000008F8F2
000000000008FAB5 mov %rax,%rcx
000000000008FAB8 mov %edx,%eax
000000000008FABA mov %rcx,0xB0(%rsp)
000000000008FAC2 mov %eax,0xB8(%rsp)
000000000008FAC9 jmp 0x000000000008FAA6
000000000008FACB mov 0x28(%rsp),%rax
000000000008FAD0 mov 0x40(%rsp),%rcx
000000000008FAD5 mov %rcx,(%rax)
000000000008FAD8 mov 0x48(%rsp),%rcx
000000000008FADD mov %rcx,8(%rax)
000000000008FAE1 mov 0x50(%rsp),%rcx
000000000008FAE6 mov %rcx,0x10(%rax)
000000000008FAEA mov 0x30(%rsp),%rax
000000000008FAEF add $0xC8,%rsp
000000000008FAF6 ret
000000000008FAF7 jmp 0x000000000008FAEA

 Function call queue at function 8f8c0: [5a580, 5a950, 98830]

Analyzing function at 5a580
000000000005A580 push %rax
000000000005A581 mov %rdi,%rsi
000000000005A584 mov %rsi,%rdi
000000000005A587 add $0x10,%rsi
000000000005A58B call 0x00000000000533D0
000000000005A590 mov %rax,(%rsp)
000000000005A594 mov (%rsp),%rax
000000000005A598 pop %rcx
000000000005A599 ret

 Function call queue at function 5a580: [533d0]

Analyzing function at 533d0
00000000000533D0 sub $0x58,%rsp
00000000000533D4 mov %rdi,0x18(%rsp)
00000000000533D9 mov %rsi,0x20(%rsp)
00000000000533DE mov 0x18(%rsp),%rdi
00000000000533E3 call 0x0000000000053910
00000000000533E8 mov %rax,0x10(%rsp)
00000000000533ED jmp 0x0000000000053401
00000000000533EF jmp 0x0000000000053468
00000000000533F1 mov %rax,%rcx
00000000000533F4 mov %edx,%eax
00000000000533F6 mov %rcx,0x48(%rsp)
00000000000533FB mov %eax,0x50(%rsp)
00000000000533FF jmp 0x00000000000533EF
0000000000053401 mov 0x10(%rsp),%rax
0000000000053406 mov %rax,0x30(%rsp)
000000000005340B mov $1,%eax
0000000000053410 xor %ecx,%ecx
0000000000053412 cmpq $0,0x30(%rsp)
0000000000053418 cmove %rcx,%rax
000000000005341C cmp $1,%rax
0000000000053420 jne 0x000000000005344B
0000000000053422 mov 0x30(%rsp),%rax
0000000000053427 mov %rax,0x38(%rsp)
000000000005342C lea 0x38(%rsp),%rax
0000000000053431 mov %rax,0x40(%rsp)
0000000000053436 mov 0x40(%rsp),%rsi
000000000005343B lea 0x20(%rsp),%rdi
0000000000053440 call 0x00000000000A2770
0000000000053445 mov %al,0xF(%rsp)
0000000000053449 jmp 0x000000000005345E
000000000005344B movq $0,0x28(%rsp)
0000000000053454 mov 0x28(%rsp),%rax
0000000000053459 add $0x58,%rsp
000000000005345D ret
000000000005345E mov 0xF(%rsp),%al
0000000000053462 test $1,%al
0000000000053464 jne 0x0000000000053479
0000000000053466 jmp 0x0000000000053474
0000000000053468 mov 0x48(%rsp),%rdi
000000000005346D call 0x000000000002E3D0
0000000000053472 ud2
0000000000053474 jmp 0x00000000000533DE
0000000000053479 mov 0x38(%rsp),%rax
000000000005347E mov %rax,0x28(%rsp)
0000000000053483 jmp 0x0000000000053454

 Function call queue at function 533d0: [a2770]

Analyzing function at a2770
00000000000A2770 sub $0x18,%rsp
00000000000A2774 mov %rsi,0x10(%rsp)
00000000000A2779 mov (%rdi),%rdi
00000000000A277C mov 0x10(%rsp),%rsi
00000000000A2781 call 0x00000000000A6190
00000000000A2786 mov %al,0xF(%rsp)
00000000000A278A mov 0xF(%rsp),%al
00000000000A278E and $1,%al
00000000000A2790 movzbl %al,%eax
00000000000A2793 add $0x18,%rsp
00000000000A2797 ret

 Function call queue at function a2770: [a6190]

Analyzing function at a6190
00000000000A6190 sub $0x28,%rsp
00000000000A6194 mov %rdi,8(%rsp)
00000000000A6199 mov %rsi,0x10(%rsp)
00000000000A619E mov (%rsi),%rdi
00000000000A61A1 add $0x18,%rdi
00000000000A61A5 call 0x000000000006E670
00000000000A61AA mov %al,0x1E(%rsp)
00000000000A61AE mov 0x1E(%rsp),%al
00000000000A61B2 test $1,%al
00000000000A61B4 jne 0x00000000000A61BF
00000000000A61B6 jmp 0x00000000000A61B8
00000000000A61B8 movb $0,0x1F(%rsp)
00000000000A61BD jmp 0x00000000000A61EC
00000000000A61BF mov 0x10(%rsp),%rax
00000000000A61C4 mov 8(%rsp),%rcx
00000000000A61C9 mov (%rcx),%rdi
00000000000A61CC mov (%rax),%rax
00000000000A61CF mov %rax,0x20(%rsp)
00000000000A61D4 mov 0x20(%rsp),%rsi
00000000000A61D9 call 0x00000000000A5950
00000000000A61DE mov %al,7(%rsp)
00000000000A61E2 mov 7(%rsp),%al
00000000000A61E6 and $1,%al
00000000000A61E8 mov %al,0x1F(%rsp)
00000000000A61EC mov 0x1F(%rsp),%al
00000000000A61F0 and $1,%al
00000000000A61F2 movzbl %al,%eax
00000000000A61F5 add $0x28,%rsp
00000000000A61F9 ret

 Function call queue at function a6190: [6e670, a5950]

Analyzing function at 6e670
000000000006E670 sub $1,%rsp
000000000006E674 mov $1,%eax
000000000006E679 xor %ecx,%ecx
000000000006E67B cmpq $0,(%rdi)
000000000006E67F cmove %rcx,%rax
000000000006E683 cmp $1,%rax
000000000006E687 jne 0x000000000006E68F
000000000006E689 movb $1,(%rsp)
000000000006E68D jmp 0x000000000006E693
000000000006E68F movb $0,(%rsp)
000000000006E693 mov (%rsp),%al
000000000006E696 and $1,%al
000000000006E698 movzbl %al,%eax
000000000006E69B add $1,%rsp
000000000006E69F ret

 Function call queue at function 6e670: []

Analyzing function at a5950
00000000000A5950 sub $0x18,%rsp
00000000000A5954 mov %rsi,8(%rsp)
00000000000A5959 mov %rdi,%rax
00000000000A595C mov 8(%rsp),%rdi
00000000000A5961 mov (%rax),%rsi
00000000000A5964 call 0x0000000000030FD0
00000000000A5969 mov %al,0x17(%rsp)
00000000000A596D mov 0x17(%rsp),%al
00000000000A5971 and $1,%al
00000000000A5973 movzbl %al,%eax
00000000000A5976 add $0x18,%rsp
00000000000A597A ret

 Function call queue at function a5950: []

Analyzing function at 5a950
000000000005A950 sub $0x28,%rsp
000000000005A954 mov %rdi,(%rsp)
000000000005A958 mov %rdi,8(%rsp)
000000000005A95D lea 0x10(%rsp),%rdi
000000000005A962 call 0x00000000000548D0
000000000005A967 mov 8(%rsp),%rax
000000000005A96C mov (%rsp),%rcx
000000000005A970 mov 0x18(%rsp),%rsi
000000000005A975 mov 0x20(%rsp),%rdx
000000000005A97A movq $0,(%rcx)
000000000005A981 mov %rsi,8(%rcx)
000000000005A985 mov %rdx,0x10(%rcx)
000000000005A989 add $0x28,%rsp
000000000005A98D ret

 Function call queue at function 5a950: []

Analyzing function at 98830
0000000000098830 sub $0x18,%rsp
0000000000098834 mov (%rsi),%rax
0000000000098837 mov %rax,(%rsp)
000000000009883B mov 8(%rsi),%rax
000000000009883F mov %rax,8(%rsp)
0000000000098844 mov 0x10(%rsi),%rax
0000000000098848 mov %rax,0x10(%rsp)
000000000009884D mov %rsp,%rsi
0000000000098850 call 0x0000000000093290
0000000000098855 add $0x18,%rsp
0000000000098859 ret

 Function call queue at function 98830: [93290]

Analyzing function at 93290
0000000000093290 sub $0x98,%rsp
0000000000093297 mov %rdi,0x40(%rsp)
000000000009329C mov %rsi,0x48(%rsp)
00000000000932A1 mov 0x48(%rsp),%rdi
00000000000932A6 call 0x000000000005A580
00000000000932AB mov %rax,0x38(%rsp)
00000000000932B0 jmp 0x00000000000932CA
00000000000932B2 jmp 0x0000000000093411
00000000000932B7 mov %rax,%rcx
00000000000932BA mov %edx,%eax
00000000000932BC mov %rcx,0x78(%rsp)
00000000000932C1 mov %eax,0x80(%rsp)
00000000000932C8 jmp 0x00000000000932B2
00000000000932CA mov 0x38(%rsp),%rax
00000000000932CF mov %rax,0x50(%rsp)
00000000000932D4 mov $1,%eax
00000000000932D9 xor %ecx,%ecx
00000000000932DB cmpq $0,0x50(%rsp)
00000000000932E1 cmove %rcx,%rax
00000000000932E5 cmp $1,%rax
00000000000932E9 jne 0x000000000009330B
00000000000932EB mov 0x40(%rsp),%rdi
00000000000932F0 movb $1,0x77(%rsp)
00000000000932F5 mov 0x50(%rsp),%rax
00000000000932FA mov %rax,0x28(%rsp)
00000000000932FF call 0x0000000000094110
0000000000093304 mov %rax,0x30(%rsp)
0000000000093309 jmp 0x0000000000093337
000000000009330B jmp 0x000000000009330D
000000000009330D jmp 0x000000000009330F
000000000009330F add $0x98,%rsp
0000000000093316 ret
0000000000093317 testb $1,0x77(%rsp)
000000000009331C jne 0x000000000009340C
0000000000093322 jmp 0x00000000000932B2
0000000000093324 mov %rax,%rcx
0000000000093327 mov %edx,%eax
0000000000093329 mov %rcx,0x78(%rsp)
000000000009332E mov %eax,0x80(%rsp)
0000000000093335 jmp 0x0000000000093317
0000000000093337 mov 0x40(%rsp),%rdi
000000000009333C call 0x0000000000095860
0000000000093341 mov %rax,0x20(%rsp)
0000000000093346 jmp 0x0000000000093348
0000000000093348 mov 0x30(%rsp),%rax
000000000009334D mov 0x20(%rsp),%rcx
0000000000093352 cmp %rcx,%rax
0000000000093355 je 0x0000000000093368
0000000000093357 mov 0x40(%rsp),%rdi
000000000009335C call 0x0000000000091580
0000000000093361 mov %rax,0x18(%rsp)
0000000000093366 jmp 0x00000000000933B4
0000000000093368 mov 0x48(%rsp),%rsi
000000000009336D lea 0x58(%rsp),%rdi
0000000000093372 call 0x000000000005A950
0000000000093377 jmp 0x0000000000093379
0000000000093379 mov 0x58(%rsp),%rax
000000000009337E inc %rax
0000000000093381 mov $0xFFFFFFFFFFFFFFFF,%rcx
0000000000093388 cmove %rcx,%rax
000000000009338C mov %rax,0x88(%rsp)
0000000000093394 mov 0x88(%rsp),%rax
000000000009339C mov %rax,0x10(%rsp)
00000000000933A1 mov 0x10(%rsp),%rsi
00000000000933A6 mov 0x40(%rsp),%rdi
00000000000933AB call 0x0000000000095720
00000000000933B0 jmp 0x00000000000933B2
00000000000933B2 jmp 0x0000000000093357
00000000000933B4 mov 0x18(%rsp),%rax
00000000000933B9 mov 0x30(%rsp),%rcx
00000000000933BE shl $3,%rcx
00000000000933C2 add %rcx,%rax
00000000000933C5 mov %rax,0x90(%rsp)
00000000000933CD mov 0x90(%rsp),%rax
00000000000933D5 mov %rax,8(%rsp)
00000000000933DA jmp 0x00000000000933DC
00000000000933DC mov 0x28(%rsp),%rsi
00000000000933E1 mov 8(%rsp),%rdi
00000000000933E6 movb $0,0x77(%rsp)
00000000000933EB call 0x0000000000068940
00000000000933F0 jmp 0x00000000000933F2
00000000000933F2 mov 0x40(%rsp),%rdi
00000000000933F7 mov 0x30(%rsp),%rsi
00000000000933FC add $1,%rsi
0000000000093400 call 0x00000000000957C0
0000000000093405 jmp 0x0000000000093407
0000000000093407 jmp 0x00000000000932A1

 Function call queue at function 93290: []

Analyzing function at 6ec00
000000000006EC00 sub $0x10,%rsp
000000000006EC04 mov %rdi,(%rsp)
000000000006EC08 mov (%rsp),%rax
000000000006EC0C test %rax,%rax
000000000006EC0F setne %al
000000000006EC12 movzbl %al,%eax
000000000006EC15 je 0x000000000006EC1D
000000000006EC17 jmp 0x000000000006EC19
000000000006EC19 jmp 0x000000000006EC28
000000000006EC1B ud2
000000000006EC1D movq $0,8(%rsp)
000000000006EC26 jmp 0x000000000006EC34
000000000006EC28 mov (%rsp),%rax
000000000006EC2C mov (%rax),%rax
000000000006EC2F mov %rax,8(%rsp)
000000000006EC34 mov 8(%rsp),%rax
000000000006EC39 add $0x10,%rsp
000000000006EC3D ret

 Function call queue at function 6ec00: []

Analyzing function at 6d120
000000000006D120 sub $0x38,%rsp
000000000006D124 mov %rdi,0x10(%rsp)
000000000006D129 movb $1,0x37(%rsp)
000000000006D12E mov 0x10(%rsp),%rax
000000000006D133 test %rax,%rax
000000000006D136 setne %al
000000000006D139 movzbl %al,%eax
000000000006D13C je 0x000000000006D144
000000000006D13E jmp 0x000000000006D140
000000000006D140 jmp 0x000000000006D14F
000000000006D142 ud2
000000000006D144 movq $0,0x18(%rsp)
000000000006D14D jmp 0x000000000006D184
000000000006D14F mov 0x10(%rsp),%rax
000000000006D154 movb $0,0x37(%rsp)
000000000006D159 mov %rax,0x28(%rsp)
000000000006D15E mov 0x28(%rsp),%rdi
000000000006D163 call 0x00000000000A6270
000000000006D168 mov %rax,(%rsp)
000000000006D16C mov %rdx,8(%rsp)
000000000006D171 mov 8(%rsp),%rax
000000000006D176 mov (%rsp),%rcx
000000000006D17A mov %rcx,0x18(%rsp)
000000000006D17F mov %rax,0x20(%rsp)
000000000006D184 testb $1,0x37(%rsp)
000000000006D189 jne 0x000000000006D19A
000000000006D18B mov 0x18(%rsp),%rax
000000000006D190 mov 0x20(%rsp),%rdx
000000000006D195 add $0x38,%rsp
000000000006D199 ret
000000000006D19A jmp 0x000000000006D18B

 Function call queue at function 6d120: [a6270]

Analyzing function at a6270
00000000000A6270 sub $0x18,%rsp
00000000000A6274 mov %rdi,%rax
00000000000A6277 mov 0x18(%rax),%rdi
00000000000A627B mov 0x20(%rax),%rsi
00000000000A627F lea 0x305810,%rdx
00000000000A6286 callq *0x310A18
00000000000A628C mov %rax,8(%rsp)
00000000000A6291 mov %rdx,0x10(%rsp)
00000000000A6296 mov 0x10(%rsp),%rdx
00000000000A629B mov 8(%rsp),%rax
00000000000A62A0 add $0x18,%rsp
00000000000A62A4 ret

 Function call queue at function a6270: []

Analyzing function at 892d0
00000000000892D0 push %rax
00000000000892D1 call 0x00000000000504B0
00000000000892D6 mov %rax,(%rsp)
00000000000892DA mov (%rsp),%rax
00000000000892DE pop %rcx
00000000000892DF ret

 Function call queue at function 892d0: []

Analyzing function at 6cb00
000000000006CB00 sub $0x38,%rsp
000000000006CB04 mov %rdi,0x10(%rsp)
000000000006CB09 movb $1,0x37(%rsp)
000000000006CB0E mov 0x10(%rsp),%rax
000000000006CB13 test %rax,%rax
000000000006CB16 setne %al
000000000006CB19 movzbl %al,%eax
000000000006CB1C je 0x000000000006CB24
000000000006CB1E jmp 0x000000000006CB20
000000000006CB20 jmp 0x000000000006CB2F
000000000006CB22 ud2
000000000006CB24 movq $0,0x18(%rsp)
000000000006CB2D jmp 0x000000000006CB64
000000000006CB2F mov 0x10(%rsp),%rax
000000000006CB34 movb $0,0x37(%rsp)
000000000006CB39 mov %rax,0x28(%rsp)
000000000006CB3E mov 0x28(%rsp),%rdi
000000000006CB43 call 0x00000000000A63D0
000000000006CB48 mov %rax,(%rsp)
000000000006CB4C mov %rdx,8(%rsp)
000000000006CB51 mov 8(%rsp),%rax
000000000006CB56 mov (%rsp),%rcx
000000000006CB5A mov %rcx,0x18(%rsp)
000000000006CB5F mov %rax,0x20(%rsp)
000000000006CB64 testb $1,0x37(%rsp)
000000000006CB69 jne 0x000000000006CB7A
000000000006CB6B mov 0x18(%rsp),%rax
000000000006CB70 mov 0x20(%rsp),%rdx
000000000006CB75 add $0x38,%rsp
000000000006CB79 ret
000000000006CB7A jmp 0x000000000006CB6B

 Function call queue at function 6cb00: [a63d0]

Analyzing function at a63d0
00000000000A63D0 sub $0x18,%rsp
00000000000A63D4 mov %rdi,%rax
00000000000A63D7 mov 0x18(%rax),%rdi
00000000000A63DB mov 0x20(%rax),%rsi
00000000000A63DF lea 0x305828,%rdx
00000000000A63E6 callq *0x310A18
00000000000A63EC mov %rax,8(%rsp)
00000000000A63F1 mov %rdx,0x10(%rsp)
00000000000A63F6 mov 0x10(%rsp),%rdx
00000000000A63FB mov 8(%rsp),%rax
00000000000A6400 add $0x18,%rsp
00000000000A6404 ret

 Function call queue at function a63d0: []

Analyzing function at 77940
0000000000077940 sub $0xC8,%rsp
0000000000077947 mov %rsi,8(%rsp)
000000000007794C mov %rdi,0x10(%rsp)
0000000000077951 mov %rdi,0x18(%rsp)
0000000000077956 mov (%rsi),%rax
0000000000077959 test %rax,%rax
000000000007795C je 0x0000000000077964
000000000007795E jmp 0x0000000000077960
0000000000077960 jmp 0x0000000000077987
0000000000077962 ud2
0000000000077964 mov 0x10(%rsp),%rax
0000000000077969 mov 8(%rsp),%rcx
000000000007796E mov 8(%rcx),%rdx
0000000000077972 mov 0x10(%rcx),%rcx
0000000000077976 mov %rdx,8(%rax)
000000000007797A mov %rcx,0x10(%rax)
000000000007797E movq $0,(%rax)
0000000000077985 jmp 0x00000000000779F1
0000000000077987 mov 8(%rsp),%rsi
000000000007798C add $8,%rsi
0000000000077990 lea 0x20(%rsp),%rdi
0000000000077995 mov $0x38,%edx
000000000007799A call 0x000000000002E4B8
000000000007799F lea 0x90(%rsp),%rdi
00000000000779A7 lea 0x20(%rsp),%rsi
00000000000779AC mov $0x38,%edx
00000000000779B1 call 0x000000000002E4B8
00000000000779B6 lea 0x58(%rsp),%rdi
00000000000779BB lea 0x90(%rsp),%rsi
00000000000779C3 mov $0x38,%edx
00000000000779C8 call 0x000000000002E4B8
00000000000779CD mov 0x10(%rsp),%rdi
00000000000779D2 add $8,%rdi
00000000000779D6 lea 0x58(%rsp),%rsi
00000000000779DB mov $0x38,%edx
00000000000779E0 call 0x000000000002E4B8
00000000000779E5 mov 0x10(%rsp),%rax
00000000000779EA movq $1,(%rax)
00000000000779F1 mov 0x18(%rsp),%rax
00000000000779F6 add $0xC8,%rsp
00000000000779FD ret

 Function call queue at function 77940: []

Analyzing function at 75ed0
0000000000075ED0 sub $0xB8,%rsp
0000000000075ED7 mov %rdi,(%rsp)
0000000000075EDB mov %rdi,8(%rsp)
0000000000075EE0 lea 0x10(%rsp),%rdi
0000000000075EE5 mov $0x38,%edx
0000000000075EEA call 0x000000000002E4B8
0000000000075EEF lea 0x80(%rsp),%rdi
0000000000075EF7 lea 0x10(%rsp),%rsi
0000000000075EFC mov $0x38,%edx
0000000000075F01 call 0x000000000002E4B8
0000000000075F06 lea 0x48(%rsp),%rdi
0000000000075F0B lea 0x80(%rsp),%rsi
0000000000075F13 call 0x0000000000089330
0000000000075F18 mov (%rsp),%rdi
0000000000075F1C add $8,%rdi
0000000000075F20 lea 0x48(%rsp),%rsi
0000000000075F25 mov $0x38,%edx
0000000000075F2A call 0x000000000002E4B8
0000000000075F2F mov (%rsp),%rcx
0000000000075F33 mov 8(%rsp),%rax
0000000000075F38 movb $1,(%rcx)
0000000000075F3B add $0xB8,%rsp
0000000000075F42 ret

 Function call queue at function 75ed0: []

Analyzing function at 89020
0000000000089020 sub $0x28,%rsp
0000000000089024 mov %rdi,(%rsp)
0000000000089028 mov %rdi,8(%rsp)
000000000008902D lea 0x10(%rsp),%rdi
0000000000089032 call 0x0000000000062510
0000000000089037 mov 8(%rsp),%rax
000000000008903C mov (%rsp),%rcx
0000000000089040 mov 0x10(%rsp),%rdx
0000000000089045 mov %rdx,(%rcx)
0000000000089048 mov 0x18(%rsp),%rdx
000000000008904D mov %rdx,8(%rcx)
0000000000089051 mov 0x20(%rsp),%rdx
0000000000089056 mov %rdx,0x10(%rcx)
000000000008905A add $0x28,%rsp
000000000008905E ret

 Function call queue at function 89020: [62510]

Analyzing function at 62510
0000000000062510 sub $0x28,%rsp
0000000000062514 mov %rdi,(%rsp)
0000000000062518 mov %rdi,8(%rsp)
000000000006251D lea 0x10(%rsp),%rdi
0000000000062522 call 0x0000000000095F80
0000000000062527 mov 8(%rsp),%rax
000000000006252C mov (%rsp),%rcx
0000000000062530 mov 0x10(%rsp),%rdx
0000000000062535 mov %rdx,(%rcx)
0000000000062538 mov 0x18(%rsp),%rdx
000000000006253D mov %rdx,8(%rcx)
0000000000062541 mov 0x20(%rsp),%rdx
0000000000062546 mov %rdx,0x10(%rcx)
000000000006254A add $0x28,%rsp
000000000006254E ret

 Function call queue at function 62510: [95f80]

Analyzing function at 95f80
0000000000095F80 sub $0x48,%rsp
0000000000095F84 mov %rsi,0x10(%rsp)
0000000000095F89 mov %rdi,%rax
0000000000095F8C mov 0x10(%rsp),%rdi
0000000000095F91 mov %rax,0x18(%rsp)
0000000000095F96 mov %rax,0x20(%rsp)
0000000000095F9B callq *0x316220
0000000000095FA1 mov %rax,0x28(%rsp)
0000000000095FA6 mov 0x28(%rsp),%rdi
0000000000095FAB movb $1,0x37(%rsp)
0000000000095FB0 call 0x00000000000344B0
0000000000095FB5 mov 0x10(%rsp),%rdi
0000000000095FBA lea 0xEF400,%rax
0000000000095FC1 call *%rax
0000000000095FC3 mov %rdx,(%rsp)
0000000000095FC7 mov %rax,8(%rsp)
0000000000095FCC jmp 0x0000000000095FE7
0000000000095FCE testb $1,0x37(%rsp)
0000000000095FD3 jne 0x000000000009601B
0000000000095FD5 jmp 0x000000000009600F
0000000000095FD7 mov %rax,%rcx
0000000000095FDA mov %edx,%eax
0000000000095FDC mov %rcx,0x38(%rsp)
0000000000095FE1 mov %eax,0x40(%rsp)
0000000000095FE5 jmp 0x0000000000095FCE
0000000000095FE7 mov (%rsp),%rdx
0000000000095FEB mov 8(%rsp),%rsi
0000000000095FF0 mov 0x18(%rsp),%rdi
0000000000095FF5 movb $0,0x37(%rsp)
0000000000095FFA lea 0xEDE20,%rax
0000000000096001 call *%rax
0000000000096003 jmp 0x0000000000096005
0000000000096005 mov 0x20(%rsp),%rax
000000000009600A add $0x48,%rsp
000000000009600E ret

 Function call queue at function 95f80: [344b0]

Analyzing function at 344b0
00000000000344B0 ret

 Function call queue at function 344b0: []

Analyzing function at 32270
0000000000032270 push %rax
0000000000032271 mov %rsi,%rax
0000000000032274 mov (%rdi),%rdi
0000000000032277 mov (%rax),%rsi
000000000003227A mov 8(%rax),%rdx
000000000003227E call 0x0000000000089100
0000000000032283 mov %al,7(%rsp)
0000000000032287 mov 7(%rsp),%al
000000000003228B and $1,%al
000000000003228D movzbl %al,%eax
0000000000032290 pop %rcx
0000000000032291 ret

 Function call queue at function 32270: [89100]

Analyzing function at 89100
0000000000089100 sub $0x38,%rsp
0000000000089104 mov %rsi,0x18(%rsp)
0000000000089109 mov %rdx,0x20(%rsp)
000000000008910E call 0x0000000000089060
0000000000089113 mov %rax,8(%rsp)
0000000000089118 mov %rdx,0x10(%rsp)
000000000008911D mov 0x10(%rsp),%rax
0000000000089122 mov 8(%rsp),%rcx
0000000000089127 mov %rcx,0x28(%rsp)
000000000008912C mov %rax,0x30(%rsp)
0000000000089131 lea 0x28(%rsp),%rdi
0000000000089136 lea 0x18(%rsp),%rsi
000000000008913B call 0x0000000000032210
0000000000089140 mov %al,7(%rsp)
0000000000089144 mov 7(%rsp),%al
0000000000089148 and $1,%al
000000000008914A movzbl %al,%eax
000000000008914D add $0x38,%rsp
0000000000089151 ret

 Function call queue at function 89100: []

Analyzing function at 792e0
00000000000792E0 sub $0xC8,%rsp
00000000000792E7 mov %rsi,8(%rsp)
00000000000792EC mov %rdi,0x10(%rsp)
00000000000792F1 mov %rdi,0x18(%rsp)
00000000000792F6 movzbl (%rsi),%eax
00000000000792F9 test $1,%al
00000000000792FB je 0x0000000000079303
00000000000792FD jmp 0x00000000000792FF
00000000000792FF jmp 0x0000000000079318
0000000000079301 ud2
0000000000079303 mov 0x10(%rsp),%rax
0000000000079308 mov 8(%rsp),%rcx
000000000007930D mov 1(%rcx),%cl
0000000000079310 mov %cl,1(%rax)
0000000000079313 movb $0,(%rax)
0000000000079316 jmp 0x000000000007937E
0000000000079318 mov 8(%rsp),%rsi
000000000007931D add $8,%rsi
0000000000079321 lea 0x20(%rsp),%rdi
0000000000079326 mov $0x38,%edx
000000000007932B call 0x000000000002E4B8
0000000000079330 lea 0x90(%rsp),%rdi
0000000000079338 lea 0x20(%rsp),%rsi
000000000007933D mov $0x38,%edx
0000000000079342 call 0x000000000002E4B8
0000000000079347 lea 0x58(%rsp),%rdi
000000000007934C lea 0x90(%rsp),%rsi
0000000000079354 mov $0x38,%edx
0000000000079359 call 0x000000000002E4B8
000000000007935E mov 0x10(%rsp),%rdi
0000000000079363 add $8,%rdi
0000000000079367 lea 0x58(%rsp),%rsi
000000000007936C mov $0x38,%edx
0000000000079371 call 0x000000000002E4B8
0000000000079376 mov 0x10(%rsp),%rax
000000000007937B movb $1,(%rax)
000000000007937E mov 0x18(%rsp),%rax
0000000000079383 add $0xC8,%rsp
000000000007938A ret

 Function call queue at function 792e0: []

Analyzing function at 85080
0000000000085080 sub $0x118,%rsp
0000000000085087 mov %rdi,8(%rsp)
000000000008508C mov %rdi,0x10(%rsp)
0000000000085091 lea 0x60(%rsp),%rdi
0000000000085096 call 0x00000000000A4810
000000000008509B lea 0x20(%rsp),%rdi
00000000000850A0 lea 0x60(%rsp),%rsi
00000000000850A5 call 0x00000000000788C0
00000000000850AA mov 0x20(%rsp),%rax
00000000000850AF test %rax,%rax
00000000000850B2 je 0x00000000000850BA
00000000000850B4 jmp 0x00000000000850B6
00000000000850B6 jmp 0x00000000000850DD
00000000000850B8 ud2
00000000000850BA mov 0x28(%rsp),%rax
00000000000850BF mov %rax,0x18(%rsp)
00000000000850C4 mov $1,%eax
00000000000850C9 xor %ecx,%ecx
00000000000850CB cmpq $0,0x18(%rsp)
00000000000850D1 cmove %rcx,%rax
00000000000850D5 cmp $1,%rax
00000000000850D9 je 0x000000000008513A
00000000000850DB jmp 0x0000000000085151
00000000000850DD lea 0x20(%rsp),%rsi
00000000000850E2 add $8,%rsi
00000000000850E6 lea 0xA0(%rsp),%rdi
00000000000850EE mov $0x38,%edx
00000000000850F3 call 0x000000000002E4B8
00000000000850F8 lea 0xD8(%rsp),%rdi
0000000000085100 lea 0xA0(%rsp),%rsi
0000000000085108 mov $0x38,%edx
000000000008510D call 0x000000000002E4B8
0000000000085112 mov 8(%rsp),%rdi
0000000000085117 lea 0xD8(%rsp),%rsi
000000000008511F lea 0x303F58,%rdx
0000000000085126 call 0x0000000000076560
000000000008512B jmp 0x000000000008512D
000000000008512D mov 0x10(%rsp),%rax
0000000000085132 add $0x118,%rsp
0000000000085139 ret
000000000008513A mov 0x18(%rsp),%rdi
000000000008513F lea 0x3061A0,%rsi
0000000000085146 call 0x0000000000030FD0
000000000008514B mov %al,7(%rsp)
000000000008514F jmp 0x000000000008515B
0000000000085151 movb $0,0x117(%rsp)
0000000000085159 jmp 0x0000000000085184
000000000008515B mov 7(%rsp),%al
000000000008515F test $1,%al
0000000000085161 jne 0x000000000008517C
0000000000085163 jmp 0x0000000000085165
0000000000085165 mov 0x18(%rsp),%rdi
000000000008516A lea 0x3061D0,%rsi
0000000000085171 call 0x0000000000030FD0
0000000000085176 mov %al,6(%rsp)
000000000008517A jmp 0x0000000000085198
000000000008517C movb $1,0x117(%rsp)
0000000000085184 mov 8(%rsp),%rax
0000000000085189 mov 0x117(%rsp),%cl
0000000000085190 mov %cl,1(%rax)
0000000000085193 movb $0,(%rax)
0000000000085196 jmp 0x000000000008512D
0000000000085198 mov 6(%rsp),%al
000000000008519C test $1,%al
000000000008519E jne 0x00000000000851A2
00000000000851A0 jmp 0x0000000000085151
00000000000851A2 movb $2,0x117(%rsp)
00000000000851AA jmp 0x0000000000085184

 Function call queue at function 85080: [a4810, 788c0, 76560]

Analyzing function at a4810
00000000000A4810 sub $0x148,%rsp
00000000000A4817 mov %rsi,0x68(%rsp)
00000000000A481C mov %rdi,%rax
00000000000A481F mov 0x68(%rsp),%rdi
00000000000A4824 mov %rax,0x70(%rsp)
00000000000A4829 mov %rax,0x78(%rsp)
00000000000A482E movb $0,0x137(%rsp)
00000000000A4836 movb $1,0x137(%rsp)
00000000000A483E call 0x0000000000031580
00000000000A4843 mov %al,0x87(%rsp)
00000000000A484A jmp 0x00000000000A4875
00000000000A484C testb $1,0x137(%rsp)
00000000000A4854 jne 0x00000000000A4B1F
00000000000A485A jmp 0x00000000000A4B10
00000000000A485F mov %rax,%rcx
00000000000A4862 mov %edx,%eax
00000000000A4864 mov %rcx,0x138(%rsp)
00000000000A486C mov %eax,0x140(%rsp)
00000000000A4873 jmp 0x00000000000A484C
00000000000A4875 mov 0x87(%rsp),%al
00000000000A487C test $1,%al
00000000000A487E jne 0x00000000000A489E
00000000000A4880 jmp 0x00000000000A4882
00000000000A4882 mov 0x68(%rsp),%rdi
00000000000A4887 movb $0,0x137(%rsp)
00000000000A488F call 0x00000000000A53C0
00000000000A4894 mov %rax,0x60(%rsp)
00000000000A4899 jmp 0x00000000000A4AF9
00000000000A489E mov 0x68(%rsp),%rdi
00000000000A48A3 call 0x00000000000963E0
00000000000A48A8 mov %rdx,0x50(%rsp)
00000000000A48AD mov %rax,0x58(%rsp)
00000000000A48B2 jmp 0x00000000000A48B4
00000000000A48B4 mov 0x50(%rsp),%rsi
00000000000A48B9 mov 0x58(%rsp),%rdi
00000000000A48BE call 0x00000000000A2A50
00000000000A48C3 mov %rdx,0x40(%rsp)
00000000000A48C8 mov %rax,0x48(%rsp)
00000000000A48CD jmp 0x00000000000A48CF
00000000000A48CF mov 0x40(%rsp),%rdx
00000000000A48D4 mov 0x48(%rsp),%rsi
00000000000A48D9 lea 0x88(%rsp),%rax
00000000000A48E1 mov %rax,0xC0(%rsp)
00000000000A48E9 mov 0xC0(%rsp),%rcx
00000000000A48F1 lea 0xA8(%rsp),%rdi
00000000000A48F9 call 0x0000000000051930
00000000000A48FE jmp 0x00000000000A4900
00000000000A4900 lea 0x90(%rsp),%rdi
00000000000A4908 lea 0xA8(%rsp),%rsi
00000000000A4910 call 0x000000000005AA50
00000000000A4915 jmp 0x00000000000A4917
00000000000A4917 lea 0x90(%rsp),%rdi
00000000000A491F call 0x0000000000094110
00000000000A4924 mov %rax,0x38(%rsp)
00000000000A4929 jmp 0x00000000000A4953
00000000000A492B lea 0x90(%rsp),%rdi
00000000000A4933 call 0x000000000009BC70
00000000000A4938 jmp 0x00000000000A484C
00000000000A493D mov %rax,%rcx
00000000000A4940 mov %edx,%eax
00000000000A4942 mov %rcx,0x138(%rsp)
00000000000A494A mov %eax,0x140(%rsp)
00000000000A4951 jmp 0x00000000000A492B
00000000000A4953 mov 0x38(%rsp),%rax
00000000000A4958 cmp $2,%rax
00000000000A495C jb 0x00000000000A497D
00000000000A495E lea 0x3057B0,%rdx
00000000000A4965 xor %eax,%eax
00000000000A4967 mov %eax,%esi
00000000000A4969 lea 0x90(%rsp),%rdi
00000000000A4971 call 0x0000000000096910
00000000000A4976 mov %rax,0x30(%rsp)
00000000000A497B jmp 0x00000000000A49E4
00000000000A497D lea 0x90(%rsp),%rdi
00000000000A4985 call 0x0000000000096260
00000000000A498A mov %rdx,0x20(%rsp)
00000000000A498F mov %rax,0x28(%rsp)
00000000000A4994 jmp 0x00000000000A4996
00000000000A4996 mov 0x20(%rsp),%rsi
00000000000A499B mov 0x28(%rsp),%rdi
00000000000A49A0 call 0x00000000000A2AB0
00000000000A49A5 mov %rax,0x18(%rsp)
00000000000A49AA jmp 0x00000000000A49AC
00000000000A49AC mov 0x18(%rsp),%rdi
00000000000A49B1 call 0x000000000006D0B0
00000000000A49B6 mov %rax,0x10(%rsp)
00000000000A49BB jmp 0x00000000000A49BD
00000000000A49BD mov 0x70(%rsp),%rax
00000000000A49C2 mov 0x10(%rsp),%rcx
00000000000A49C7 mov %rcx,8(%rax)
00000000000A49CB movq $0,(%rax)
00000000000A49D2 lea 0x90(%rsp),%rdi
00000000000A49DA call 0x000000000009BC70
00000000000A49DF jmp 0x00000000000A4AED
00000000000A49E4 mov 0x30(%rsp),%rax
00000000000A49E9 mov (%rax),%rax
00000000000A49EC mov 0x10(%rax),%rcx
00000000000A49F0 mov %rcx,0x110(%rsp)
00000000000A49F8 movups (%rax),%xmm0
00000000000A49FB movaps %xmm0,0x100(%rsp)
00000000000A4A03 lea 0x3057C8,%rdx
00000000000A4A0A lea 0x90(%rsp),%rdi
00000000000A4A12 mov $1,%esi
00000000000A4A17 call 0x0000000000096910
00000000000A4A1C mov %rax,8(%rsp)
00000000000A4A21 jmp 0x00000000000A4A23
00000000000A4A23 mov 0x70(%rsp),%rdi
00000000000A4A28 mov 8(%rsp),%rax
00000000000A4A2D mov (%rax),%rax
00000000000A4A30 mov (%rax),%rcx
00000000000A4A33 mov %rcx,0x118(%rsp)
00000000000A4A3B mov 8(%rax),%rcx
00000000000A4A3F mov %rcx,0x120(%rsp)
00000000000A4A47 mov 0x10(%rax),%rax
00000000000A4A4B mov %rax,0x128(%rsp)
00000000000A4A53 mov 0x100(%rsp),%rax
00000000000A4A5B mov %rax,0xD0(%rsp)
00000000000A4A63 mov 0x108(%rsp),%rax
00000000000A4A6B mov %rax,0xD8(%rsp)
00000000000A4A73 mov 0x110(%rsp),%rax
00000000000A4A7B mov %rax,0xE0(%rsp)
00000000000A4A83 mov 0x118(%rsp),%rax
00000000000A4A8B mov %rax,0xE8(%rsp)
00000000000A4A93 mov 0x120(%rsp),%rax
00000000000A4A9B mov %rax,0xF0(%rsp)
00000000000A4AA3 mov 0x128(%rsp),%rax
00000000000A4AAB mov %rax,0xF8(%rsp)
00000000000A4AB3 movb $3,0xC8(%rsp)
00000000000A4ABB add $8,%rdi
00000000000A4ABF lea 0xC8(%rsp),%rsi
00000000000A4AC7 mov $0x38,%edx
00000000000A4ACC call 0x000000000002E4B8
00000000000A4AD1 mov 0x70(%rsp),%rax
00000000000A4AD6 movq $1,(%rax)
00000000000A4ADD jmp 0x00000000000A49D2
00000000000A4AE2 lea 0x2FBE0,%rax
00000000000A4AE9 call *%rax
00000000000A4AEB ud2
00000000000A4AED testb $1,0x137(%rsp)
00000000000A4AF5 jne 0x00000000000A4B2E
00000000000A4AF7 jmp 0x00000000000A4B21
00000000000A4AF9 mov 0x70(%rsp),%rax
00000000000A4AFE mov 0x60(%rsp),%rcx
00000000000A4B03 mov %rcx,8(%rax)
00000000000A4B07 movq $0,(%rax)
00000000000A4B0E jmp 0x00000000000A4AED
00000000000A4B10 mov 0x138(%rsp),%rdi
00000000000A4B18 call 0x000000000002E3D0
00000000000A4B1D ud2
00000000000A4B1F jmp 0x00000000000A4B10
00000000000A4B21 mov 0x78(%rsp),%rax
00000000000A4B26 add $0x148,%rsp
00000000000A4B2D ret
00000000000A4B2E jmp 0x00000000000A4B21

 Function call queue at function a4810: [a53c0, 51930, 5aa50, 6d0b0]

Analyzing function at a53c0
00000000000A53C0 sub $0x78,%rsp
00000000000A53C4 call 0x00000000000963E0
00000000000A53C9 mov %rdx,0x38(%rsp)
00000000000A53CE mov %rax,0x40(%rsp)
00000000000A53D3 jmp 0x00000000000A53EA
00000000000A53D5 jmp 0x00000000000A5467
00000000000A53DA mov %rax,%rcx
00000000000A53DD mov %edx,%eax
00000000000A53DF mov %rcx,0x68(%rsp)
00000000000A53E4 mov %eax,0x70(%rsp)
00000000000A53E8 jmp 0x00000000000A53D5
00000000000A53EA mov 0x38(%rsp),%rsi
00000000000A53EF mov 0x40(%rsp),%rdi
00000000000A53F4 call 0x00000000000A2A50
00000000000A53F9 mov %rdx,0x28(%rsp)
00000000000A53FE mov %rax,0x30(%rsp)
00000000000A5403 jmp 0x00000000000A5405
00000000000A5405 mov 0x28(%rsp),%rsi
00000000000A540A mov 0x30(%rsp),%rdi
00000000000A540F call 0x0000000000050FD0
00000000000A5414 mov %rdx,0x18(%rsp)
00000000000A5419 mov %rax,0x20(%rsp)
00000000000A541E jmp 0x00000000000A5420
00000000000A5420 mov 0x18(%rsp),%rax
00000000000A5425 mov 0x20(%rsp),%rcx
00000000000A542A mov %rcx,0x50(%rsp)
00000000000A542F mov %rax,0x58(%rsp)
00000000000A5434 lea 0x48(%rsp),%rax
00000000000A5439 mov %rax,0x60(%rsp)
00000000000A543E mov 0x60(%rsp),%rsi
00000000000A5443 lea 0x50(%rsp),%rdi
00000000000A5448 call 0x00000000000892E0
00000000000A544D mov %rax,0x10(%rsp)
00000000000A5452 jmp 0x00000000000A5454
00000000000A5454 mov 0x10(%rsp),%rdi
00000000000A5459 call 0x000000000006D660
00000000000A545E mov %rax,8(%rsp)
00000000000A5463 jmp 0x00000000000A5465
00000000000A5465 jmp 0x00000000000A5473
00000000000A5467 mov 0x68(%rsp),%rdi
00000000000A546C call 0x000000000002E3D0
00000000000A5471 ud2
00000000000A5473 mov 8(%rsp),%rax
00000000000A5478 add $0x78,%rsp
00000000000A547C ret

 Function call queue at function a53c0: [892e0, 6d660]

Analyzing function at 892e0
00000000000892E0 push %rax
00000000000892E1 call 0x00000000000503C0
00000000000892E6 mov %rax,(%rsp)
00000000000892EA mov (%rsp),%rax
00000000000892EE pop %rcx
00000000000892EF ret

 Function call queue at function 892e0: []

Analyzing function at 6d660
000000000006D660 sub $0x28,%rsp
000000000006D664 mov %rdi,8(%rsp)
000000000006D669 movb $1,0x27(%rsp)
000000000006D66E mov 8(%rsp),%rax
000000000006D673 test %rax,%rax
000000000006D676 setne %al
000000000006D679 movzbl %al,%eax
000000000006D67C je 0x000000000006D684
000000000006D67E jmp 0x000000000006D680
000000000006D680 jmp 0x000000000006D68F
000000000006D682 ud2
000000000006D684 movq $0,0x10(%rsp)
000000000006D68D jmp 0x000000000006D6B5
000000000006D68F mov 8(%rsp),%rax
000000000006D694 movb $0,0x27(%rsp)
000000000006D699 mov %rax,0x18(%rsp)
000000000006D69E mov 0x18(%rsp),%rdi
000000000006D6A3 call 0x00000000000A5920
000000000006D6A8 mov %rax,(%rsp)
000000000006D6AC mov (%rsp),%rax
000000000006D6B0 mov %rax,0x10(%rsp)
000000000006D6B5 testb $1,0x27(%rsp)
000000000006D6BA jne 0x000000000006D6C6
000000000006D6BC mov 0x10(%rsp),%rax
000000000006D6C1 add $0x28,%rsp
000000000006D6C5 ret
000000000006D6C6 jmp 0x000000000006D6BC

 Function call queue at function 6d660: [a5920]

Analyzing function at a5920
00000000000A5920 mov %rdi,%rax
00000000000A5923 ret

 Function call queue at function a5920: []

Analyzing function at 51930
0000000000051930 push %rax
0000000000051931 mov %rdi,%rax
0000000000051934 mov %rax,(%rsp)
0000000000051938 call 0x000000000005AD00
000000000005193D mov (%rsp),%rax
0000000000051941 pop %rcx
0000000000051942 ret

 Function call queue at function 51930: []

Analyzing function at 5aa50
000000000005AA50 sub $0x28,%rsp
000000000005AA54 mov %rdi,%rax
000000000005AA57 mov %rax,8(%rsp)
000000000005AA5C mov (%rsi),%rax
000000000005AA5F mov %rax,0x10(%rsp)
000000000005AA64 mov 8(%rsi),%rax
000000000005AA68 mov %rax,0x18(%rsp)
000000000005AA6D mov 0x10(%rsi),%rax
000000000005AA71 mov %rax,0x20(%rsp)
000000000005AA76 lea 0x10(%rsp),%rsi
000000000005AA7B call 0x00000000000981D0
000000000005AA80 mov 8(%rsp),%rax
000000000005AA85 add $0x28,%rsp
000000000005AA89 ret

 Function call queue at function 5aa50: [981d0]

Analyzing function at 981d0
00000000000981D0 sub $0x48,%rsp
00000000000981D4 mov %rdi,8(%rsp)
00000000000981D9 mov %rdi,0x10(%rsp)
00000000000981DE mov (%rsi),%rax
00000000000981E1 mov %rax,0x30(%rsp)
00000000000981E6 mov 8(%rsi),%rax
00000000000981EA mov %rax,0x38(%rsp)
00000000000981EF mov 0x10(%rsi),%rax
00000000000981F3 mov %rax,0x40(%rsp)
00000000000981F8 lea 0x18(%rsp),%rdi
00000000000981FD lea 0x30(%rsp),%rsi
0000000000098202 call 0x000000000005ADC0
0000000000098207 mov 8(%rsp),%rdi
000000000009820C lea 0x18(%rsp),%rsi
0000000000098211 call 0x00000000000992A0
0000000000098216 mov 0x10(%rsp),%rax
000000000009821B add $0x48,%rsp
000000000009821F ret

 Function call queue at function 981d0: [5adc0, 992a0]

Analyzing function at 5adc0
000000000005ADC0 mov %rdi,%rax
000000000005ADC3 mov (%rsi),%rcx
000000000005ADC6 mov %rcx,(%rdi)
000000000005ADC9 mov 8(%rsi),%rcx
000000000005ADCD mov %rcx,8(%rdi)
000000000005ADD1 mov 0x10(%rsi),%rcx
000000000005ADD5 mov %rcx,0x10(%rdi)
000000000005ADD9 ret

 Function call queue at function 5adc0: []

Analyzing function at 992a0
00000000000992A0 sub $0x28,%rsp
00000000000992A4 mov %rdi,%rax
00000000000992A7 mov %rax,8(%rsp)
00000000000992AC mov (%rsi),%rax
00000000000992AF mov %rax,0x10(%rsp)
00000000000992B4 mov 8(%rsi),%rax
00000000000992B8 mov %rax,0x18(%rsp)
00000000000992BD mov 0x10(%rsi),%rax
00000000000992C1 mov %rax,0x20(%rsp)
00000000000992C6 lea 0x10(%rsp),%rsi
00000000000992CB call 0x000000000008FC40
00000000000992D0 mov 8(%rsp),%rax
00000000000992D5 add $0x28,%rsp
00000000000992D9 ret

 Function call queue at function 992a0: [8fc40]

Analyzing function at 8fc40
000000000008FC40 sub $0xC8,%rsp
000000000008FC47 mov %rsi,0x20(%rsp)
000000000008FC4C mov %rdi,%rax
000000000008FC4F mov 0x20(%rsp),%rdi
000000000008FC54 mov %rax,0x28(%rsp)
000000000008FC59 mov %rax,0x30(%rsp)
000000000008FC5E movb $1,0xAF(%rsp)
000000000008FC66 call 0x000000000005A5A0
000000000008FC6B mov %rax,0x38(%rsp)
000000000008FC70 jmp 0x000000000008FC9B
000000000008FC72 testb $1,0xAF(%rsp)
000000000008FC7A jne 0x000000000008FE88
000000000008FC80 jmp 0x000000000008FE79
000000000008FC85 mov %rax,%rcx
000000000008FC88 mov %edx,%eax
000000000008FC8A mov %rcx,0xB0(%rsp)
000000000008FC92 mov %eax,0xB8(%rsp)
000000000008FC99 jmp 0x000000000008FC72
000000000008FC9B mov 0x38(%rsp),%rax
000000000008FCA0 mov %rax,0x58(%rsp)
000000000008FCA5 mov 0x58(%rsp),%rax
000000000008FCAA test %rax,%rax
000000000008FCAD setne %al
000000000008FCB0 movzbl %al,%eax
000000000008FCB3 je 0x000000000008FCBB
000000000008FCB5 jmp 0x000000000008FCB7
000000000008FCB7 jmp 0x000000000008FCCA
000000000008FCB9 ud2
000000000008FCBB mov 0x28(%rsp),%rdi
000000000008FCC0 call 0x0000000000091480
000000000008FCC5 jmp 0x000000000008FE77
000000000008FCCA mov 0x20(%rsp),%rsi
000000000008FCCF movb $1,0xAE(%rsp)
000000000008FCD7 mov 0x58(%rsp),%rax
000000000008FCDC mov %rax,0x18(%rsp)
000000000008FCE1 lea 0x60(%rsp),%rdi
000000000008FCE6 call 0x000000000005A910
000000000008FCEB jmp 0x000000000008FD16
000000000008FCED testb $1,0xAE(%rsp)
000000000008FCF5 jne 0x000000000008FE21
000000000008FCFB jmp 0x000000000008FC72
000000000008FD00 mov %rax,%rcx
000000000008FD03 mov %edx,%eax
000000000008FD05 mov %rcx,0xB0(%rsp)
000000000008FD0D mov %eax,0xB8(%rsp)
000000000008FD14 jmp 0x000000000008FCED
000000000008FD16 mov 0x60(%rsp),%rax
000000000008FD1B inc %rax
000000000008FD1E mov $0xFFFFFFFFFFFFFFFF,%rcx
000000000008FD25 cmove %rcx,%rax
000000000008FD29 mov %rax,0xC0(%rsp)
000000000008FD31 mov 0xC0(%rsp),%rax
000000000008FD39 mov %rax,0x10(%rsp)
000000000008FD3E mov 0x10(%rsp),%rsi
000000000008FD43 lea 0xEFD80,%rax
000000000008FD4A mov $4,%edi
000000000008FD4F call *%rax
000000000008FD51 mov %rax,8(%rsp)
000000000008FD56 jmp 0x000000000008FD58
000000000008FD58 mov 8(%rsp),%rsi
000000000008FD5D lea 0x78(%rsp),%rdi
000000000008FD62 call 0x00000000000911C0
000000000008FD67 jmp 0x000000000008FD69
000000000008FD69 lea 0x78(%rsp),%rdi
000000000008FD6E call 0x0000000000091580
000000000008FD73 mov %rax,(%rsp)
000000000008FD77 jmp 0x000000000008FD9E
000000000008FD79 lea 0x78(%rsp),%rdi
000000000008FD7E call 0x000000000009BC70
000000000008FD83 jmp 0x000000000008FCED
000000000008FD88 mov %rax,%rcx
000000000008FD8B mov %edx,%eax
000000000008FD8D mov %rcx,0xB0(%rsp)
000000000008FD95 mov %eax,0xB8(%rsp)
000000000008FD9C jmp 0x000000000008FD79
000000000008FD9E mov 0x18(%rsp),%rsi
000000000008FDA3 mov (%rsp),%rdi
000000000008FDA7 movb $0,0xAE(%rsp)
000000000008FDAF call 0x0000000000068940
000000000008FDB4 jmp 0x000000000008FDB6
000000000008FDB6 lea 0x78(%rsp),%rdi
000000000008FDBB mov $1,%esi
000000000008FDC0 call 0x00000000000957C0
000000000008FDC5 jmp 0x000000000008FDC7
000000000008FDC7 mov 0x20(%rsp),%rax
000000000008FDCC mov 0x88(%rsp),%rcx
000000000008FDD4 mov %rcx,0x50(%rsp)
000000000008FDD9 movups 0x78(%rsp),%xmm0
000000000008FDDE movaps %xmm0,0x40(%rsp)
000000000008FDE3 movb $0,0xAF(%rsp)
000000000008FDEB mov 0x10(%rax),%rcx
000000000008FDEF mov %rcx,0xA0(%rsp)
000000000008FDF7 movups (%rax),%xmm0
000000000008FDFA movaps %xmm0,0x90(%rsp)
000000000008FE02 lea 0x40(%rsp),%rdi
000000000008FE07 lea 0x90(%rsp),%rsi
000000000008FE0F call 0x0000000000098BD0
000000000008FE14 jmp 0x000000000008FE4B
000000000008FE16 lea 0x2FBE0,%rax
000000000008FE1D call *%rax
000000000008FE1F ud2
000000000008FE21 jmp 0x000000000008FC72
000000000008FE26 lea 0x40(%rsp),%rdi
000000000008FE2B call 0x000000000009BC70
000000000008FE30 jmp 0x000000000008FC72
000000000008FE35 mov %rax,%rcx
000000000008FE38 mov %edx,%eax
000000000008FE3A mov %rcx,0xB0(%rsp)
000000000008FE42 mov %eax,0xB8(%rsp)
000000000008FE49 jmp 0x000000000008FE26
000000000008FE4B mov 0x28(%rsp),%rax
000000000008FE50 mov 0x40(%rsp),%rcx
000000000008FE55 mov %rcx,(%rax)
000000000008FE58 mov 0x48(%rsp),%rcx
000000000008FE5D mov %rcx,8(%rax)
000000000008FE61 mov 0x50(%rsp),%rcx
000000000008FE66 mov %rcx,0x10(%rax)
000000000008FE6A mov 0x30(%rsp),%rax
000000000008FE6F add $0xC8,%rsp
000000000008FE76 ret
000000000008FE77 jmp 0x000000000008FE6A

 Function call queue at function 8fc40: [5a5a0, 5a910, 98bd0]

Analyzing function at 5a5a0
000000000005A5A0 push %rax
000000000005A5A1 mov %rdi,%rsi
000000000005A5A4 mov %rsi,%rdi
000000000005A5A7 add $0x10,%rsi
000000000005A5AB call 0x0000000000053850
000000000005A5B0 mov %rax,(%rsp)
000000000005A5B4 mov (%rsp),%rax
000000000005A5B8 pop %rcx
000000000005A5B9 ret

 Function call queue at function 5a5a0: [53850]

Analyzing function at 53850
0000000000053850 sub $0x58,%rsp
0000000000053854 mov %rdi,0x18(%rsp)
0000000000053859 mov %rsi,0x20(%rsp)
000000000005385E mov 0x18(%rsp),%rdi
0000000000053863 call 0x0000000000053910
0000000000053868 mov %rax,0x10(%rsp)
000000000005386D jmp 0x0000000000053881
000000000005386F jmp 0x00000000000538E8
0000000000053871 mov %rax,%rcx
0000000000053874 mov %edx,%eax
0000000000053876 mov %rcx,0x48(%rsp)
000000000005387B mov %eax,0x50(%rsp)
000000000005387F jmp 0x000000000005386F
0000000000053881 mov 0x10(%rsp),%rax
0000000000053886 mov %rax,0x30(%rsp)
000000000005388B mov $1,%eax
0000000000053890 xor %ecx,%ecx
0000000000053892 cmpq $0,0x30(%rsp)
0000000000053898 cmove %rcx,%rax
000000000005389C cmp $1,%rax
00000000000538A0 jne 0x00000000000538CB
00000000000538A2 mov 0x30(%rsp),%rax
00000000000538A7 mov %rax,0x38(%rsp)
00000000000538AC lea 0x38(%rsp),%rax
00000000000538B1 mov %rax,0x40(%rsp)
00000000000538B6 mov 0x40(%rsp),%rsi
00000000000538BB lea 0x20(%rsp),%rdi
00000000000538C0 call 0x00000000000A2800
00000000000538C5 mov %al,0xF(%rsp)
00000000000538C9 jmp 0x00000000000538DE
00000000000538CB movq $0,0x28(%rsp)
00000000000538D4 mov 0x28(%rsp),%rax
00000000000538D9 add $0x58,%rsp
00000000000538DD ret
00000000000538DE mov 0xF(%rsp),%al
00000000000538E2 test $1,%al
00000000000538E4 jne 0x00000000000538F9
00000000000538E6 jmp 0x00000000000538F4
00000000000538E8 mov 0x48(%rsp),%rdi
00000000000538ED call 0x000000000002E3D0
00000000000538F2 ud2
00000000000538F4 jmp 0x000000000005385E
00000000000538F9 mov 0x38(%rsp),%rax
00000000000538FE mov %rax,0x28(%rsp)
0000000000053903 jmp 0x00000000000538D4

 Function call queue at function 53850: [a2800]

Analyzing function at a2800
00000000000A2800 sub $0x18,%rsp
00000000000A2804 mov %rsi,0x10(%rsp)
00000000000A2809 mov (%rdi),%rdi
00000000000A280C mov 0x10(%rsp),%rsi
00000000000A2811 call 0x00000000000A5180
00000000000A2816 mov %al,0xF(%rsp)
00000000000A281A mov 0xF(%rsp),%al
00000000000A281E and $1,%al
00000000000A2820 movzbl %al,%eax
00000000000A2823 add $0x18,%rsp
00000000000A2827 ret

 Function call queue at function a2800: [a5180]

Analyzing function at a5180
00000000000A5180 sub $0x28,%rsp
00000000000A5184 mov %rdi,8(%rsp)
00000000000A5189 mov %rsi,0x10(%rsp)
00000000000A518E mov (%rsi),%rdi
00000000000A5191 add $0x18,%rdi
00000000000A5195 call 0x000000000006E5F0
00000000000A519A mov %al,0x1E(%rsp)
00000000000A519E mov 0x1E(%rsp),%al
00000000000A51A2 test $1,%al
00000000000A51A4 jne 0x00000000000A51AF
00000000000A51A6 jmp 0x00000000000A51A8
00000000000A51A8 movb $0,0x1F(%rsp)
00000000000A51AD jmp 0x00000000000A51DC
00000000000A51AF mov 0x10(%rsp),%rax
00000000000A51B4 mov 8(%rsp),%rcx
00000000000A51B9 mov (%rcx),%rdi
00000000000A51BC mov (%rax),%rax
00000000000A51BF mov %rax,0x20(%rsp)
00000000000A51C4 mov 0x20(%rsp),%rsi
00000000000A51C9 call 0x0000000000035480
00000000000A51CE mov %al,7(%rsp)
00000000000A51D2 mov 7(%rsp),%al
00000000000A51D6 and $1,%al
00000000000A51D8 mov %al,0x1F(%rsp)
00000000000A51DC mov 0x1F(%rsp),%al
00000000000A51E0 and $1,%al
00000000000A51E2 movzbl %al,%eax
00000000000A51E5 add $0x28,%rsp
00000000000A51E9 ret

 Function call queue at function a5180: [35480]

Analyzing function at 35480
0000000000035480 sub $0x28,%rsp
0000000000035484 mov %rsi,0x10(%rsp)
0000000000035489 mov %rdi,%rax
000000000003548C mov 0x10(%rsp),%rdi
0000000000035491 mov %rdi,0x18(%rsp)
0000000000035496 lea 0x3061A0,%rsi
000000000003549D call 0x0000000000030FD0
00000000000354A2 mov %al,0x26(%rsp)
00000000000354A6 mov 0x26(%rsp),%al
00000000000354AA test $1,%al
00000000000354AC jne 0x00000000000354C7
00000000000354AE jmp 0x00000000000354B0
00000000000354B0 mov 0x18(%rsp),%rdi
00000000000354B5 lea 0x3061D0,%rsi
00000000000354BC call 0x0000000000030FD0
00000000000354C1 mov %al,0xF(%rsp)
00000000000354C5 jmp 0x00000000000354DA
00000000000354C7 movb $1,0x27(%rsp)
00000000000354CC mov 0x27(%rsp),%al
00000000000354D0 and $1,%al
00000000000354D2 movzbl %al,%eax
00000000000354D5 add $0x28,%rsp
00000000000354D9 ret
00000000000354DA mov 0xF(%rsp),%al
00000000000354DE and $1,%al
00000000000354E0 mov %al,0x27(%rsp)
00000000000354E4 jmp 0x00000000000354CC

 Function call queue at function 35480: []

Analyzing function at 5a910
000000000005A910 sub $0x28,%rsp
000000000005A914 mov %rdi,(%rsp)
000000000005A918 mov %rdi,8(%rsp)
000000000005A91D lea 0x10(%rsp),%rdi
000000000005A922 call 0x00000000000548D0
000000000005A927 mov 8(%rsp),%rax
000000000005A92C mov (%rsp),%rcx
000000000005A930 mov 0x18(%rsp),%rsi
000000000005A935 mov 0x20(%rsp),%rdx
000000000005A93A movq $0,(%rcx)
000000000005A941 mov %rsi,8(%rcx)
000000000005A945 mov %rdx,0x10(%rcx)
000000000005A949 add $0x28,%rsp
000000000005A94D ret

 Function call queue at function 5a910: []

Analyzing function at 98bd0
0000000000098BD0 sub $0x18,%rsp
0000000000098BD4 mov (%rsi),%rax
0000000000098BD7 mov %rax,(%rsp)
0000000000098BDB mov 8(%rsi),%rax
0000000000098BDF mov %rax,8(%rsp)
0000000000098BE4 mov 0x10(%rsi),%rax
0000000000098BE8 mov %rax,0x10(%rsp)
0000000000098BED mov %rsp,%rsi
0000000000098BF0 call 0x0000000000093740
0000000000098BF5 add $0x18,%rsp
0000000000098BF9 ret

 Function call queue at function 98bd0: [93740]

Analyzing function at 93740
0000000000093740 sub $0x98,%rsp
0000000000093747 mov %rdi,0x40(%rsp)
000000000009374C mov %rsi,0x48(%rsp)
0000000000093751 mov 0x48(%rsp),%rdi
0000000000093756 call 0x000000000005A5A0
000000000009375B mov %rax,0x38(%rsp)
0000000000093760 jmp 0x000000000009377A
0000000000093762 jmp 0x00000000000938C1
0000000000093767 mov %rax,%rcx
000000000009376A mov %edx,%eax
000000000009376C mov %rcx,0x78(%rsp)
0000000000093771 mov %eax,0x80(%rsp)
0000000000093778 jmp 0x0000000000093762
000000000009377A mov 0x38(%rsp),%rax
000000000009377F mov %rax,0x50(%rsp)
0000000000093784 mov $1,%eax
0000000000093789 xor %ecx,%ecx
000000000009378B cmpq $0,0x50(%rsp)
0000000000093791 cmove %rcx,%rax
0000000000093795 cmp $1,%rax
0000000000093799 jne 0x00000000000937BB
000000000009379B mov 0x40(%rsp),%rdi
00000000000937A0 movb $1,0x77(%rsp)
00000000000937A5 mov 0x50(%rsp),%rax
00000000000937AA mov %rax,0x28(%rsp)
00000000000937AF call 0x0000000000094110
00000000000937B4 mov %rax,0x30(%rsp)
00000000000937B9 jmp 0x00000000000937E7
00000000000937BB jmp 0x00000000000937BD
00000000000937BD jmp 0x00000000000937BF
00000000000937BF add $0x98,%rsp
00000000000937C6 ret
00000000000937C7 testb $1,0x77(%rsp)
00000000000937CC jne 0x00000000000938BC
00000000000937D2 jmp 0x0000000000093762
00000000000937D4 mov %rax,%rcx
00000000000937D7 mov %edx,%eax
00000000000937D9 mov %rcx,0x78(%rsp)
00000000000937DE mov %eax,0x80(%rsp)
00000000000937E5 jmp 0x00000000000937C7
00000000000937E7 mov 0x40(%rsp),%rdi
00000000000937EC call 0x0000000000095860
00000000000937F1 mov %rax,0x20(%rsp)
00000000000937F6 jmp 0x00000000000937F8
00000000000937F8 mov 0x30(%rsp),%rax
00000000000937FD mov 0x20(%rsp),%rcx
0000000000093802 cmp %rcx,%rax
0000000000093805 je 0x0000000000093818
0000000000093807 mov 0x40(%rsp),%rdi
000000000009380C call 0x0000000000091580
0000000000093811 mov %rax,0x18(%rsp)
0000000000093816 jmp 0x0000000000093864
0000000000093818 mov 0x48(%rsp),%rsi
000000000009381D lea 0x58(%rsp),%rdi
0000000000093822 call 0x000000000005A910
0000000000093827 jmp 0x0000000000093829
0000000000093829 mov 0x58(%rsp),%rax
000000000009382E inc %rax
0000000000093831 mov $0xFFFFFFFFFFFFFFFF,%rcx
0000000000093838 cmove %rcx,%rax
000000000009383C mov %rax,0x88(%rsp)
0000000000093844 mov 0x88(%rsp),%rax
000000000009384C mov %rax,0x10(%rsp)
0000000000093851 mov 0x10(%rsp),%rsi
0000000000093856 mov 0x40(%rsp),%rdi
000000000009385B call 0x0000000000095720
0000000000093860 jmp 0x0000000000093862
0000000000093862 jmp 0x0000000000093807
0000000000093864 mov 0x18(%rsp),%rax
0000000000093869 mov 0x30(%rsp),%rcx
000000000009386E shl $3,%rcx
0000000000093872 add %rcx,%rax
0000000000093875 mov %rax,0x90(%rsp)
000000000009387D mov 0x90(%rsp),%rax
0000000000093885 mov %rax,8(%rsp)
000000000009388A jmp 0x000000000009388C
000000000009388C mov 0x28(%rsp),%rsi
0000000000093891 mov 8(%rsp),%rdi
0000000000093896 movb $0,0x77(%rsp)
000000000009389B call 0x0000000000068940
00000000000938A0 jmp 0x00000000000938A2
00000000000938A2 mov 0x40(%rsp),%rdi
00000000000938A7 mov 0x30(%rsp),%rsi
00000000000938AC add $1,%rsi
00000000000938B0 call 0x00000000000957C0
00000000000938B5 jmp 0x00000000000938B7
00000000000938B7 jmp 0x0000000000093751

 Function call queue at function 93740: []

Analyzing function at 6d0b0
000000000006D0B0 sub $0x28,%rsp
000000000006D0B4 mov %rdi,8(%rsp)
000000000006D0B9 movb $1,0x27(%rsp)
000000000006D0BE mov 8(%rsp),%rax
000000000006D0C3 test %rax,%rax
000000000006D0C6 setne %al
000000000006D0C9 movzbl %al,%eax
000000000006D0CC je 0x000000000006D0D4
000000000006D0CE jmp 0x000000000006D0D0
000000000006D0D0 jmp 0x000000000006D0DF
000000000006D0D2 ud2
000000000006D0D4 movq $0,0x10(%rsp)
000000000006D0DD jmp 0x000000000006D105
000000000006D0DF mov 8(%rsp),%rax
000000000006D0E4 movb $0,0x27(%rsp)
000000000006D0E9 mov %rax,0x18(%rsp)
000000000006D0EE mov 0x18(%rsp),%rdi
000000000006D0F3 call 0x00000000000A52E0
000000000006D0F8 mov %rax,(%rsp)
000000000006D0FC mov (%rsp),%rax
000000000006D100 mov %rax,0x10(%rsp)
000000000006D105 testb $1,0x27(%rsp)
000000000006D10A jne 0x000000000006D116
000000000006D10C mov 0x10(%rsp),%rax
000000000006D111 add $0x28,%rsp
000000000006D115 ret
000000000006D116 jmp 0x000000000006D10C

 Function call queue at function 6d0b0: [a52e0]

Analyzing function at a52e0
00000000000A52E0 mov (%rdi),%rax
00000000000A52E3 ret

 Function call queue at function a52e0: []

Analyzing function at 788c0
00000000000788C0 sub $0xC8,%rsp
00000000000788C7 mov %rsi,8(%rsp)
00000000000788CC mov %rdi,0x10(%rsp)
00000000000788D1 mov %rdi,0x18(%rsp)
00000000000788D6 mov (%rsi),%rax
00000000000788D9 test %rax,%rax
00000000000788DC je 0x00000000000788E4
00000000000788DE jmp 0x00000000000788E0
00000000000788E0 jmp 0x00000000000788FF
00000000000788E2 ud2
00000000000788E4 mov 0x10(%rsp),%rax
00000000000788E9 mov 8(%rsp),%rcx
00000000000788EE mov 8(%rcx),%rcx
00000000000788F2 mov %rcx,8(%rax)
00000000000788F6 movq $0,(%rax)
00000000000788FD jmp 0x0000000000078969
00000000000788FF mov 8(%rsp),%rsi
0000000000078904 add $8,%rsi
0000000000078908 lea 0x20(%rsp),%rdi
000000000007890D mov $0x38,%edx
0000000000078912 call 0x000000000002E4B8
0000000000078917 lea 0x90(%rsp),%rdi
000000000007891F lea 0x20(%rsp),%rsi
0000000000078924 mov $0x38,%edx
0000000000078929 call 0x000000000002E4B8
000000000007892E lea 0x58(%rsp),%rdi
0000000000078933 lea 0x90(%rsp),%rsi
000000000007893B mov $0x38,%edx
0000000000078940 call 0x000000000002E4B8
0000000000078945 mov 0x10(%rsp),%rdi
000000000007894A add $8,%rdi
000000000007894E lea 0x58(%rsp),%rsi
0000000000078953 mov $0x38,%edx
0000000000078958 call 0x000000000002E4B8
000000000007895D mov 0x10(%rsp),%rax
0000000000078962 movq $1,(%rax)
0000000000078969 mov 0x18(%rsp),%rax
000000000007896E add $0xC8,%rsp
0000000000078975 ret

 Function call queue at function 788c0: []

Analyzing function at 76560
0000000000076560 sub $0xB8,%rsp
0000000000076567 mov %rdi,(%rsp)
000000000007656B mov %rdi,8(%rsp)
0000000000076570 lea 0x10(%rsp),%rdi
0000000000076575 mov $0x38,%edx
000000000007657A call 0x000000000002E4B8
000000000007657F lea 0x80(%rsp),%rdi
0000000000076587 lea 0x10(%rsp),%rsi
000000000007658C mov $0x38,%edx
0000000000076591 call 0x000000000002E4B8
0000000000076596 lea 0x48(%rsp),%rdi
000000000007659B lea 0x80(%rsp),%rsi
00000000000765A3 call 0x0000000000089330
00000000000765A8 mov (%rsp),%rdi
00000000000765AC add $8,%rdi
00000000000765B0 lea 0x48(%rsp),%rsi
00000000000765B5 mov $0x38,%edx
00000000000765BA call 0x000000000002E4B8
00000000000765BF mov (%rsp),%rcx
00000000000765C3 mov 8(%rsp),%rax
00000000000765C8 movb $1,(%rcx)
00000000000765CB add $0xB8,%rsp
00000000000765D2 ret

 Function call queue at function 76560: []

Analyzing function at 75b50
0000000000075B50 sub $0xB8,%rsp
0000000000075B57 mov %rdi,(%rsp)
0000000000075B5B mov %rdi,8(%rsp)
0000000000075B60 lea 0x10(%rsp),%rdi
0000000000075B65 mov $0x38,%edx
0000000000075B6A call 0x000000000002E4B8
0000000000075B6F lea 0x80(%rsp),%rdi
0000000000075B77 lea 0x10(%rsp),%rsi
0000000000075B7C mov $0x38,%edx
0000000000075B81 call 0x000000000002E4B8
0000000000075B86 lea 0x48(%rsp),%rdi
0000000000075B8B lea 0x80(%rsp),%rsi
0000000000075B93 call 0x0000000000089330
0000000000075B98 mov (%rsp),%rdi
0000000000075B9C add $8,%rdi
0000000000075BA0 lea 0x48(%rsp),%rsi
0000000000075BA5 mov $0x38,%edx
0000000000075BAA call 0x000000000002E4B8
0000000000075BAF mov (%rsp),%rcx
0000000000075BB3 mov 8(%rsp),%rax
0000000000075BB8 movb $1,(%rcx)
0000000000075BBB add $0xB8,%rsp
0000000000075BC2 ret

 Function call queue at function 75b50: []

Analyzing function at 78810
0000000000078810 sub $0xC8,%rsp
0000000000078817 mov %rsi,8(%rsp)
000000000007881C mov %rdi,0x10(%rsp)
0000000000078821 mov %rdi,0x18(%rsp)
0000000000078826 movzbl (%rsi),%eax
0000000000078829 test $1,%al
000000000007882B je 0x0000000000078833
000000000007882D jmp 0x000000000007882F
000000000007882F jmp 0x0000000000078848
0000000000078831 ud2
0000000000078833 mov 0x10(%rsp),%rax
0000000000078838 mov 8(%rsp),%rcx
000000000007883D mov 1(%rcx),%cl
0000000000078840 mov %cl,1(%rax)
0000000000078843 movb $0,(%rax)
0000000000078846 jmp 0x00000000000788AE
0000000000078848 mov 8(%rsp),%rsi
000000000007884D add $8,%rsi
0000000000078851 lea 0x20(%rsp),%rdi
0000000000078856 mov $0x38,%edx
000000000007885B call 0x000000000002E4B8
0000000000078860 lea 0x90(%rsp),%rdi
0000000000078868 lea 0x20(%rsp),%rsi
000000000007886D mov $0x38,%edx
0000000000078872 call 0x000000000002E4B8
0000000000078877 lea 0x58(%rsp),%rdi
000000000007887C lea 0x90(%rsp),%rsi
0000000000078884 mov $0x38,%edx
0000000000078889 call 0x000000000002E4B8
000000000007888E mov 0x10(%rsp),%rdi
0000000000078893 add $8,%rdi
0000000000078897 lea 0x58(%rsp),%rsi
000000000007889C mov $0x38,%edx
00000000000788A1 call 0x000000000002E4B8
00000000000788A6 mov 0x10(%rsp),%rax
00000000000788AB movb $1,(%rax)
00000000000788AE mov 0x18(%rsp),%rax
00000000000788B3 add $0xC8,%rsp
00000000000788BA ret

 Function call queue at function 78810: []

Analyzing function at 851b0
00000000000851B0 sub $0x108,%rsp
00000000000851B7 mov %rdi,(%rsp)
00000000000851BB mov %rdi,8(%rsp)
00000000000851C0 lea 0x50(%rsp),%rdi
00000000000851C5 lea 0x306230,%rdx
00000000000851CC call 0x00000000000314A0
00000000000851D1 lea 0x10(%rsp),%rdi
00000000000851D6 lea 0x50(%rsp),%rsi
00000000000851DB call 0x0000000000077B40
00000000000851E0 movzbl 0x10(%rsp),%eax
00000000000851E5 test $1,%al
00000000000851E7 je 0x00000000000851EF
00000000000851E9 jmp 0x00000000000851EB
00000000000851EB jmp 0x00000000000851F8
00000000000851ED ud2
00000000000851EF testb $1,0x11(%rsp)
00000000000851F4 jne 0x000000000008525E
00000000000851F6 jmp 0x0000000000085254
00000000000851F8 lea 0x10(%rsp),%rsi
00000000000851FD add $8,%rsi
0000000000085201 lea 0x90(%rsp),%rdi
0000000000085209 mov $0x38,%edx
000000000008520E call 0x000000000002E4B8
0000000000085213 lea 0xC8(%rsp),%rdi
000000000008521B lea 0x90(%rsp),%rsi
0000000000085223 mov $0x38,%edx
0000000000085228 call 0x000000000002E4B8
000000000008522D mov (%rsp),%rdi
0000000000085231 lea 0xC8(%rsp),%rsi
0000000000085239 lea 0x303F70,%rdx
0000000000085240 call 0x0000000000076660
0000000000085245 jmp 0x0000000000085247
0000000000085247 mov 8(%rsp),%rax
000000000008524C add $0x108,%rsp
0000000000085253 ret
0000000000085254 movb $1,0x107(%rsp)
000000000008525C jmp 0x0000000000085266
000000000008525E movb $0,0x107(%rsp)
0000000000085266 mov (%rsp),%rax
000000000008526A mov 0x107(%rsp),%cl
0000000000085271 and $1,%cl
0000000000085274 mov %cl,1(%rax)
0000000000085277 movb $0,(%rax)
000000000008527A jmp 0x0000000000085247

 Function call queue at function 851b0: [76660]

Analyzing function at 76660
0000000000076660 sub $0xB8,%rsp
0000000000076667 mov %rdi,(%rsp)
000000000007666B mov %rdi,8(%rsp)
0000000000076670 lea 0x10(%rsp),%rdi
0000000000076675 mov $0x38,%edx
000000000007667A call 0x000000000002E4B8
000000000007667F lea 0x80(%rsp),%rdi
0000000000076687 lea 0x10(%rsp),%rsi
000000000007668C mov $0x38,%edx
0000000000076691 call 0x000000000002E4B8
0000000000076696 lea 0x48(%rsp),%rdi
000000000007669B lea 0x80(%rsp),%rsi
00000000000766A3 call 0x0000000000089330
00000000000766A8 mov (%rsp),%rdi
00000000000766AC add $8,%rdi
00000000000766B0 lea 0x48(%rsp),%rsi
00000000000766B5 mov $0x38,%edx
00000000000766BA call 0x000000000002E4B8
00000000000766BF mov (%rsp),%rcx
00000000000766C3 mov 8(%rsp),%rax
00000000000766C8 movb $1,(%rcx)
00000000000766CB add $0xB8,%rsp
00000000000766D2 ret

 Function call queue at function 76660: []

Analyzing function at 783e0
00000000000783E0 sub $0xC8,%rsp
00000000000783E7 mov %rsi,8(%rsp)
00000000000783EC mov %rdi,0x10(%rsp)
00000000000783F1 mov %rdi,0x18(%rsp)
00000000000783F6 movzbl (%rsi),%eax
00000000000783F9 test $1,%al
00000000000783FB je 0x0000000000078403
00000000000783FD jmp 0x00000000000783FF
00000000000783FF jmp 0x000000000007841B
0000000000078401 ud2
0000000000078403 mov 0x10(%rsp),%rax
0000000000078408 mov 8(%rsp),%rcx
000000000007840D mov 1(%rcx),%cl
0000000000078410 and $1,%cl
0000000000078413 mov %cl,1(%rax)
0000000000078416 movb $0,(%rax)
0000000000078419 jmp 0x0000000000078481
000000000007841B mov 8(%rsp),%rsi
0000000000078420 add $8,%rsi
0000000000078424 lea 0x20(%rsp),%rdi
0000000000078429 mov $0x38,%edx
000000000007842E call 0x000000000002E4B8
0000000000078433 lea 0x90(%rsp),%rdi
000000000007843B lea 0x20(%rsp),%rsi
0000000000078440 mov $0x38,%edx
0000000000078445 call 0x000000000002E4B8
000000000007844A lea 0x58(%rsp),%rdi
000000000007844F lea 0x90(%rsp),%rsi
0000000000078457 mov $0x38,%edx
000000000007845C call 0x000000000002E4B8
0000000000078461 mov 0x10(%rsp),%rdi
0000000000078466 add $8,%rdi
000000000007846A lea 0x58(%rsp),%rsi
000000000007846F mov $0x38,%edx
0000000000078474 call 0x000000000002E4B8
0000000000078479 mov 0x10(%rsp),%rax
000000000007847E movb $1,(%rax)
0000000000078481 mov 0x18(%rsp),%rax
0000000000078486 add $0xC8,%rsp
000000000007848D ret

 Function call queue at function 783e0: []

Analyzing function at 84930
0000000000084930 push %rbp
0000000000084931 push %rbx
0000000000084932 sub $0x9A8,%rsp
0000000000084939 mov %rsi,8(%rsp)
000000000008493E mov %rdi,0x10(%rsp)
0000000000084943 mov %rdi,0x18(%rsp)
0000000000084948 lea 0x68(%rsp),%rdi
000000000008494D call 0x0000000000085280
0000000000084952 lea 0x28(%rsp),%rdi
0000000000084957 lea 0x68(%rsp),%rsi
000000000008495C call 0x00000000000790B0
0000000000084961 movzbl 0x28(%rsp),%eax
0000000000084966 test $1,%al
0000000000084968 je 0x0000000000084970
000000000008496A jmp 0x000000000008496C
000000000008496C jmp 0x00000000000849A1
000000000008496E ud2
0000000000084970 mov 8(%rsp),%rsi
0000000000084975 mov 0x29(%rsp),%eax
0000000000084979 mov %eax,0x118(%rsp)
0000000000084980 mov 0x118(%rsp),%eax
0000000000084987 mov %eax,0x20(%rsp)
000000000008498B lea 0x160(%rsp),%rdi
0000000000084993 lea 0x3065E0,%rdx
000000000008499A call 0x00000000000314A0
000000000008499F jmp 0x0000000000084A00
00000000000849A1 lea 0x28(%rsp),%rsi
00000000000849A6 add $8,%rsi
00000000000849AA lea 0xA8(%rsp),%rdi
00000000000849B2 mov $0x38,%edx
00000000000849B7 call 0x000000000002E4B8
00000000000849BC lea 0xE0(%rsp),%rdi
00000000000849C4 lea 0xA8(%rsp),%rsi
00000000000849CC mov $0x38,%edx
00000000000849D1 call 0x000000000002E4B8
00000000000849D6 mov 0x10(%rsp),%rdi
00000000000849DB lea 0xE0(%rsp),%rsi
00000000000849E3 lea 0x303E68,%rdx
00000000000849EA call 0x0000000000076150
00000000000849EF jmp 0x00000000000849F1
00000000000849F1 mov 0x18(%rsp),%rax
00000000000849F6 add $0x9A8,%rsp
00000000000849FD pop %rbx
00000000000849FE pop %rbp
00000000000849FF ret
0000000000084A00 lea 0x120(%rsp),%rdi
0000000000084A08 lea 0x160(%rsp),%rsi
0000000000084A10 call 0x0000000000077B40
0000000000084A15 movzbl 0x120(%rsp),%eax
0000000000084A1D test $1,%al
0000000000084A1F je 0x0000000000084A27
0000000000084A21 jmp 0x0000000000084A23
0000000000084A23 jmp 0x0000000000084A4D
0000000000084A25 ud2
0000000000084A27 mov 8(%rsp),%rsi
0000000000084A2C mov 0x121(%rsp),%al
0000000000084A33 mov %al,7(%rsp)
0000000000084A37 lea 0x250(%rsp),%rdi
0000000000084A3F lea 0x306380,%rdx
0000000000084A46 call 0x00000000000314A0
0000000000084A4B jmp 0x0000000000084AA3
0000000000084A4D lea 0x120(%rsp),%rsi
0000000000084A55 add $8,%rsi
0000000000084A59 lea 0x1A0(%rsp),%rdi
0000000000084A61 mov $0x38,%edx
0000000000084A66 call 0x000000000002E4B8
0000000000084A6B lea 0x1D8(%rsp),%rdi
0000000000084A73 lea 0x1A0(%rsp),%rsi
0000000000084A7B mov $0x38,%edx
0000000000084A80 call 0x000000000002E4B8
0000000000084A85 mov 0x10(%rsp),%rdi
0000000000084A8A lea 0x1D8(%rsp),%rsi
0000000000084A92 lea 0x303E80,%rdx
0000000000084A99 call 0x0000000000076150
0000000000084A9E jmp 0x00000000000849F1
0000000000084AA3 lea 0x210(%rsp),%rdi
0000000000084AAB lea 0x250(%rsp),%rsi
0000000000084AB3 call 0x0000000000077B40
0000000000084AB8 movzbl 0x210(%rsp),%eax
0000000000084AC0 test $1,%al
0000000000084AC2 je 0x0000000000084ACA
0000000000084AC4 jmp 0x0000000000084AC6
0000000000084AC6 jmp 0x0000000000084AF0
0000000000084AC8 ud2
0000000000084ACA mov 8(%rsp),%rsi
0000000000084ACF mov 0x211(%rsp),%al
0000000000084AD6 mov %al,6(%rsp)
0000000000084ADA lea 0x340(%rsp),%rdi
0000000000084AE2 lea 0x306200,%rdx
0000000000084AE9 call 0x00000000000314A0
0000000000084AEE jmp 0x0000000000084B46
0000000000084AF0 lea 0x210(%rsp),%rsi
0000000000084AF8 add $8,%rsi
0000000000084AFC lea 0x290(%rsp),%rdi
0000000000084B04 mov $0x38,%edx
0000000000084B09 call 0x000000000002E4B8
0000000000084B0E lea 0x2C8(%rsp),%rdi
0000000000084B16 lea 0x290(%rsp),%rsi
0000000000084B1E mov $0x38,%edx
0000000000084B23 call 0x000000000002E4B8
0000000000084B28 mov 0x10(%rsp),%rdi
0000000000084B2D lea 0x2C8(%rsp),%rsi
0000000000084B35 lea 0x303E98,%rdx
0000000000084B3C call 0x0000000000076150
0000000000084B41 jmp 0x00000000000849F1
0000000000084B46 lea 0x300(%rsp),%rdi
0000000000084B4E lea 0x340(%rsp),%rsi
0000000000084B56 call 0x0000000000077B40
0000000000084B5B movzbl 0x300(%rsp),%eax
0000000000084B63 test $1,%al
0000000000084B65 je 0x0000000000084B6D
0000000000084B67 jmp 0x0000000000084B69
0000000000084B69 jmp 0x0000000000084B93
0000000000084B6B ud2
0000000000084B6D mov 8(%rsp),%rsi
0000000000084B72 mov 0x301(%rsp),%al
0000000000084B79 mov %al,5(%rsp)
0000000000084B7D lea 0x430(%rsp),%rdi
0000000000084B85 lea 0x3062C0,%rdx
0000000000084B8C call 0x00000000000314A0
0000000000084B91 jmp 0x0000000000084BE9
0000000000084B93 lea 0x300(%rsp),%rsi
0000000000084B9B add $8,%rsi
0000000000084B9F lea 0x380(%rsp),%rdi
0000000000084BA7 mov $0x38,%edx
0000000000084BAC call 0x000000000002E4B8
0000000000084BB1 lea 0x3B8(%rsp),%rdi
0000000000084BB9 lea 0x380(%rsp),%rsi
0000000000084BC1 mov $0x38,%edx
0000000000084BC6 call 0x000000000002E4B8
0000000000084BCB mov 0x10(%rsp),%rdi
0000000000084BD0 lea 0x3B8(%rsp),%rsi
0000000000084BD8 lea 0x303EB0,%rdx
0000000000084BDF call 0x0000000000076150
0000000000084BE4 jmp 0x00000000000849F1
0000000000084BE9 lea 0x3F0(%rsp),%rdi
0000000000084BF1 lea 0x430(%rsp),%rsi
0000000000084BF9 call 0x0000000000077B40
0000000000084BFE movzbl 0x3F0(%rsp),%eax
0000000000084C06 test $1,%al
0000000000084C08 je 0x0000000000084C10
0000000000084C0A jmp 0x0000000000084C0C
0000000000084C0C jmp 0x0000000000084C36
0000000000084C0E ud2
0000000000084C10 mov 8(%rsp),%rsi
0000000000084C15 mov 0x3F1(%rsp),%al
0000000000084C1C mov %al,4(%rsp)
0000000000084C20 lea 0x520(%rsp),%rdi
0000000000084C28 lea 0x3062F0,%rdx
0000000000084C2F call 0x00000000000314A0
0000000000084C34 jmp 0x0000000000084C8C
0000000000084C36 lea 0x3F0(%rsp),%rsi
0000000000084C3E add $8,%rsi
0000000000084C42 lea 0x470(%rsp),%rdi
0000000000084C4A mov $0x38,%edx
0000000000084C4F call 0x000000000002E4B8
0000000000084C54 lea 0x4A8(%rsp),%rdi
0000000000084C5C lea 0x470(%rsp),%rsi
0000000000084C64 mov $0x38,%edx
0000000000084C69 call 0x000000000002E4B8
0000000000084C6E mov 0x10(%rsp),%rdi
0000000000084C73 lea 0x4A8(%rsp),%rsi
0000000000084C7B lea 0x303EC8,%rdx
0000000000084C82 call 0x0000000000076150
0000000000084C87 jmp 0x00000000000849F1
0000000000084C8C lea 0x4E0(%rsp),%rdi
0000000000084C94 lea 0x520(%rsp),%rsi
0000000000084C9C call 0x0000000000077B40
0000000000084CA1 movzbl 0x4E0(%rsp),%eax
0000000000084CA9 test $1,%al
0000000000084CAB je 0x0000000000084CB3
0000000000084CAD jmp 0x0000000000084CAF
0000000000084CAF jmp 0x0000000000084CD9
0000000000084CB1 ud2
0000000000084CB3 mov 8(%rsp),%rsi
0000000000084CB8 mov 0x4E1(%rsp),%al
0000000000084CBF mov %al,3(%rsp)
0000000000084CC3 lea 0x610(%rsp),%rdi
0000000000084CCB lea 0x306640,%rdx
0000000000084CD2 call 0x00000000000314A0
0000000000084CD7 jmp 0x0000000000084D2F
0000000000084CD9 lea 0x4E0(%rsp),%rsi
0000000000084CE1 add $8,%rsi
0000000000084CE5 lea 0x560(%rsp),%rdi
0000000000084CED mov $0x38,%edx
0000000000084CF2 call 0x000000000002E4B8
0000000000084CF7 lea 0x598(%rsp),%rdi
0000000000084CFF lea 0x560(%rsp),%rsi
0000000000084D07 mov $0x38,%edx
0000000000084D0C call 0x000000000002E4B8
0000000000084D11 mov 0x10(%rsp),%rdi
0000000000084D16 lea 0x598(%rsp),%rsi
0000000000084D1E lea 0x303EE0,%rdx
0000000000084D25 call 0x0000000000076150
0000000000084D2A jmp 0x00000000000849F1
0000000000084D2F lea 0x5D0(%rsp),%rdi
0000000000084D37 lea 0x610(%rsp),%rsi
0000000000084D3F call 0x0000000000077B40
0000000000084D44 movzbl 0x5D0(%rsp),%eax
0000000000084D4C test $1,%al
0000000000084D4E je 0x0000000000084D56
0000000000084D50 jmp 0x0000000000084D52
0000000000084D52 jmp 0x0000000000084D7C
0000000000084D54 ud2
0000000000084D56 mov 8(%rsp),%rsi
0000000000084D5B mov 0x5D1(%rsp),%al
0000000000084D62 mov %al,2(%rsp)
0000000000084D66 lea 0x700(%rsp),%rdi
0000000000084D6E lea 0x3064F0,%rdx
0000000000084D75 call 0x00000000000314A0
0000000000084D7A jmp 0x0000000000084DD2
0000000000084D7C lea 0x5D0(%rsp),%rsi
0000000000084D84 add $8,%rsi
0000000000084D88 lea 0x650(%rsp),%rdi
0000000000084D90 mov $0x38,%edx
0000000000084D95 call 0x000000000002E4B8
0000000000084D9A lea 0x688(%rsp),%rdi
0000000000084DA2 lea 0x650(%rsp),%rsi
0000000000084DAA mov $0x38,%edx
0000000000084DAF call 0x000000000002E4B8
0000000000084DB4 mov 0x10(%rsp),%rdi
0000000000084DB9 lea 0x688(%rsp),%rsi
0000000000084DC1 lea 0x303EF8,%rdx
0000000000084DC8 call 0x0000000000076150
0000000000084DCD jmp 0x00000000000849F1
0000000000084DD2 lea 0x6C0(%rsp),%rdi
0000000000084DDA lea 0x700(%rsp),%rsi
0000000000084DE2 call 0x0000000000077B40
0000000000084DE7 movzbl 0x6C0(%rsp),%eax
0000000000084DEF test $1,%al
0000000000084DF1 je 0x0000000000084DF9
0000000000084DF3 jmp 0x0000000000084DF5
0000000000084DF5 jmp 0x0000000000084E21
0000000000084DF7 ud2
0000000000084DF9 mov 8(%rsp),%rsi
0000000000084DFE mov 0x6C1(%rsp),%al
0000000000084E05 xor $0xFF,%al
0000000000084E07 mov %al,1(%rsp)
0000000000084E0B lea 0x7F0(%rsp),%rdi
0000000000084E13 lea 0x306520,%rdx
0000000000084E1A call 0x00000000000314A0
0000000000084E1F jmp 0x0000000000084E77
0000000000084E21 lea 0x6C0(%rsp),%rsi
0000000000084E29 add $8,%rsi
0000000000084E2D lea 0x740(%rsp),%rdi
0000000000084E35 mov $0x38,%edx
0000000000084E3A call 0x000000000002E4B8
0000000000084E3F lea 0x778(%rsp),%rdi
0000000000084E47 lea 0x740(%rsp),%rsi
0000000000084E4F mov $0x38,%edx
0000000000084E54 call 0x000000000002E4B8
0000000000084E59 mov 0x10(%rsp),%rdi
0000000000084E5E lea 0x778(%rsp),%rsi
0000000000084E66 lea 0x303F10,%rdx
0000000000084E6D call 0x0000000000076150
0000000000084E72 jmp 0x00000000000849F1
0000000000084E77 lea 0x7B0(%rsp),%rdi
0000000000084E7F lea 0x7F0(%rsp),%rsi
0000000000084E87 call 0x0000000000077B40
0000000000084E8C movzbl 0x7B0(%rsp),%eax
0000000000084E94 test $1,%al
0000000000084E96 je 0x0000000000084E9E
0000000000084E98 jmp 0x0000000000084E9A
0000000000084E9A jmp 0x0000000000084EC5
0000000000084E9C ud2
0000000000084E9E mov 8(%rsp),%rsi
0000000000084EA3 mov 0x7B1(%rsp),%al
0000000000084EAA xor $0xFF,%al
0000000000084EAC mov %al,(%rsp)
0000000000084EAF lea 0x8E0(%rsp),%rdi
0000000000084EB7 lea 0x306550,%rdx
0000000000084EBE call 0x00000000000314A0
0000000000084EC3 jmp 0x0000000000084F1B
0000000000084EC5 lea 0x7B0(%rsp),%rsi
0000000000084ECD add $8,%rsi
0000000000084ED1 lea 0x830(%rsp),%rdi
0000000000084ED9 mov $0x38,%edx
0000000000084EDE call 0x000000000002E4B8
0000000000084EE3 lea 0x868(%rsp),%rdi
0000000000084EEB lea 0x830(%rsp),%rsi
0000000000084EF3 mov $0x38,%edx
0000000000084EF8 call 0x000000000002E4B8
0000000000084EFD mov 0x10(%rsp),%rdi
0000000000084F02 lea 0x868(%rsp),%rsi
0000000000084F0A lea 0x303F28,%rdx
0000000000084F11 call 0x0000000000076150
0000000000084F16 jmp 0x00000000000849F1
0000000000084F1B lea 0x8A0(%rsp),%rdi
0000000000084F23 lea 0x8E0(%rsp),%rsi
0000000000084F2B call 0x0000000000077B40
0000000000084F30 movzbl 0x8A0(%rsp),%eax
0000000000084F38 test $1,%al
0000000000084F3A je 0x0000000000084F45
0000000000084F3C jmp 0x0000000000084F3E
0000000000084F3E jmp 0x0000000000085020
0000000000084F43 ud2
0000000000084F45 mov 0x10(%rsp),%rax
0000000000084F4A mov (%rsp),%dl
0000000000084F4D mov 1(%rsp),%sil
0000000000084F52 mov 2(%rsp),%dil
0000000000084F57 mov 7(%rsp),%r8b
0000000000084F5C mov 5(%rsp),%r9b
0000000000084F61 mov 6(%rsp),%r10b
0000000000084F66 mov 3(%rsp),%r11b
0000000000084F6B mov 4(%rsp),%bl
0000000000084F6F mov 0x8A1(%rsp),%cl
0000000000084F76 xor $0xFF,%cl
0000000000084F79 mov 0x20(%rsp),%ebp
0000000000084F7D mov %ebp,0x9A0(%rsp)
0000000000084F84 mov 0x9A0(%rsp),%ebp
0000000000084F8B mov %ebp,0x990(%rsp)
0000000000084F92 and $1,%bl
0000000000084F95 mov %bl,0x994(%rsp)
0000000000084F9C and $1,%r11b
0000000000084FA0 mov %r11b,0x995(%rsp)
0000000000084FA8 and $1,%r10b
0000000000084FAC mov %r10b,0x996(%rsp)
0000000000084FB4 and $1,%r9b
0000000000084FB8 mov %r9b,0x997(%rsp)
0000000000084FC0 and $1,%r8b
0000000000084FC4 mov %r8b,0x998(%rsp)
0000000000084FCC and $1,%dil
0000000000084FD0 mov %dil,0x999(%rsp)
0000000000084FD8 and $1,%sil
0000000000084FDC mov %sil,0x99A(%rsp)
0000000000084FE4 and $1,%dl
0000000000084FE7 mov %dl,0x99B(%rsp)
0000000000084FEE and $1,%cl
0000000000084FF1 mov %cl,0x99C(%rsp)
0000000000084FF8 mov 0x990(%rsp),%rcx
0000000000085000 mov %rcx,1(%rax)
0000000000085004 mov 0x998(%rsp),%ecx
000000000008500B mov %ecx,9(%rax)
000000000008500E mov 0x99C(%rsp),%cl
0000000000085015 mov %cl,0xD(%rax)
0000000000085018 movb $0,(%rax)
000000000008501B jmp 0x00000000000849F1
0000000000085020 lea 0x8A0(%rsp),%rsi
0000000000085028 add $8,%rsi
000000000008502C lea 0x920(%rsp),%rdi
0000000000085034 mov $0x38,%edx
0000000000085039 call 0x000000000002E4B8
000000000008503E lea 0x958(%rsp),%rdi
0000000000085046 lea 0x920(%rsp),%rsi
000000000008504E mov $0x38,%edx
0000000000085053 call 0x000000000002E4B8
0000000000085058 mov 0x10(%rsp),%rdi
000000000008505D lea 0x958(%rsp),%rsi
0000000000085065 lea 0x303F40,%rdx
000000000008506C call 0x0000000000076150
0000000000085071 jmp 0x00000000000849F1

 Function call queue at function 84930: [85280, 790b0, 76150]

Analyzing function at 85280
0000000000085280 sub $0x738,%rsp
0000000000085287 mov %rsi,0x10(%rsp)
000000000008528C mov %rdi,0x18(%rsp)
0000000000085291 mov %rdi,0x20(%rsp)
0000000000085296 lea 0x78(%rsp),%rdi
000000000008529B lea 0x3063F0,%rdx
00000000000852A2 call 0x00000000000314E0
00000000000852A7 lea 0x38(%rsp),%rdi
00000000000852AC lea 0x78(%rsp),%rsi
00000000000852B1 call 0x0000000000077940
00000000000852B6 mov 0x38(%rsp),%rax
00000000000852BB test %rax,%rax
00000000000852BE je 0x00000000000852C6
00000000000852C0 jmp 0x00000000000852C2
00000000000852C2 jmp 0x00000000000852F5
00000000000852C4 ud2
00000000000852C6 mov 0x10(%rsp),%rsi
00000000000852CB mov 0x40(%rsp),%rcx
00000000000852D0 mov 0x48(%rsp),%rax
00000000000852D5 mov %rcx,0x28(%rsp)
00000000000852DA mov %rax,0x30(%rsp)
00000000000852DF lea 0x168(%rsp),%rdi
00000000000852E7 lea 0x306320,%rdx
00000000000852EE call 0x00000000000314A0
00000000000852F3 jmp 0x0000000000085352
00000000000852F5 lea 0x38(%rsp),%rsi
00000000000852FA add $8,%rsi
00000000000852FE lea 0xB8(%rsp),%rdi
0000000000085306 mov $0x38,%edx
000000000008530B call 0x000000000002E4B8
0000000000085310 lea 0xF0(%rsp),%rdi
0000000000085318 lea 0xB8(%rsp),%rsi
0000000000085320 mov $0x38,%edx
0000000000085325 call 0x000000000002E4B8
000000000008532A mov 0x18(%rsp),%rdi
000000000008532F lea 0xF0(%rsp),%rsi
0000000000085337 lea 0x303F88,%rdx
000000000008533E call 0x0000000000075F50
0000000000085343 jmp 0x0000000000085345
0000000000085345 mov 0x20(%rsp),%rax
000000000008534A add $0x738,%rsp
0000000000085351 ret
0000000000085352 lea 0x128(%rsp),%rdi
000000000008535A lea 0x168(%rsp),%rsi
0000000000085362 call 0x0000000000077B40
0000000000085367 movzbl 0x128(%rsp),%eax
000000000008536F test $1,%al
0000000000085371 je 0x0000000000085379
0000000000085373 jmp 0x0000000000085375
0000000000085375 jmp 0x000000000008539F
0000000000085377 ud2
0000000000085379 mov 0x10(%rsp),%rsi
000000000008537E mov 0x129(%rsp),%al
0000000000085385 mov %al,0xF(%rsp)
0000000000085389 lea 0x258(%rsp),%rdi
0000000000085391 lea 0x306350,%rdx
0000000000085398 call 0x00000000000314A0
000000000008539D jmp 0x00000000000853F5
000000000008539F lea 0x128(%rsp),%rsi
00000000000853A7 add $8,%rsi
00000000000853AB lea 0x1A8(%rsp),%rdi
00000000000853B3 mov $0x38,%edx
00000000000853B8 call 0x000000000002E4B8
00000000000853BD lea 0x1E0(%rsp),%rdi
00000000000853C5 lea 0x1A8(%rsp),%rsi
00000000000853CD mov $0x38,%edx
00000000000853D2 call 0x000000000002E4B8
00000000000853D7 mov 0x18(%rsp),%rdi
00000000000853DC lea 0x1E0(%rsp),%rsi
00000000000853E4 lea 0x303FA0,%rdx
00000000000853EB call 0x0000000000075F50
00000000000853F0 jmp 0x0000000000085345
00000000000853F5 lea 0x218(%rsp),%rdi
00000000000853FD lea 0x258(%rsp),%rsi
0000000000085405 call 0x0000000000077B40
000000000008540A movzbl 0x218(%rsp),%eax
0000000000085412 test $1,%al
0000000000085414 je 0x000000000008541C
0000000000085416 jmp 0x0000000000085418
0000000000085418 jmp 0x0000000000085442
000000000008541A ud2
000000000008541C mov 0x10(%rsp),%rsi
0000000000085421 mov 0x219(%rsp),%al
0000000000085428 mov %al,0xE(%rsp)
000000000008542C lea 0x348(%rsp),%rdi
0000000000085434 lea 0x306420,%rdx
000000000008543B call 0x00000000000314A0
0000000000085440 jmp 0x0000000000085498
0000000000085442 lea 0x218(%rsp),%rsi
000000000008544A add $8,%rsi
000000000008544E lea 0x298(%rsp),%rdi
0000000000085456 mov $0x38,%edx
000000000008545B call 0x000000000002E4B8
0000000000085460 lea 0x2D0(%rsp),%rdi
0000000000085468 lea 0x298(%rsp),%rsi
0000000000085470 mov $0x38,%edx
0000000000085475 call 0x000000000002E4B8
000000000008547A mov 0x18(%rsp),%rdi
000000000008547F lea 0x2D0(%rsp),%rsi
0000000000085487 lea 0x303FB8,%rdx
000000000008548E call 0x0000000000075F50
0000000000085493 jmp 0x0000000000085345
0000000000085498 lea 0x308(%rsp),%rdi
00000000000854A0 lea 0x348(%rsp),%rsi
00000000000854A8 call 0x0000000000077B40
00000000000854AD movzbl 0x308(%rsp),%eax
00000000000854B5 test $1,%al
00000000000854B7 je 0x00000000000854BF
00000000000854B9 jmp 0x00000000000854BB
00000000000854BB jmp 0x00000000000854E5
00000000000854BD ud2
00000000000854BF mov 0x10(%rsp),%rsi
00000000000854C4 mov 0x309(%rsp),%al
00000000000854CB mov %al,0xD(%rsp)
00000000000854CF lea 0x438(%rsp),%rdi
00000000000854D7 lea 0x306450,%rdx
00000000000854DE call 0x00000000000314A0
00000000000854E3 jmp 0x000000000008553B
00000000000854E5 lea 0x308(%rsp),%rsi
00000000000854ED add $8,%rsi
00000000000854F1 lea 0x388(%rsp),%rdi
00000000000854F9 mov $0x38,%edx
00000000000854FE call 0x000000000002E4B8
0000000000085503 lea 0x3C0(%rsp),%rdi
000000000008550B lea 0x388(%rsp),%rsi
0000000000085513 mov $0x38,%edx
0000000000085518 call 0x000000000002E4B8
000000000008551D mov 0x18(%rsp),%rdi
0000000000085522 lea 0x3C0(%rsp),%rsi
000000000008552A lea 0x303FD0,%rdx
0000000000085531 call 0x0000000000075F50
0000000000085536 jmp 0x0000000000085345
000000000008553B lea 0x3F8(%rsp),%rdi
0000000000085543 lea 0x438(%rsp),%rsi
000000000008554B call 0x0000000000077B40
0000000000085550 movzbl 0x3F8(%rsp),%eax
0000000000085558 test $1,%al
000000000008555A je 0x0000000000085562
000000000008555C jmp 0x000000000008555E
000000000008555E jmp 0x0000000000085588
0000000000085560 ud2
0000000000085562 mov 0x10(%rsp),%rsi
0000000000085567 mov 0x3F9(%rsp),%al
000000000008556E mov %al,0xC(%rsp)
0000000000085572 lea 0x528(%rsp),%rdi
000000000008557A lea 0x306580,%rdx
0000000000085581 call 0x00000000000314A0
0000000000085586 jmp 0x00000000000855DE
0000000000085588 lea 0x3F8(%rsp),%rsi
0000000000085590 add $8,%rsi
0000000000085594 lea 0x478(%rsp),%rdi
000000000008559C mov $0x38,%edx
00000000000855A1 call 0x000000000002E4B8
00000000000855A6 lea 0x4B0(%rsp),%rdi
00000000000855AE lea 0x478(%rsp),%rsi
00000000000855B6 mov $0x38,%edx
00000000000855BB call 0x000000000002E4B8
00000000000855C0 mov 0x18(%rsp),%rdi
00000000000855C5 lea 0x4B0(%rsp),%rsi
00000000000855CD lea 0x303FE8,%rdx
00000000000855D4 call 0x0000000000075F50
00000000000855D9 jmp 0x0000000000085345
00000000000855DE lea 0x4E8(%rsp),%rdi
00000000000855E6 lea 0x528(%rsp),%rsi
00000000000855EE call 0x0000000000077B40
00000000000855F3 movzbl 0x4E8(%rsp),%eax
00000000000855FB test $1,%al
00000000000855FD je 0x0000000000085605
00000000000855FF jmp 0x0000000000085601
0000000000085601 jmp 0x0000000000085611
0000000000085603 ud2
0000000000085605 testb $1,0x4E9(%rsp)
000000000008560D jne 0x0000000000085680
000000000008560F jmp 0x0000000000085667
0000000000085611 lea 0x4E8(%rsp),%rsi
0000000000085619 add $8,%rsi
000000000008561D lea 0x568(%rsp),%rdi
0000000000085625 mov $0x38,%edx
000000000008562A call 0x000000000002E4B8
000000000008562F lea 0x5A0(%rsp),%rdi
0000000000085637 lea 0x568(%rsp),%rsi
000000000008563F mov $0x38,%edx
0000000000085644 call 0x000000000002E4B8
0000000000085649 mov 0x18(%rsp),%rdi
000000000008564E lea 0x5A0(%rsp),%rsi
0000000000085656 lea 0x304000,%rdx
000000000008565D call 0x0000000000075F50
0000000000085662 jmp 0x0000000000085345
0000000000085667 mov $1,%eax
000000000008566C xor %ecx,%ecx
000000000008566E cmpq $0,0x28(%rsp)
0000000000085674 cmove %rcx,%rax
0000000000085678 cmp $1,%rax
000000000008567C je 0x00000000000856C5
000000000008567E jmp 0x00000000000856F0
0000000000085680 movb $0,0x5D8(%rsp)
0000000000085688 movb $0,0x5D9(%rsp)
0000000000085690 movb $0,0x5DA(%rsp)
0000000000085698 movb $0,0x5DB(%rsp)
00000000000856A0 mov 0x18(%rsp),%rax
00000000000856A5 mov 0x5D8(%rsp),%ecx
00000000000856AC mov %ecx,0x730(%rsp)
00000000000856B3 mov 0x730(%rsp),%ecx
00000000000856BA mov %ecx,1(%rax)
00000000000856BD movb $0,(%rax)
00000000000856C0 jmp 0x0000000000085345
00000000000856C5 mov 0xF(%rsp),%al
00000000000856C9 mov 0x28(%rsp),%rdx
00000000000856CE mov 0x30(%rsp),%rcx
00000000000856D3 mov %rdx,0x5E0(%rsp)
00000000000856DB mov %rcx,0x5E8(%rsp)
00000000000856E3 test $1,%al
00000000000856E5 jne 0x00000000000857C5
00000000000856EB jmp 0x00000000000857BB
00000000000856F0 mov 0xF(%rsp),%al
00000000000856F4 test $1,%al
00000000000856F6 jne 0x0000000000085709
00000000000856F8 jmp 0x00000000000856FA
00000000000856FA mov 0xE(%rsp),%al
00000000000856FE and $1,%al
0000000000085700 mov %al,0x72F(%rsp)
0000000000085707 jmp 0x0000000000085711
0000000000085709 movb $1,0x72F(%rsp)
0000000000085711 testb $1,0x72F(%rsp)
0000000000085719 jne 0x000000000008572A
000000000008571B mov 0xD(%rsp),%al
000000000008571F and $1,%al
0000000000085721 mov %al,0x72E(%rsp)
0000000000085728 jmp 0x0000000000085732
000000000008572A movb $1,0x72E(%rsp)
0000000000085732 testb $1,0x72E(%rsp)
000000000008573A jne 0x000000000008574B
000000000008573C mov 0xC(%rsp),%al
0000000000085740 and $1,%al
0000000000085742 mov %al,0x72D(%rsp)
0000000000085749 jmp 0x0000000000085753
000000000008574B movb $1,0x72D(%rsp)
0000000000085753 testb $1,0x72D(%rsp)
000000000008575B jne 0x000000000008577C
000000000008575D call 0x0000000000086090
0000000000085762 mov %eax,0x734(%rsp)
0000000000085769 mov 0x734(%rsp),%eax
0000000000085770 mov %eax,0x5D8(%rsp)
0000000000085777 jmp 0x00000000000856A0
000000000008577C mov 0xC(%rsp),%al
0000000000085780 mov 0xD(%rsp),%cl
0000000000085784 mov 0xE(%rsp),%dl
0000000000085788 mov 0xF(%rsp),%sil
000000000008578D and $1,%sil
0000000000085791 mov %sil,0x5D8(%rsp)
0000000000085799 and $1,%dl
000000000008579C mov %dl,0x5D9(%rsp)
00000000000857A3 and $1,%cl
00000000000857A6 mov %cl,0x5DA(%rsp)
00000000000857AD and $1,%al
00000000000857AF mov %al,0x5DB(%rsp)
00000000000857B6 jmp 0x00000000000856A0
00000000000857BB mov 0xE(%rsp),%al
00000000000857BF test $1,%al
00000000000857C1 jne 0x0000000000085825
00000000000857C3 jmp 0x000000000008581B
00000000000857C5 mov 0x18(%rsp),%rdi
00000000000857CA lea 0x306320,%rax
00000000000857D1 mov %rax,0x5F8(%rsp)
00000000000857D9 movb $1,0x5F1(%rsp)
00000000000857E1 lea 0x3063F0,%rax
00000000000857E8 mov %rax,0x600(%rsp)
00000000000857F0 movb $5,0x5F0(%rsp)
00000000000857F8 add $8,%rdi
00000000000857FC lea 0x5F0(%rsp),%rsi
0000000000085804 mov $0x38,%edx
0000000000085809 call 0x000000000002E4B8
000000000008580E mov 0x18(%rsp),%rax
0000000000085813 movb $1,(%rax)
0000000000085816 jmp 0x0000000000085345
000000000008581B mov 0xD(%rsp),%al
000000000008581F test $1,%al
0000000000085821 jne 0x0000000000085885
0000000000085823 jmp 0x000000000008587B
0000000000085825 mov 0x18(%rsp),%rdi
000000000008582A lea 0x306350,%rax
0000000000085831 mov %rax,0x630(%rsp)
0000000000085839 movb $1,0x629(%rsp)
0000000000085841 lea 0x3063F0,%rax
0000000000085848 mov %rax,0x638(%rsp)
0000000000085850 movb $5,0x628(%rsp)
0000000000085858 add $8,%rdi
000000000008585C lea 0x628(%rsp),%rsi
0000000000085864 mov $0x38,%edx
0000000000085869 call 0x000000000002E4B8
000000000008586E mov 0x18(%rsp),%rax
0000000000085873 movb $1,(%rax)
0000000000085876 jmp 0x0000000000085345
000000000008587B mov 0xC(%rsp),%al
000000000008587F test $1,%al
0000000000085881 jne 0x00000000000858F5
0000000000085883 jmp 0x00000000000858DB
0000000000085885 mov 0x18(%rsp),%rdi
000000000008588A lea 0x306420,%rax
0000000000085891 mov %rax,0x668(%rsp)
0000000000085899 movb $1,0x661(%rsp)
00000000000858A1 lea 0x3063F0,%rax
00000000000858A8 mov %rax,0x670(%rsp)
00000000000858B0 movb $5,0x660(%rsp)
00000000000858B8 add $8,%rdi
00000000000858BC lea 0x660(%rsp),%rsi
00000000000858C4 mov $0x38,%edx
00000000000858C9 call 0x000000000002E4B8
00000000000858CE mov 0x18(%rsp),%rax
00000000000858D3 movb $1,(%rax)
00000000000858D6 jmp 0x0000000000085345
00000000000858DB lea 0x5E0(%rsp),%rdi
00000000000858E3 lea 0x304018,%rsi
00000000000858EA call 0x0000000000032210
00000000000858EF mov %al,0xB(%rsp)
00000000000858F3 jmp 0x000000000008594B
00000000000858F5 mov 0x18(%rsp),%rdi
00000000000858FA lea 0x306450,%rax
0000000000085901 mov %rax,0x6A0(%rsp)
0000000000085909 movb $1,0x699(%rsp)
0000000000085911 lea 0x3063F0,%rax
0000000000085918 mov %rax,0x6A8(%rsp)
0000000000085920 movb $5,0x698(%rsp)
0000000000085928 add $8,%rdi
000000000008592C lea 0x698(%rsp),%rsi
0000000000085934 mov $0x38,%edx
0000000000085939 call 0x000000000002E4B8
000000000008593E mov 0x18(%rsp),%rax
0000000000085943 movb $1,(%rax)
0000000000085946 jmp 0x0000000000085345
000000000008594B mov 0xB(%rsp),%al
000000000008594F test $1,%al
0000000000085951 jne 0x000000000008596F
0000000000085953 jmp 0x0000000000085955
0000000000085955 lea 0x5E0(%rsp),%rdi
000000000008595D lea 0x304028,%rsi
0000000000085964 call 0x0000000000032210
0000000000085969 mov %al,0xA(%rsp)
000000000008596D jmp 0x0000000000085983
000000000008596F movb $1,0x6D4(%rsp)
0000000000085977 testb $1,0x6D4(%rsp)
000000000008597F jne 0x00000000000859AC
0000000000085981 jmp 0x0000000000085992
0000000000085983 mov 0xA(%rsp),%al
0000000000085987 and $1,%al
0000000000085989 mov %al,0x6D4(%rsp)
0000000000085990 jmp 0x0000000000085977
0000000000085992 lea 0x5E0(%rsp),%rdi
000000000008599A lea 0x304038,%rsi
00000000000859A1 call 0x0000000000032210
00000000000859A6 mov %al,9(%rsp)
00000000000859AA jmp 0x00000000000859D1
00000000000859AC movb $1,0x5D8(%rsp)
00000000000859B4 movb $0,0x5D9(%rsp)
00000000000859BC movb $0,0x5DA(%rsp)
00000000000859C4 movb $0,0x5DB(%rsp)
00000000000859CC jmp 0x00000000000856A0
00000000000859D1 mov 9(%rsp),%al
00000000000859D5 test $1,%al
00000000000859D7 jne 0x00000000000859F5
00000000000859D9 jmp 0x00000000000859DB
00000000000859DB lea 0x5E0(%rsp),%rdi
00000000000859E3 lea 0x304048,%rsi
00000000000859EA call 0x0000000000032210
00000000000859EF mov %al,8(%rsp)
00000000000859F3 jmp 0x0000000000085A09
00000000000859F5 movb $1,0x6D5(%rsp)
00000000000859FD testb $1,0x6D5(%rsp)
0000000000085A05 jne 0x0000000000085A32
0000000000085A07 jmp 0x0000000000085A18
0000000000085A09 mov 8(%rsp),%al
0000000000085A0D and $1,%al
0000000000085A0F mov %al,0x6D5(%rsp)
0000000000085A16 jmp 0x00000000000859FD
0000000000085A18 lea 0x5E0(%rsp),%rdi
0000000000085A20 lea 0x304058,%rsi
0000000000085A27 call 0x0000000000032210
0000000000085A2C mov %al,7(%rsp)
0000000000085A30 jmp 0x0000000000085A57
0000000000085A32 movb $0,0x5D8(%rsp)
0000000000085A3A movb $1,0x5D9(%rsp)
0000000000085A42 movb $0,0x5DA(%rsp)
0000000000085A4A movb $0,0x5DB(%rsp)
0000000000085A52 jmp 0x00000000000856A0
0000000000085A57 mov 7(%rsp),%al
0000000000085A5B test $1,%al
0000000000085A5D jne 0x0000000000085A7B
0000000000085A5F jmp 0x0000000000085A61
0000000000085A61 lea 0x5E0(%rsp),%rdi
0000000000085A69 lea 0x304068,%rsi
0000000000085A70 call 0x0000000000032210
0000000000085A75 mov %al,6(%rsp)
0000000000085A79 jmp 0x0000000000085A8F
0000000000085A7B movb $1,0x6D6(%rsp)
0000000000085A83 testb $1,0x6D6(%rsp)
0000000000085A8B jne 0x0000000000085AB8
0000000000085A8D jmp 0x0000000000085A9E
0000000000085A8F mov 6(%rsp),%al
0000000000085A93 and $1,%al
0000000000085A95 mov %al,0x6D6(%rsp)
0000000000085A9C jmp 0x0000000000085A83
0000000000085A9E lea 0x5E0(%rsp),%rdi
0000000000085AA6 lea 0x304078,%rsi
0000000000085AAD call 0x0000000000032210
0000000000085AB2 mov %al,5(%rsp)
0000000000085AB6 jmp 0x0000000000085ADD
0000000000085AB8 movb $0,0x5D8(%rsp)
0000000000085AC0 movb $0,0x5D9(%rsp)
0000000000085AC8 movb $1,0x5DA(%rsp)
0000000000085AD0 movb $0,0x5DB(%rsp)
0000000000085AD8 jmp 0x00000000000856A0
0000000000085ADD mov 5(%rsp),%al
0000000000085AE1 test $1,%al
0000000000085AE3 jne 0x0000000000085B01
0000000000085AE5 jmp 0x0000000000085AE7
0000000000085AE7 lea 0x5E0(%rsp),%rdi
0000000000085AEF lea 0x304088,%rsi
0000000000085AF6 call 0x0000000000032210
0000000000085AFB mov %al,4(%rsp)
0000000000085AFF jmp 0x0000000000085B15
0000000000085B01 movb $1,0x6D7(%rsp)
0000000000085B09 testb $1,0x6D7(%rsp)
0000000000085B11 jne 0x0000000000085B43
0000000000085B13 jmp 0x0000000000085B24
0000000000085B15 mov 4(%rsp),%al
0000000000085B19 and $1,%al
0000000000085B1B mov %al,0x6D7(%rsp)
0000000000085B22 jmp 0x0000000000085B09
0000000000085B24 mov 0x5E0(%rsp),%rsi
0000000000085B2C mov 0x5E8(%rsp),%rdx
0000000000085B34 lea 0x710(%rsp),%rdi
0000000000085B3C call 0x0000000000032560
0000000000085B41 jmp 0x0000000000085B68
0000000000085B43 movb $0,0x5D8(%rsp)
0000000000085B4B movb $0,0x5D9(%rsp)
0000000000085B53 movb $0,0x5DA(%rsp)
0000000000085B5B movb $1,0x5DB(%rsp)
0000000000085B63 jmp 0x00000000000856A0
0000000000085B68 mov 0x18(%rsp),%rdi
0000000000085B6D lea 0x3063F0,%rax
0000000000085B74 mov %rax,0x6E0(%rsp)
0000000000085B7C mov 0x710(%rsp),%rax
0000000000085B84 mov %rax,0x6E8(%rsp)
0000000000085B8C mov 0x718(%rsp),%rax
0000000000085B94 mov %rax,0x6F0(%rsp)
0000000000085B9C mov 0x720(%rsp),%rax
0000000000085BA4 mov %rax,0x6F8(%rsp)
0000000000085BAC movb $1,0x6D8(%rsp)
0000000000085BB4 add $8,%rdi
0000000000085BB8 lea 0x6D8(%rsp),%rsi
0000000000085BC0 mov $0x38,%edx
0000000000085BC5 call 0x000000000002E4B8
0000000000085BCA mov 0x18(%rsp),%rax
0000000000085BCF movb $1,(%rax)
0000000000085BD2 jmp 0x0000000000085345

 Function call queue at function 85280: [75f50, 86090, 32560]

Analyzing function at 75f50
0000000000075F50 sub $0xB8,%rsp
0000000000075F57 mov %rdi,(%rsp)
0000000000075F5B mov %rdi,8(%rsp)
0000000000075F60 lea 0x10(%rsp),%rdi
0000000000075F65 mov $0x38,%edx
0000000000075F6A call 0x000000000002E4B8
0000000000075F6F lea 0x80(%rsp),%rdi
0000000000075F77 lea 0x10(%rsp),%rsi
0000000000075F7C mov $0x38,%edx
0000000000075F81 call 0x000000000002E4B8
0000000000075F86 lea 0x48(%rsp),%rdi
0000000000075F8B lea 0x80(%rsp),%rsi
0000000000075F93 call 0x0000000000089330
0000000000075F98 mov (%rsp),%rdi
0000000000075F9C add $8,%rdi
0000000000075FA0 lea 0x48(%rsp),%rsi
0000000000075FA5 mov $0x38,%edx
0000000000075FAA call 0x000000000002E4B8
0000000000075FAF mov (%rsp),%rcx
0000000000075FB3 mov 8(%rsp),%rax
0000000000075FB8 movb $1,(%rcx)
0000000000075FBB add $0xB8,%rsp
0000000000075FC2 ret

 Function call queue at function 75f50: []

Analyzing function at 86090
0000000000086090 push %rax
0000000000086091 movb $1,(%rsp)
0000000000086095 movb $0,1(%rsp)
000000000008609A movb $0,2(%rsp)
000000000008609F movb $0,3(%rsp)
00000000000860A4 mov (%rsp),%eax
00000000000860A7 pop %rcx
00000000000860A8 ret

 Function call queue at function 86090: []

Analyzing function at 32560
0000000000032560 push %rax
0000000000032561 mov %rdi,%rax
0000000000032564 mov %rax,(%rsp)
0000000000032568 callq *0x314E20
000000000003256E mov (%rsp),%rax
0000000000032572 pop %rcx
0000000000032573 ret

 Function call queue at function 32560: []

Analyzing function at 790b0
00000000000790B0 sub $0xD8,%rsp
00000000000790B7 mov %rsi,8(%rsp)
00000000000790BC mov %rdi,0x10(%rsp)
00000000000790C1 mov %rdi,0x18(%rsp)
00000000000790C6 movzbl (%rsi),%eax
00000000000790C9 test $1,%al
00000000000790CB je 0x00000000000790D3
00000000000790CD jmp 0x00000000000790CF
00000000000790CF jmp 0x00000000000790F8
00000000000790D1 ud2
00000000000790D3 mov 0x10(%rsp),%rax
00000000000790D8 mov 8(%rsp),%rcx
00000000000790DD mov 1(%rcx),%ecx
00000000000790E0 mov %ecx,0x20(%rsp)
00000000000790E4 mov 0x20(%rsp),%ecx
00000000000790E8 mov %ecx,0x28(%rsp)
00000000000790EC mov 0x28(%rsp),%ecx
00000000000790F0 mov %ecx,1(%rax)
00000000000790F3 movb $0,(%rax)
00000000000790F6 jmp 0x000000000007915E
00000000000790F8 mov 8(%rsp),%rsi
00000000000790FD add $8,%rsi
0000000000079101 lea 0x30(%rsp),%rdi
0000000000079106 mov $0x38,%edx
000000000007910B call 0x000000000002E4B8
0000000000079110 lea 0xA0(%rsp),%rdi
0000000000079118 lea 0x30(%rsp),%rsi
000000000007911D mov $0x38,%edx
0000000000079122 call 0x000000000002E4B8
0000000000079127 lea 0x68(%rsp),%rdi
000000000007912C lea 0xA0(%rsp),%rsi
0000000000079134 mov $0x38,%edx
0000000000079139 call 0x000000000002E4B8
000000000007913E mov 0x10(%rsp),%rdi
0000000000079143 add $8,%rdi
0000000000079147 lea 0x68(%rsp),%rsi
000000000007914C mov $0x38,%edx
0000000000079151 call 0x000000000002E4B8
0000000000079156 mov 0x10(%rsp),%rax
000000000007915B movb $1,(%rax)
000000000007915E mov 0x18(%rsp),%rax
0000000000079163 add $0xD8,%rsp
000000000007916A ret

 Function call queue at function 790b0: []

Analyzing function at 76150
0000000000076150 sub $0xB8,%rsp
0000000000076157 mov %rdi,(%rsp)
000000000007615B mov %rdi,8(%rsp)
0000000000076160 lea 0x10(%rsp),%rdi
0000000000076165 mov $0x38,%edx
000000000007616A call 0x000000000002E4B8
000000000007616F lea 0x80(%rsp),%rdi
0000000000076177 lea 0x10(%rsp),%rsi
000000000007617C mov $0x38,%edx
0000000000076181 call 0x000000000002E4B8
0000000000076186 lea 0x48(%rsp),%rdi
000000000007618B lea 0x80(%rsp),%rsi
0000000000076193 call 0x0000000000089330
0000000000076198 mov (%rsp),%rdi
000000000007619C add $8,%rdi
00000000000761A0 lea 0x48(%rsp),%rsi
00000000000761A5 mov $0x38,%edx
00000000000761AA call 0x000000000002E4B8
00000000000761AF mov (%rsp),%rcx
00000000000761B3 mov 8(%rsp),%rax
00000000000761B8 movb $1,(%rcx)
00000000000761BB add $0xB8,%rsp
00000000000761C2 ret

 Function call queue at function 76150: []

Analyzing function at 78a90
0000000000078A90 sub $0xE8,%rsp
0000000000078A97 mov %rsi,8(%rsp)
0000000000078A9C mov %rdi,0x10(%rsp)
0000000000078AA1 mov %rdi,0x18(%rsp)
0000000000078AA6 movzbl (%rsi),%eax
0000000000078AA9 test $1,%al
0000000000078AAB je 0x0000000000078AB3
0000000000078AAD jmp 0x0000000000078AAF
0000000000078AAF jmp 0x0000000000078B0A
0000000000078AB1 ud2
0000000000078AB3 mov 0x10(%rsp),%rax
0000000000078AB8 mov 8(%rsp),%rcx
0000000000078ABD mov 1(%rcx),%rdx
0000000000078AC1 mov %rdx,0x20(%rsp)
0000000000078AC6 mov 9(%rcx),%edx
0000000000078AC9 mov %edx,0x28(%rsp)
0000000000078ACD mov 0xD(%rcx),%cl
0000000000078AD0 mov %cl,0x2C(%rsp)
0000000000078AD4 mov 0x20(%rsp),%rcx
0000000000078AD9 mov %rcx,0x30(%rsp)
0000000000078ADE mov 0x28(%rsp),%ecx
0000000000078AE2 mov %ecx,0x38(%rsp)
0000000000078AE6 mov 0x2C(%rsp),%cl
0000000000078AEA mov %cl,0x3C(%rsp)
0000000000078AEE mov 0x30(%rsp),%rcx
0000000000078AF3 mov %rcx,1(%rax)
0000000000078AF7 mov 0x38(%rsp),%ecx
0000000000078AFB mov %ecx,9(%rax)
0000000000078AFE mov 0x3C(%rsp),%cl
0000000000078B02 mov %cl,0xD(%rax)
0000000000078B05 movb $0,(%rax)
0000000000078B08 jmp 0x0000000000078B70
0000000000078B0A mov 8(%rsp),%rsi
0000000000078B0F add $8,%rsi
0000000000078B13 lea 0x40(%rsp),%rdi
0000000000078B18 mov $0x38,%edx
0000000000078B1D call 0x000000000002E4B8
0000000000078B22 lea 0xB0(%rsp),%rdi
0000000000078B2A lea 0x40(%rsp),%rsi
0000000000078B2F mov $0x38,%edx
0000000000078B34 call 0x000000000002E4B8
0000000000078B39 lea 0x78(%rsp),%rdi
0000000000078B3E lea 0xB0(%rsp),%rsi
0000000000078B46 mov $0x38,%edx
0000000000078B4B call 0x000000000002E4B8
0000000000078B50 mov 0x10(%rsp),%rdi
0000000000078B55 add $8,%rdi
0000000000078B59 lea 0x78(%rsp),%rsi
0000000000078B5E mov $0x38,%edx
0000000000078B63 call 0x000000000002E4B8
0000000000078B68 mov 0x10(%rsp),%rax
0000000000078B6D movb $1,(%rax)
0000000000078B70 mov 0x18(%rsp),%rax
0000000000078B75 add $0xE8,%rsp
0000000000078B7C ret

 Function call queue at function 78a90: []

Analyzing function at 75980
0000000000075980 sub $0xB8,%rsp
0000000000075987 mov %rdi,(%rsp)
000000000007598B mov %rdi,8(%rsp)
0000000000075990 lea 0x10(%rsp),%rdi
0000000000075995 mov $0x38,%edx
000000000007599A call 0x000000000002E4B8
000000000007599F lea 0x80(%rsp),%rdi
00000000000759A7 lea 0x10(%rsp),%rsi
00000000000759AC mov $0x38,%edx
00000000000759B1 call 0x000000000002E4B8
00000000000759B6 lea 0x48(%rsp),%rdi
00000000000759BB lea 0x80(%rsp),%rsi
00000000000759C3 call 0x0000000000089330
00000000000759C8 mov (%rsp),%rdi
00000000000759CC add $8,%rdi
00000000000759D0 lea 0x48(%rsp),%rsi
00000000000759D5 mov $0x38,%edx
00000000000759DA call 0x000000000002E4B8
00000000000759DF mov (%rsp),%rcx
00000000000759E3 mov 8(%rsp),%rax
00000000000759E8 movb $1,(%rcx)
00000000000759EB add $0xB8,%rsp
00000000000759F2 ret

 Function call queue at function 75980: []

Analyzing function at 78c40
0000000000078C40 sub $0xE8,%rsp
0000000000078C47 mov %rsi,8(%rsp)
0000000000078C4C mov %rdi,0x10(%rsp)
0000000000078C51 mov %rdi,0x18(%rsp)
0000000000078C56 movzbl (%rsi),%eax
0000000000078C59 test $1,%al
0000000000078C5B je 0x0000000000078C63
0000000000078C5D jmp 0x0000000000078C5F
0000000000078C5F jmp 0x0000000000078CAA
0000000000078C61 ud2
0000000000078C63 mov 0x10(%rsp),%rax
0000000000078C68 mov 8(%rsp),%rcx
0000000000078C6D mov 1(%rcx),%rdx
0000000000078C71 mov %rdx,0x20(%rsp)
0000000000078C76 mov 9(%rcx),%rcx
0000000000078C7A mov %rcx,0x28(%rsp)
0000000000078C7F mov 0x20(%rsp),%rcx
0000000000078C84 mov %rcx,0x30(%rsp)
0000000000078C89 mov 0x28(%rsp),%rcx
0000000000078C8E mov %rcx,0x38(%rsp)
0000000000078C93 mov 0x30(%rsp),%rcx
0000000000078C98 mov %rcx,1(%rax)
0000000000078C9C mov 0x38(%rsp),%rcx
0000000000078CA1 mov %rcx,9(%rax)
0000000000078CA5 movb $0,(%rax)
0000000000078CA8 jmp 0x0000000000078D10
0000000000078CAA mov 8(%rsp),%rsi
0000000000078CAF add $8,%rsi
0000000000078CB3 lea 0x40(%rsp),%rdi
0000000000078CB8 mov $0x38,%edx
0000000000078CBD call 0x000000000002E4B8
0000000000078CC2 lea 0xB0(%rsp),%rdi
0000000000078CCA lea 0x40(%rsp),%rsi
0000000000078CCF mov $0x38,%edx
0000000000078CD4 call 0x000000000002E4B8
0000000000078CD9 lea 0x78(%rsp),%rdi
0000000000078CDE lea 0xB0(%rsp),%rsi
0000000000078CE6 mov $0x38,%edx
0000000000078CEB call 0x000000000002E4B8
0000000000078CF0 mov 0x10(%rsp),%rdi
0000000000078CF5 add $8,%rdi
0000000000078CF9 lea 0x78(%rsp),%rsi
0000000000078CFE mov $0x38,%edx
0000000000078D03 call 0x000000000002E4B8
0000000000078D08 mov 0x10(%rsp),%rax
0000000000078D0D movb $1,(%rax)
0000000000078D10 mov 0x18(%rsp),%rax
0000000000078D15 add $0xE8,%rsp
0000000000078D1C ret

 Function call queue at function 78c40: []

Analyzing function at 78dd0
0000000000078DD0 sub $0xF8,%rsp
0000000000078DD7 mov %rsi,8(%rsp)
0000000000078DDC mov %rdi,0x10(%rsp)
0000000000078DE1 mov %rdi,0x18(%rsp)
0000000000078DE6 movzbl (%rsi),%eax
0000000000078DE9 test $1,%al
0000000000078DEB je 0x0000000000078DF3
0000000000078DED jmp 0x0000000000078DEF
0000000000078DEF jmp 0x0000000000078E56
0000000000078DF1 ud2
0000000000078DF3 mov 0x10(%rsp),%rax
0000000000078DF8 mov 8(%rsp),%rcx
0000000000078DFD mov 1(%rcx),%rdx
0000000000078E01 mov %rdx,0x20(%rsp)
0000000000078E06 mov 9(%rcx),%rdx
0000000000078E0A mov %rdx,0x28(%rsp)
0000000000078E0F mov 0x11(%rcx),%cx
0000000000078E13 mov %cx,0x30(%rsp)
0000000000078E18 mov 0x20(%rsp),%rcx
0000000000078E1D mov %rcx,0x38(%rsp)
0000000000078E22 mov 0x28(%rsp),%rcx
0000000000078E27 mov %rcx,0x40(%rsp)
0000000000078E2C mov 0x30(%rsp),%cx
0000000000078E31 mov %cx,0x48(%rsp)
0000000000078E36 mov 0x38(%rsp),%rcx
0000000000078E3B mov %rcx,1(%rax)
0000000000078E3F mov 0x40(%rsp),%rcx
0000000000078E44 mov %rcx,9(%rax)
0000000000078E48 mov 0x48(%rsp),%cx
0000000000078E4D mov %cx,0x11(%rax)
0000000000078E51 movb $0,(%rax)
0000000000078E54 jmp 0x0000000000078EC2
0000000000078E56 mov 8(%rsp),%rsi
0000000000078E5B add $8,%rsi
0000000000078E5F lea 0x50(%rsp),%rdi
0000000000078E64 mov $0x38,%edx
0000000000078E69 call 0x000000000002E4B8
0000000000078E6E lea 0xC0(%rsp),%rdi
0000000000078E76 lea 0x50(%rsp),%rsi
0000000000078E7B mov $0x38,%edx
0000000000078E80 call 0x000000000002E4B8
0000000000078E85 lea 0x88(%rsp),%rdi
0000000000078E8D lea 0xC0(%rsp),%rsi
0000000000078E95 mov $0x38,%edx
0000000000078E9A call 0x000000000002E4B8
0000000000078E9F mov 0x10(%rsp),%rdi
0000000000078EA4 add $8,%rdi
0000000000078EA8 lea 0x88(%rsp),%rsi
0000000000078EB0 mov $0x38,%edx
0000000000078EB5 call 0x000000000002E4B8
0000000000078EBA mov 0x10(%rsp),%rax
0000000000078EBF movb $1,(%rax)
0000000000078EC2 mov 0x18(%rsp),%rax
0000000000078EC7 add $0xF8,%rsp
0000000000078ECE ret

 Function call queue at function 78dd0: []

Analyzing function at a5300
00000000000A5300 sub $0x78,%rsp
00000000000A5304 call 0x00000000000963E0
00000000000A5309 mov %rdx,0x38(%rsp)
00000000000A530E mov %rax,0x40(%rsp)
00000000000A5313 jmp 0x00000000000A532A
00000000000A5315 jmp 0x00000000000A53A7
00000000000A531A mov %rax,%rcx
00000000000A531D mov %edx,%eax
00000000000A531F mov %rcx,0x68(%rsp)
00000000000A5324 mov %eax,0x70(%rsp)
00000000000A5328 jmp 0x00000000000A5315
00000000000A532A mov 0x38(%rsp),%rsi
00000000000A532F mov 0x40(%rsp),%rdi
00000000000A5334 call 0x00000000000A2A50
00000000000A5339 mov %rdx,0x28(%rsp)
00000000000A533E mov %rax,0x30(%rsp)
00000000000A5343 jmp 0x00000000000A5345
00000000000A5345 mov 0x28(%rsp),%rsi
00000000000A534A mov 0x30(%rsp),%rdi
00000000000A534F call 0x0000000000050FD0
00000000000A5354 mov %rdx,0x18(%rsp)
00000000000A5359 mov %rax,0x20(%rsp)
00000000000A535E jmp 0x00000000000A5360
00000000000A5360 mov 0x18(%rsp),%rax
00000000000A5365 mov 0x20(%rsp),%rcx
00000000000A536A mov %rcx,0x50(%rsp)
00000000000A536F mov %rax,0x58(%rsp)
00000000000A5374 lea 0x48(%rsp),%rax
00000000000A5379 mov %rax,0x60(%rsp)
00000000000A537E mov 0x60(%rsp),%rsi
00000000000A5383 lea 0x50(%rsp),%rdi
00000000000A5388 call 0x00000000000892F0
00000000000A538D mov %rax,0x10(%rsp)
00000000000A5392 jmp 0x00000000000A5394
00000000000A5394 mov 0x10(%rsp),%rdi
00000000000A5399 call 0x000000000006D8D0
00000000000A539E mov %rax,8(%rsp)
00000000000A53A3 jmp 0x00000000000A53A5
00000000000A53A5 jmp 0x00000000000A53B3
00000000000A53A7 mov 0x68(%rsp),%rdi
00000000000A53AC call 0x000000000002E3D0
00000000000A53B1 ud2
00000000000A53B3 mov 8(%rsp),%rax
00000000000A53B8 add $0x78,%rsp
00000000000A53BC ret

 Function call queue at function a5300: [892f0, 6d8d0]

Analyzing function at 892f0
00000000000892F0 push %rax
00000000000892F1 call 0x00000000000502D0
00000000000892F6 mov %rax,(%rsp)
00000000000892FA mov (%rsp),%rax
00000000000892FE pop %rcx
00000000000892FF ret

 Function call queue at function 892f0: []

Analyzing function at 6d8d0
000000000006D8D0 sub $0x28,%rsp
000000000006D8D4 mov %rdi,8(%rsp)
000000000006D8D9 movb $1,0x27(%rsp)
000000000006D8DE mov 8(%rsp),%rax
000000000006D8E3 test %rax,%rax
000000000006D8E6 setne %al
000000000006D8E9 movzbl %al,%eax
000000000006D8EC je 0x000000000006D8F4
000000000006D8EE jmp 0x000000000006D8F0
000000000006D8F0 jmp 0x000000000006D8FF
000000000006D8F2 ud2
000000000006D8F4 movq $0,0x10(%rsp)
000000000006D8FD jmp 0x000000000006D925
000000000006D8FF mov 8(%rsp),%rax
000000000006D904 movb $0,0x27(%rsp)
000000000006D909 mov %rax,0x18(%rsp)
000000000006D90E mov 0x18(%rsp),%rdi
000000000006D913 call 0x00000000000A5930
000000000006D918 mov %rax,(%rsp)
000000000006D91C mov (%rsp),%rax
000000000006D920 mov %rax,0x10(%rsp)
000000000006D925 testb $1,0x27(%rsp)
000000000006D92A jne 0x000000000006D936
000000000006D92C mov 0x10(%rsp),%rax
000000000006D931 add $0x28,%rsp
000000000006D935 ret
000000000006D936 jmp 0x000000000006D92C

 Function call queue at function 6d8d0: [a5930]

Analyzing function at a5930
00000000000A5930 mov %rdi,%rax
00000000000A5933 ret

 Function call queue at function a5930: []

Analyzing function at 6e6d0
000000000006E6D0 sub $1,%rsp
000000000006E6D4 mov $1,%eax
000000000006E6D9 xor %ecx,%ecx
000000000006E6DB cmpq $0,(%rdi)
000000000006E6DF cmove %rcx,%rax
000000000006E6E3 cmp $1,%rax
000000000006E6E7 jne 0x000000000006E6EF
000000000006E6E9 movb $1,(%rsp)
000000000006E6ED jmp 0x000000000006E6F3
000000000006E6EF movb $0,(%rsp)
000000000006E6F3 mov (%rsp),%al
000000000006E6F6 and $1,%al
000000000006E6F8 movzbl %al,%eax
000000000006E6FB add $1,%rsp
000000000006E6FF ret

 Function call queue at function 6e6d0: []

Analyzing function at 6e2d0
000000000006E2D0 sub $0x18,%rsp
000000000006E2D4 mov %rsi,8(%rsp)
000000000006E2D9 mov %rdi,0x10(%rsp)
000000000006E2DE mov 0x10(%rsp),%rax
000000000006E2E3 test %rax,%rax
000000000006E2E6 setne %al
000000000006E2E9 movzbl %al,%eax
000000000006E2EC je 0x000000000006E2F4
000000000006E2EE jmp 0x000000000006E2F0
000000000006E2F0 jmp 0x000000000006E310
000000000006E2F2 ud2
000000000006E2F4 mov 8(%rsp),%rdx
000000000006E2F9 lea 0x255699,%rdi
000000000006E300 lea 0x2FB10,%rax
000000000006E307 mov $0x2B,%esi
000000000006E30C call *%rax
000000000006E30E ud2
000000000006E310 mov 0x10(%rsp),%rax
000000000006E315 add $0x18,%rsp
000000000006E319 ret

 Function call queue at function 6e2d0: []

Analyzing function at a9530
00000000000A9530 mov %rdi,%rax
00000000000A9533 mov (%rsi),%rcx
00000000000A9536 mov %rcx,1(%rdi)
00000000000A953A mov 8(%rsi),%rcx
00000000000A953E mov %rcx,9(%rdi)
00000000000A9542 mov 0x10(%rsi),%cx
00000000000A9546 mov %cx,0x11(%rdi)
00000000000A954A movb $1,(%rdi)
00000000000A954D ret

 Function call queue at function a9530: []

Analyzing function at 65330
0000000000065330 sub $0x138,%rsp
0000000000065337 mov %rdi,0x20(%rsp)
000000000006533C mov %rdi,0x28(%rsp)
0000000000065341 movb $0,0x127(%rsp)
0000000000065349 movb $0,0x126(%rsp)
0000000000065351 mov 0x303590,%rdx
0000000000065358 mov 0x303598,%rcx
000000000006535F lea 0x48(%rsp),%rdi
0000000000065364 call 0x0000000000041970
0000000000065369 lea 0x30(%rsp),%rdi
000000000006536E lea 0x48(%rsp),%rsi
0000000000065373 call 0x000000000006E7B0
0000000000065378 movb $1,0x127(%rsp)
0000000000065380 mov $1,%eax
0000000000065385 xor %ecx,%ecx
0000000000065387 cmpq $0,0x30(%rsp)
000000000006538D cmove %rcx,%rax
0000000000065391 cmp $1,%rax
0000000000065395 jne 0x00000000000653D1
0000000000065397 movb $0,0x127(%rsp)
000000000006539F movb $1,0x126(%rsp)
00000000000653A7 mov 0x40(%rsp),%rax
00000000000653AC mov %rax,0x70(%rsp)
00000000000653B1 movups 0x30(%rsp),%xmm0
00000000000653B6 movaps %xmm0,0x60(%rsp)
00000000000653BB lea 0x60(%rsp),%rdi
00000000000653C0 call 0x00000000000649F0
00000000000653C5 mov %rdx,0x10(%rsp)
00000000000653CA mov %rax,0x18(%rsp)
00000000000653CF jmp 0x000000000006544A
00000000000653D1 mov 0x20(%rsp),%rax
00000000000653D6 movq $1,0x110(%rsp)
00000000000653E2 mov 0x110(%rsp),%rdx
00000000000653EA mov 0x118(%rsp),%rcx
00000000000653F2 mov %rdx,8(%rax)
00000000000653F6 mov %rcx,0x10(%rax)
00000000000653FA movq $0,(%rax)
0000000000065401 mov $1,%eax
0000000000065406 xor %ecx,%ecx
0000000000065408 cmpq $0,0x30(%rsp)
000000000006540E cmove %rcx,%rax
0000000000065412 cmp $1,%rax
0000000000065416 je 0x0000000000065619
000000000006541C jmp 0x0000000000065623
0000000000065421 lea 0xEFC00,%rax
0000000000065428 lea 0x60(%rsp),%rdi
000000000006542D call *%rax
000000000006542F jmp 0x00000000000655F0
0000000000065434 mov %rax,%rcx
0000000000065437 mov %edx,%eax
0000000000065439 mov %rcx,0x128(%rsp)
0000000000065441 mov %eax,0x130(%rsp)
0000000000065448 jmp 0x0000000000065421
000000000006544A mov 0x10(%rsp),%rdx
000000000006544F mov 0x18(%rsp),%rsi
0000000000065454 lea 0xBFFE0,%rax
000000000006545B lea 0x80(%rsp),%rdi
0000000000065463 call *%rax
0000000000065465 jmp 0x0000000000065467
0000000000065467 movzbl 0x80(%rsp),%eax
000000000006546F test $1,%al
0000000000065471 je 0x0000000000065479
0000000000065473 jmp 0x0000000000065475
0000000000065475 jmp 0x0000000000065494
0000000000065477 ud2
0000000000065479 mov 0x88(%rsp),%rdi
0000000000065481 call 0x0000000000048C30
0000000000065486 mov %rdx,(%rsp)
000000000006548A mov %rax,8(%rsp)
000000000006548F jmp 0x00000000000655C6
0000000000065494 mov 0x20(%rsp),%rdi
0000000000065499 mov 0x81(%rsp),%al
00000000000654A0 mov 0x303590,%rdx
00000000000654A7 mov 0x303598,%rcx
00000000000654AE mov %rdx,0x98(%rsp)
00000000000654B6 mov %rcx,0xA0(%rsp)
00000000000654BE movq $1,0x90(%rsp)
00000000000654CA movb $0,0x126(%rsp)
00000000000654D2 mov 0x60(%rsp),%rcx
00000000000654D7 mov %rcx,0xE0(%rsp)
00000000000654DF mov 0x68(%rsp),%rcx
00000000000654E4 mov %rcx,0xE8(%rsp)
00000000000654EC mov 0x70(%rsp),%rcx
00000000000654F1 mov %rcx,0xF0(%rsp)
00000000000654F9 mov 0x90(%rsp),%rcx
0000000000065501 mov %rcx,0xF8(%rsp)
0000000000065509 mov 0x98(%rsp),%rcx
0000000000065511 mov %rcx,0x100(%rsp)
0000000000065519 mov 0xA0(%rsp),%rcx
0000000000065521 mov %rcx,0x108(%rsp)
0000000000065529 mov 0xE0(%rsp),%rcx
0000000000065531 mov %rcx,0xB0(%rsp)
0000000000065539 mov 0xE8(%rsp),%rcx
0000000000065541 mov %rcx,0xB8(%rsp)
0000000000065549 mov 0xF0(%rsp),%rcx
0000000000065551 mov %rcx,0xC0(%rsp)
0000000000065559 mov 0xF8(%rsp),%rcx
0000000000065561 mov %rcx,0xC8(%rsp)
0000000000065569 mov 0x100(%rsp),%rcx
0000000000065571 mov %rcx,0xD0(%rsp)
0000000000065579 mov 0x108(%rsp),%rcx
0000000000065581 mov %rcx,0xD8(%rsp)
0000000000065589 mov %al,0xA9(%rsp)
0000000000065590 movb $8,0xA8(%rsp)
0000000000065598 add $8,%rdi
000000000006559C lea 0xA8(%rsp),%rsi
00000000000655A4 mov $0x38,%edx
00000000000655A9 call 0x000000000002E4B8
00000000000655AE mov 0x20(%rsp),%rax
00000000000655B3 movq $1,(%rax)
00000000000655BA testb $1,0x126(%rsp)
00000000000655C2 jne 0x000000000006560C
00000000000655C4 jmp 0x00000000000655FF
00000000000655C6 mov 0x20(%rsp),%rax
00000000000655CB mov (%rsp),%rcx
00000000000655CF mov 8(%rsp),%rdx
00000000000655D4 mov %rdx,8(%rax)
00000000000655D8 mov %rcx,0x10(%rax)
00000000000655DC movq $0,(%rax)
00000000000655E3 jmp 0x00000000000655BA
00000000000655E5 lea 0x2FBE0,%rax
00000000000655EC call *%rax
00000000000655EE ud2
00000000000655F0 mov 0x128(%rsp),%rdi
00000000000655F8 call 0x000000000002E3D0
00000000000655FD ud2
00000000000655FF movb $0,0x126(%rsp)
0000000000065607 jmp 0x0000000000065401
000000000006560C lea 0x60(%rsp),%rdi
0000000000065611 callq *0x311900
0000000000065617 jmp 0x00000000000655FF
0000000000065619 testb $1,0x127(%rsp)
0000000000065621 jne 0x0000000000065638
0000000000065623 mov 0x28(%rsp),%rax
0000000000065628 movb $0,0x127(%rsp)
0000000000065630 add $0x138,%rsp
0000000000065637 ret
0000000000065638 lea 0x30(%rsp),%rdi
000000000006563D callq *0x311900
0000000000065643 jmp 0x0000000000065623

 Function call queue at function 65330: [6e7b0, 649f0, 48c30]

Analyzing function at 6e7b0
000000000006E7B0 sub $0x68,%rsp
000000000006E7B4 mov %rsi,(%rsp)
000000000006E7B8 mov %rdi,8(%rsp)
000000000006E7BD mov %rdi,0x10(%rsp)
000000000006E7C2 movb $1,0x67(%rsp)
000000000006E7C7 mov (%rsi),%rax
000000000006E7CA test %rax,%rax
000000000006E7CD setne %al
000000000006E7D0 movzbl %al,%eax
000000000006E7D3 je 0x000000000006E7DB
000000000006E7D5 jmp 0x000000000006E7D7
000000000006E7D7 jmp 0x000000000006E7E9
000000000006E7D9 ud2
000000000006E7DB mov 8(%rsp),%rax
000000000006E7E0 movq $0,(%rax)
000000000006E7E7 jmp 0x000000000006E859
000000000006E7E9 mov 8(%rsp),%rdi
000000000006E7EE mov (%rsp),%rax
000000000006E7F2 mov (%rax),%rcx
000000000006E7F5 mov %rcx,0x18(%rsp)
000000000006E7FA mov 8(%rax),%rcx
000000000006E7FE mov %rcx,0x20(%rsp)
000000000006E803 mov 0x10(%rax),%rax
000000000006E807 mov %rax,0x28(%rsp)
000000000006E80C movb $0,0x67(%rsp)
000000000006E811 mov 0x18(%rsp),%rax
000000000006E816 mov %rax,0x48(%rsp)
000000000006E81B mov 0x20(%rsp),%rax
000000000006E820 mov %rax,0x50(%rsp)
000000000006E825 mov 0x28(%rsp),%rax
000000000006E82A mov %rax,0x58(%rsp)
000000000006E82F mov 0x48(%rsp),%rax
000000000006E834 mov %rax,0x30(%rsp)
000000000006E839 mov 0x50(%rsp),%rax
000000000006E83E mov %rax,0x38(%rsp)
000000000006E843 mov 0x58(%rsp),%rax
000000000006E848 mov %rax,0x40(%rsp)
000000000006E84D lea 0x30(%rsp),%rsi
000000000006E852 call 0x0000000000035430
000000000006E857 jmp 0x000000000006E859
000000000006E859 testb $1,0x67(%rsp)
000000000006E85E jne 0x000000000006E86A
000000000006E860 mov 0x10(%rsp),%rax
000000000006E865 add $0x68,%rsp
000000000006E869 ret
000000000006E86A jmp 0x000000000006E860

 Function call queue at function 6e7b0: [35430]

Analyzing function at 35430
0000000000035430 sub $0x48,%rsp
0000000000035434 mov %rdi,(%rsp)
0000000000035438 mov %rdi,8(%rsp)
000000000003543D mov (%rsi),%rax
0000000000035440 mov %rax,0x30(%rsp)
0000000000035445 mov 8(%rsi),%rax
0000000000035449 mov %rax,0x38(%rsp)
000000000003544E mov 0x10(%rsi),%rax
0000000000035452 mov %rax,0x40(%rsp)
0000000000035457 lea 0x10(%rsp),%rdi
000000000003545C lea 0x30(%rsp),%rsi
0000000000035461 call 0x0000000000088F60
0000000000035466 mov (%rsp),%rdi
000000000003546A lea 0x10(%rsp),%rsi
000000000003546F call 0x0000000000076910
0000000000035474 mov 8(%rsp),%rax
0000000000035479 add $0x48,%rsp
000000000003547D ret

 Function call queue at function 35430: [88f60, 76910]

Analyzing function at 88f60
0000000000088F60 sub $0x48,%rsp
0000000000088F64 mov %rdi,(%rsp)
0000000000088F68 mov %rdi,8(%rsp)
0000000000088F6D mov (%rsi),%rax
0000000000088F70 mov %rax,0x30(%rsp)
0000000000088F75 mov 8(%rsi),%rax
0000000000088F79 mov %rax,0x38(%rsp)
0000000000088F7E mov 0x10(%rsi),%rax
0000000000088F82 mov %rax,0x40(%rsp)
0000000000088F87 lea 0x10(%rsp),%rdi
0000000000088F8C lea 0x30(%rsp),%rsi
0000000000088F91 callq *0x3124D8
0000000000088F97 mov (%rsp),%rdi
0000000000088F9B lea 0x10(%rsp),%rsi
0000000000088FA0 call 0x0000000000077520
0000000000088FA5 mov 8(%rsp),%rax
0000000000088FAA add $0x48,%rsp
0000000000088FAE ret

 Function call queue at function 88f60: [77520]

Analyzing function at 77520
0000000000077520 sub $0xB8,%rsp
0000000000077527 mov %rsi,8(%rsp)
000000000007752C mov %rdi,0x10(%rsp)
0000000000077531 mov %rdi,0x18(%rsp)
0000000000077536 movb $1,0xB7(%rsp)
000000000007753E mov (%rsi),%rax
0000000000077541 test %rax,%rax
0000000000077544 je 0x000000000007754C
0000000000077546 jmp 0x0000000000077548
0000000000077548 jmp 0x00000000000775B6
000000000007754A ud2
000000000007754C mov 0x10(%rsp),%rax
0000000000077551 mov 8(%rsp),%rcx
0000000000077556 mov 8(%rcx),%rdx
000000000007755A mov %rdx,0x20(%rsp)
000000000007755F mov 0x10(%rcx),%rdx
0000000000077563 mov %rdx,0x28(%rsp)
0000000000077568 mov 0x18(%rcx),%rcx
000000000007756C mov %rcx,0x30(%rsp)
0000000000077571 mov 0x20(%rsp),%rcx
0000000000077576 mov %rcx,0x38(%rsp)
000000000007757B mov 0x28(%rsp),%rcx
0000000000077580 mov %rcx,0x40(%rsp)
0000000000077585 mov 0x30(%rsp),%rcx
000000000007758A mov %rcx,0x48(%rsp)
000000000007758F mov 0x38(%rsp),%rcx
0000000000077594 mov %rcx,8(%rax)
0000000000077598 mov 0x40(%rsp),%rcx
000000000007759D mov %rcx,0x10(%rax)
00000000000775A1 mov 0x48(%rsp),%rcx
00000000000775A6 mov %rcx,0x18(%rax)
00000000000775AA movq $0,(%rax)
00000000000775B1 jmp 0x000000000007766E
00000000000775B6 mov 8(%rsp),%rax
00000000000775BB mov 8(%rax),%rcx
00000000000775BF mov %rcx,0x50(%rsp)
00000000000775C4 mov 0x10(%rax),%rcx
00000000000775C8 mov %rcx,0x58(%rsp)
00000000000775CD mov 0x18(%rax),%rax
00000000000775D1 mov %rax,0x60(%rsp)
00000000000775D6 movb $0,0xB7(%rsp)
00000000000775DE mov 0x50(%rsp),%rax
00000000000775E3 mov %rax,0x98(%rsp)
00000000000775EB mov 0x58(%rsp),%rax
00000000000775F0 mov %rax,0xA0(%rsp)
00000000000775F8 mov 0x60(%rsp),%rax
00000000000775FD mov %rax,0xA8(%rsp)
0000000000077605 mov 0x98(%rsp),%rax
000000000007760D mov %rax,0x80(%rsp)
0000000000077615 mov 0xA0(%rsp),%rax
000000000007761D mov %rax,0x88(%rsp)
0000000000077625 mov 0xA8(%rsp),%rax
000000000007762D mov %rax,0x90(%rsp)
0000000000077635 lea 0x80(%rsp),%rsi
000000000007763D lea 0x68(%rsp),%rdi
0000000000077642 call 0x00000000000321B0
0000000000077647 mov 0x10(%rsp),%rax
000000000007764C mov 0x68(%rsp),%rcx
0000000000077651 mov %rcx,8(%rax)
0000000000077655 mov 0x70(%rsp),%rcx
000000000007765A mov %rcx,0x10(%rax)
000000000007765E mov 0x78(%rsp),%rcx
0000000000077663 mov %rcx,0x18(%rax)
0000000000077667 movq $1,(%rax)
000000000007766E testb $1,0xB7(%rsp)
0000000000077676 jne 0x0000000000077685
0000000000077678 mov 0x18(%rsp),%rax
000000000007767D add $0xB8,%rsp
0000000000077684 ret
0000000000077685 jmp 0x0000000000077678

 Function call queue at function 77520: [321b0]

Analyzing function at 321b0
00000000000321B0 sub $0x18,%rsp
00000000000321B4 mov %rdi,%rax
00000000000321B7 mov (%rsi),%rcx
00000000000321BA mov %rcx,(%rsp)
00000000000321BE mov 8(%rsi),%rcx
00000000000321C2 mov %rcx,8(%rsp)
00000000000321C7 mov 0x10(%rsi),%rcx
00000000000321CB mov %rcx,0x10(%rsp)
00000000000321D0 mov (%rsp),%rcx
00000000000321D4 mov %rcx,(%rdi)
00000000000321D7 mov 8(%rsp),%rcx
00000000000321DC mov %rcx,8(%rdi)
00000000000321E0 mov 0x10(%rsp),%rcx
00000000000321E5 mov %rcx,0x10(%rdi)
00000000000321E9 add $0x18,%rsp
00000000000321ED ret

 Function call queue at function 321b0: []

Analyzing function at 76910
0000000000076910 sub $0x68,%rsp
0000000000076914 mov %rsi,8(%rsp)
0000000000076919 mov %rdi,0x10(%rsp)
000000000007691E mov %rdi,0x18(%rsp)
0000000000076923 mov (%rsi),%rax
0000000000076926 test %rax,%rax
0000000000076929 je 0x0000000000076931
000000000007692B jmp 0x000000000007692D
000000000007692D jmp 0x0000000000076990
000000000007692F ud2
0000000000076931 mov 0x10(%rsp),%rax
0000000000076936 mov 8(%rsp),%rcx
000000000007693B mov 8(%rcx),%rdx
000000000007693F mov %rdx,0x20(%rsp)
0000000000076944 mov 0x10(%rcx),%rdx
0000000000076948 mov %rdx,0x28(%rsp)
000000000007694D mov 0x18(%rcx),%rcx
0000000000076951 mov %rcx,0x30(%rsp)
0000000000076956 mov 0x20(%rsp),%rcx
000000000007695B mov %rcx,0x38(%rsp)
0000000000076960 mov 0x28(%rsp),%rcx
0000000000076965 mov %rcx,0x40(%rsp)
000000000007696A mov 0x30(%rsp),%rcx
000000000007696F mov %rcx,0x48(%rsp)
0000000000076974 mov 0x38(%rsp),%rcx
0000000000076979 mov %rcx,(%rax)
000000000007697C mov 0x40(%rsp),%rcx
0000000000076981 mov %rcx,8(%rax)
0000000000076985 mov 0x48(%rsp),%rcx
000000000007698A mov %rcx,0x10(%rax)
000000000007698E jmp 0x00000000000769C9
0000000000076990 mov 0x10(%rsp),%rax
0000000000076995 mov 8(%rsp),%rcx
000000000007699A mov 8(%rcx),%rdx
000000000007699E mov %rdx,0x50(%rsp)
00000000000769A3 mov 0x10(%rcx),%rdx
00000000000769A7 mov %rdx,0x58(%rsp)
00000000000769AC mov 0x18(%rcx),%rcx
00000000000769B0 mov %rcx,0x60(%rsp)
00000000000769B5 movq $0,(%rax)
00000000000769BC lea 0x50(%rsp),%rdi
00000000000769C1 callq *0x315E60
00000000000769C7 jmp 0x00000000000769C9
00000000000769C9 mov 0x18(%rsp),%rax
00000000000769CE add $0x68,%rsp
00000000000769D2 ret

 Function call queue at function 76910: []

Analyzing function at 649f0
00000000000649F0 sub $0x28,%rsp
00000000000649F4 callq *0x311D60
00000000000649FA mov %rax,0x18(%rsp)
00000000000649FF mov %rdx,0x20(%rsp)
0000000000064A04 mov 0x20(%rsp),%rsi
0000000000064A09 mov 0x18(%rsp),%rdi
0000000000064A0E call 0x0000000000040C20
0000000000064A13 mov %rax,8(%rsp)
0000000000064A18 mov %rdx,0x10(%rsp)
0000000000064A1D mov 0x10(%rsp),%rdx
0000000000064A22 mov 8(%rsp),%rax
0000000000064A27 add $0x28,%rsp
0000000000064A2B ret

 Function call queue at function 649f0: [40c20]

Analyzing function at 40c20
0000000000040C20 sub $0x20,%rsp
0000000000040C24 mov %rdi,0x10(%rsp)
0000000000040C29 mov %rsi,0x18(%rsp)
0000000000040C2E mov 0x10(%rsp),%rax
0000000000040C33 mov %rax,(%rsp)
0000000000040C37 mov 0x18(%rsp),%rax
0000000000040C3C mov %rax,8(%rsp)
0000000000040C41 mov 8(%rsp),%rdx
0000000000040C46 mov (%rsp),%rax
0000000000040C4A add $0x20,%rsp
0000000000040C4E ret

 Function call queue at function 40c20: []

Analyzing function at 48c30
0000000000048C30 sub $0x10,%rsp
0000000000048C34 mov %rdi,8(%rsp)
0000000000048C39 movq $0,(%rsp)
0000000000048C41 mov (%rsp),%rax
0000000000048C45 mov 8(%rsp),%rdx
0000000000048C4A add $0x10,%rsp
0000000000048C4E ret

 Function call queue at function 48c30: []

Analyzing function at 78b80
0000000000078B80 sub $0xC8,%rsp
0000000000078B87 mov %rsi,8(%rsp)
0000000000078B8C mov %rdi,0x10(%rsp)
0000000000078B91 mov %rdi,0x18(%rsp)
0000000000078B96 mov (%rsi),%rax
0000000000078B99 test %rax,%rax
0000000000078B9C je 0x0000000000078BA4
0000000000078B9E jmp 0x0000000000078BA0
0000000000078BA0 jmp 0x0000000000078BC7
0000000000078BA2 ud2
0000000000078BA4 mov 0x10(%rsp),%rax
0000000000078BA9 mov 8(%rsp),%rcx
0000000000078BAE mov 8(%rcx),%rdx
0000000000078BB2 mov 0x10(%rcx),%rcx
0000000000078BB6 mov %rdx,8(%rax)
0000000000078BBA mov %rcx,0x10(%rax)
0000000000078BBE movq $0,(%rax)
0000000000078BC5 jmp 0x0000000000078C31
0000000000078BC7 mov 8(%rsp),%rsi
0000000000078BCC add $8,%rsi
0000000000078BD0 lea 0x20(%rsp),%rdi
0000000000078BD5 mov $0x38,%edx
0000000000078BDA call 0x000000000002E4B8
0000000000078BDF lea 0x90(%rsp),%rdi
0000000000078BE7 lea 0x20(%rsp),%rsi
0000000000078BEC mov $0x38,%edx
0000000000078BF1 call 0x000000000002E4B8
0000000000078BF6 lea 0x58(%rsp),%rdi
0000000000078BFB lea 0x90(%rsp),%rsi
0000000000078C03 mov $0x38,%edx
0000000000078C08 call 0x000000000002E4B8
0000000000078C0D mov 0x10(%rsp),%rdi
0000000000078C12 add $8,%rdi
0000000000078C16 lea 0x58(%rsp),%rsi
0000000000078C1B mov $0x38,%edx
0000000000078C20 call 0x000000000002E4B8
0000000000078C25 mov 0x10(%rsp),%rax
0000000000078C2A movq $1,(%rax)
0000000000078C31 mov 0x18(%rsp),%rax
0000000000078C36 add $0xC8,%rsp
0000000000078C3D ret

 Function call queue at function 78b80: []

Analyzing function at a9550
00000000000A9550 sub $0x18,%rsp
00000000000A9554 mov %rdi,8(%rsp)
00000000000A9559 mov %rdi,%rax
00000000000A955C mov %rax,0x10(%rsp)
00000000000A9561 add $8,%rdi
00000000000A9565 mov $0x28,%edx
00000000000A956A call 0x000000000002E4B8
00000000000A956F mov 8(%rsp),%rdi
00000000000A9574 mov 0x10(%rsp),%rax
00000000000A9579 movb $2,(%rdi)
00000000000A957C add $0x18,%rsp
00000000000A9580 ret

 Function call queue at function a9550: []

Analyzing function at 70a70
0000000000070A70 sub $0x148,%rsp
0000000000070A77 mov %rdi,8(%rsp)
0000000000070A7C mov %rdi,0x10(%rsp)
0000000000070A81 movb $2,0x32(%rsp)
0000000000070A86 lea 0x80(%rsp),%rdi
0000000000070A8E lea 0x306610,%rdx
0000000000070A95 call 0x00000000000314A0
0000000000070A9A lea 0x40(%rsp),%rdi
0000000000070A9F lea 0x80(%rsp),%rsi
0000000000070AA7 call 0x0000000000077B40
0000000000070AAC movzbl 0x40(%rsp),%eax
0000000000070AB1 test $1,%al
0000000000070AB3 je 0x0000000000070ABB
0000000000070AB5 jmp 0x0000000000070AB7
0000000000070AB7 jmp 0x0000000000070B34
0000000000070AB9 ud2
0000000000070ABB mov 8(%rsp),%rax
0000000000070AC0 mov 0x41(%rsp),%cl
0000000000070AC4 mov 0x30(%rsp),%rdx
0000000000070AC9 mov %rdx,0x18(%rsp)
0000000000070ACE mov 0x38(%rsp),%rdx
0000000000070AD3 mov %rdx,0x20(%rsp)
0000000000070AD8 movb $0,0x28(%rsp)
0000000000070ADD and $1,%cl
0000000000070AE0 mov %cl,0x29(%rsp)
0000000000070AE4 mov 0x18(%rsp),%rcx
0000000000070AE9 mov %rcx,0x130(%rsp)
0000000000070AF1 mov 0x20(%rsp),%rcx
0000000000070AF6 mov %rcx,0x138(%rsp)
0000000000070AFE mov 0x28(%rsp),%cx
0000000000070B03 mov %cx,0x140(%rsp)
0000000000070B0B mov 0x130(%rsp),%rcx
0000000000070B13 mov %rcx,1(%rax)
0000000000070B17 mov 0x138(%rsp),%rcx
0000000000070B1F mov %rcx,9(%rax)
0000000000070B23 mov 0x140(%rsp),%cx
0000000000070B2B mov %cx,0x11(%rax)
0000000000070B2F movb $0,(%rax)
0000000000070B32 jmp 0x0000000000070B84
0000000000070B34 lea 0x40(%rsp),%rsi
0000000000070B39 add $8,%rsi
0000000000070B3D lea 0xC0(%rsp),%rdi
0000000000070B45 mov $0x38,%edx
0000000000070B4A call 0x000000000002E4B8
0000000000070B4F lea 0xF8(%rsp),%rdi
0000000000070B57 lea 0xC0(%rsp),%rsi
0000000000070B5F mov $0x38,%edx
0000000000070B64 call 0x000000000002E4B8
0000000000070B69 mov 8(%rsp),%rdi
0000000000070B6E lea 0xF8(%rsp),%rsi
0000000000070B76 lea 0x303A88,%rdx
0000000000070B7D call 0x0000000000075980
0000000000070B82 jmp 0x0000000000070B84
0000000000070B84 mov 0x10(%rsp),%rax
0000000000070B89 add $0x148,%rsp
0000000000070B90 ret

 Function call queue at function 70a70: []

Analyzing function at 78490
0000000000078490 sub $0x128,%rsp
0000000000078497 mov %rsi,8(%rsp)
000000000007849C mov %rdi,0x10(%rsp)
00000000000784A1 mov %rdi,0x18(%rsp)
00000000000784A6 mov (%rsi),%rax
00000000000784A9 test %rax,%rax
00000000000784AC je 0x00000000000784B4
00000000000784AE jmp 0x00000000000784B0
00000000000784B0 jmp 0x0000000000078506
00000000000784B2 ud2
00000000000784B4 mov 8(%rsp),%rsi
00000000000784B9 add $8,%rsi
00000000000784BD lea 0x20(%rsp),%rdi
00000000000784C2 mov $0x30,%edx
00000000000784C7 call 0x000000000002E4B8
00000000000784CC lea 0x50(%rsp),%rdi
00000000000784D1 lea 0x20(%rsp),%rsi
00000000000784D6 mov $0x30,%edx
00000000000784DB call 0x000000000002E4B8
00000000000784E0 mov 0x10(%rsp),%rdi
00000000000784E5 add $8,%rdi
00000000000784E9 lea 0x50(%rsp),%rsi
00000000000784EE mov $0x30,%edx
00000000000784F3 call 0x000000000002E4B8
00000000000784F8 mov 0x10(%rsp),%rax
00000000000784FD movq $0,(%rax)
0000000000078504 jmp 0x000000000007857C
0000000000078506 mov 8(%rsp),%rsi
000000000007850B add $8,%rsi
000000000007850F lea 0x80(%rsp),%rdi
0000000000078517 mov $0x38,%edx
000000000007851C call 0x000000000002E4B8
0000000000078521 lea 0xF0(%rsp),%rdi
0000000000078529 lea 0x80(%rsp),%rsi
0000000000078531 mov $0x38,%edx
0000000000078536 call 0x000000000002E4B8
000000000007853B lea 0xB8(%rsp),%rdi
0000000000078543 lea 0xF0(%rsp),%rsi
000000000007854B mov $0x38,%edx
0000000000078550 call 0x000000000002E4B8
0000000000078555 mov 0x10(%rsp),%rdi
000000000007855A add $8,%rdi
000000000007855E lea 0xB8(%rsp),%rsi
0000000000078566 mov $0x38,%edx
000000000007856B call 0x000000000002E4B8
0000000000078570 mov 0x10(%rsp),%rax
0000000000078575 movq $1,(%rax)
000000000007857C mov 0x18(%rsp),%rax
0000000000078581 add $0x128,%rsp
0000000000078588 ret

 Function call queue at function 78490: []

Analyzing function at 5f050
000000000005F050 sub $0x138,%rsp
000000000005F057 mov %rdi,0x20(%rsp)
000000000005F05C mov %rdi,0x28(%rsp)
000000000005F061 movb $0,0x127(%rsp)
000000000005F069 movb $0,0x126(%rsp)
000000000005F071 mov 0x303530,%rdx
000000000005F078 mov 0x303538,%rcx
000000000005F07F lea 0x48(%rsp),%rdi
000000000005F084 call 0x0000000000041970
000000000005F089 lea 0x30(%rsp),%rdi
000000000005F08E lea 0x48(%rsp),%rsi
000000000005F093 call 0x000000000006E8F0
000000000005F098 movb $1,0x127(%rsp)
000000000005F0A0 mov $1,%eax
000000000005F0A5 xor %ecx,%ecx
000000000005F0A7 cmpq $0,0x30(%rsp)
000000000005F0AD cmove %rcx,%rax
000000000005F0B1 cmp $1,%rax
000000000005F0B5 jne 0x000000000005F0F1
000000000005F0B7 movb $0,0x127(%rsp)
000000000005F0BF movb $1,0x126(%rsp)
000000000005F0C7 mov 0x40(%rsp),%rax
000000000005F0CC mov %rax,0x70(%rsp)
000000000005F0D1 movups 0x30(%rsp),%xmm0
000000000005F0D6 movaps %xmm0,0x60(%rsp)
000000000005F0DB lea 0x60(%rsp),%rdi
000000000005F0E0 call 0x00000000000649F0
000000000005F0E5 mov %rdx,0x10(%rsp)
000000000005F0EA mov %rax,0x18(%rsp)
000000000005F0EF jmp 0x000000000005F16A
000000000005F0F1 mov 0x20(%rsp),%rax
000000000005F0F6 movq $1,0x110(%rsp)
000000000005F102 mov 0x110(%rsp),%rdx
000000000005F10A mov 0x118(%rsp),%rcx
000000000005F112 mov %rdx,8(%rax)
000000000005F116 mov %rcx,0x10(%rax)
000000000005F11A movq $0,(%rax)
000000000005F121 mov $1,%eax
000000000005F126 xor %ecx,%ecx
000000000005F128 cmpq $0,0x30(%rsp)
000000000005F12E cmove %rcx,%rax
000000000005F132 cmp $1,%rax
000000000005F136 je 0x000000000005F339
000000000005F13C jmp 0x000000000005F343
000000000005F141 lea 0xEFC00,%rax
000000000005F148 lea 0x60(%rsp),%rdi
000000000005F14D call *%rax
000000000005F14F jmp 0x000000000005F310
000000000005F154 mov %rax,%rcx
000000000005F157 mov %edx,%eax
000000000005F159 mov %rcx,0x128(%rsp)
000000000005F161 mov %eax,0x130(%rsp)
000000000005F168 jmp 0x000000000005F141
000000000005F16A mov 0x10(%rsp),%rdx
000000000005F16F mov 0x18(%rsp),%rsi
000000000005F174 lea 0xBFFE0,%rax
000000000005F17B lea 0x80(%rsp),%rdi
000000000005F183 call *%rax
000000000005F185 jmp 0x000000000005F187
000000000005F187 movzbl 0x80(%rsp),%eax
000000000005F18F test $1,%al
000000000005F191 je 0x000000000005F199
000000000005F193 jmp 0x000000000005F195
000000000005F195 jmp 0x000000000005F1B4
000000000005F197 ud2
000000000005F199 mov 0x88(%rsp),%rdi
000000000005F1A1 call 0x00000000000A9720
000000000005F1A6 mov %rdx,(%rsp)
000000000005F1AA mov %rax,8(%rsp)
000000000005F1AF jmp 0x000000000005F2E6
000000000005F1B4 mov 0x20(%rsp),%rdi
000000000005F1B9 mov 0x81(%rsp),%al
000000000005F1C0 mov 0x303530,%rdx
000000000005F1C7 mov 0x303538,%rcx
000000000005F1CE mov %rdx,0x98(%rsp)
000000000005F1D6 mov %rcx,0xA0(%rsp)
000000000005F1DE movq $1,0x90(%rsp)
000000000005F1EA movb $0,0x126(%rsp)
000000000005F1F2 mov 0x60(%rsp),%rcx
000000000005F1F7 mov %rcx,0xE0(%rsp)
000000000005F1FF mov 0x68(%rsp),%rcx
000000000005F204 mov %rcx,0xE8(%rsp)
000000000005F20C mov 0x70(%rsp),%rcx
000000000005F211 mov %rcx,0xF0(%rsp)
000000000005F219 mov 0x90(%rsp),%rcx
000000000005F221 mov %rcx,0xF8(%rsp)
000000000005F229 mov 0x98(%rsp),%rcx
000000000005F231 mov %rcx,0x100(%rsp)
000000000005F239 mov 0xA0(%rsp),%rcx
000000000005F241 mov %rcx,0x108(%rsp)
000000000005F249 mov 0xE0(%rsp),%rcx
000000000005F251 mov %rcx,0xB0(%rsp)
000000000005F259 mov 0xE8(%rsp),%rcx
000000000005F261 mov %rcx,0xB8(%rsp)
000000000005F269 mov 0xF0(%rsp),%rcx
000000000005F271 mov %rcx,0xC0(%rsp)
000000000005F279 mov 0xF8(%rsp),%rcx
000000000005F281 mov %rcx,0xC8(%rsp)
000000000005F289 mov 0x100(%rsp),%rcx
000000000005F291 mov %rcx,0xD0(%rsp)
000000000005F299 mov 0x108(%rsp),%rcx
000000000005F2A1 mov %rcx,0xD8(%rsp)
000000000005F2A9 mov %al,0xA9(%rsp)
000000000005F2B0 movb $8,0xA8(%rsp)
000000000005F2B8 add $8,%rdi
000000000005F2BC lea 0xA8(%rsp),%rsi
000000000005F2C4 mov $0x38,%edx
000000000005F2C9 call 0x000000000002E4B8
000000000005F2CE mov 0x20(%rsp),%rax
000000000005F2D3 movq $1,(%rax)
000000000005F2DA testb $1,0x126(%rsp)
000000000005F2E2 jne 0x000000000005F32C
000000000005F2E4 jmp 0x000000000005F31F
000000000005F2E6 mov 0x20(%rsp),%rax
000000000005F2EB mov (%rsp),%rcx
000000000005F2EF mov 8(%rsp),%rdx
000000000005F2F4 mov %rdx,8(%rax)
000000000005F2F8 mov %rcx,0x10(%rax)
000000000005F2FC movq $0,(%rax)
000000000005F303 jmp 0x000000000005F2DA
000000000005F305 lea 0x2FBE0,%rax
000000000005F30C call *%rax
000000000005F30E ud2
000000000005F310 mov 0x128(%rsp),%rdi
000000000005F318 call 0x000000000002E3D0
000000000005F31D ud2
000000000005F31F movb $0,0x126(%rsp)
000000000005F327 jmp 0x000000000005F121
000000000005F32C lea 0x60(%rsp),%rdi
000000000005F331 callq *0x311900
000000000005F337 jmp 0x000000000005F31F
000000000005F339 testb $1,0x127(%rsp)
000000000005F341 jne 0x000000000005F358
000000000005F343 mov 0x28(%rsp),%rax
000000000005F348 movb $0,0x127(%rsp)
000000000005F350 add $0x138,%rsp
000000000005F357 ret
000000000005F358 lea 0x30(%rsp),%rdi
000000000005F35D callq *0x311900
000000000005F363 jmp 0x000000000005F343

 Function call queue at function 5f050: [6e8f0, a9720]

Analyzing function at 6e8f0
000000000006E8F0 sub $0x68,%rsp
000000000006E8F4 mov %rsi,(%rsp)
000000000006E8F8 mov %rdi,8(%rsp)
000000000006E8FD mov %rdi,0x10(%rsp)
000000000006E902 movb $1,0x67(%rsp)
000000000006E907 mov (%rsi),%rax
000000000006E90A test %rax,%rax
000000000006E90D setne %al
000000000006E910 movzbl %al,%eax
000000000006E913 je 0x000000000006E91B
000000000006E915 jmp 0x000000000006E917
000000000006E917 jmp 0x000000000006E929
000000000006E919 ud2
000000000006E91B mov 8(%rsp),%rax
000000000006E920 movq $0,(%rax)
000000000006E927 jmp 0x000000000006E999
000000000006E929 mov 8(%rsp),%rdi
000000000006E92E mov (%rsp),%rax
000000000006E932 mov (%rax),%rcx
000000000006E935 mov %rcx,0x18(%rsp)
000000000006E93A mov 8(%rax),%rcx
000000000006E93E mov %rcx,0x20(%rsp)
000000000006E943 mov 0x10(%rax),%rax
000000000006E947 mov %rax,0x28(%rsp)
000000000006E94C movb $0,0x67(%rsp)
000000000006E951 mov 0x18(%rsp),%rax
000000000006E956 mov %rax,0x48(%rsp)
000000000006E95B mov 0x20(%rsp),%rax
000000000006E960 mov %rax,0x50(%rsp)
000000000006E965 mov 0x28(%rsp),%rax
000000000006E96A mov %rax,0x58(%rsp)
000000000006E96F mov 0x48(%rsp),%rax
000000000006E974 mov %rax,0x30(%rsp)
000000000006E979 mov 0x50(%rsp),%rax
000000000006E97E mov %rax,0x38(%rsp)
000000000006E983 mov 0x58(%rsp),%rax
000000000006E988 mov %rax,0x40(%rsp)
000000000006E98D lea 0x30(%rsp),%rsi
000000000006E992 call 0x00000000000353E0
000000000006E997 jmp 0x000000000006E999
000000000006E999 testb $1,0x67(%rsp)
000000000006E99E jne 0x000000000006E9AA
000000000006E9A0 mov 0x10(%rsp),%rax
000000000006E9A5 add $0x68,%rsp
000000000006E9A9 ret
000000000006E9AA jmp 0x000000000006E9A0

 Function call queue at function 6e8f0: [353e0]

Analyzing function at 353e0
00000000000353E0 sub $0x48,%rsp
00000000000353E4 mov %rdi,(%rsp)
00000000000353E8 mov %rdi,8(%rsp)
00000000000353ED mov (%rsi),%rax
00000000000353F0 mov %rax,0x30(%rsp)
00000000000353F5 mov 8(%rsi),%rax
00000000000353F9 mov %rax,0x38(%rsp)
00000000000353FE mov 0x10(%rsi),%rax
0000000000035402 mov %rax,0x40(%rsp)
0000000000035407 lea 0x10(%rsp),%rdi
000000000003540C lea 0x30(%rsp),%rsi
0000000000035411 call 0x0000000000088F60
0000000000035416 mov (%rsp),%rdi
000000000003541A lea 0x10(%rsp),%rsi
000000000003541F call 0x0000000000076910
0000000000035424 mov 8(%rsp),%rax
0000000000035429 add $0x48,%rsp
000000000003542D ret

 Function call queue at function 353e0: []

Analyzing function at a9720
00000000000A9720 sub $0x10,%rsp
00000000000A9724 mov %rdi,8(%rsp)
00000000000A9729 movq $0,(%rsp)
00000000000A9731 mov (%rsp),%rax
00000000000A9735 mov 8(%rsp),%rdx
00000000000A973A add $0x10,%rsp
00000000000A973E ret

 Function call queue at function a9720: []

Analyzing function at 765e0
00000000000765E0 sub $0xB8,%rsp
00000000000765E7 mov %rdi,(%rsp)
00000000000765EB mov %rdi,8(%rsp)
00000000000765F0 lea 0x10(%rsp),%rdi
00000000000765F5 mov $0x38,%edx
00000000000765FA call 0x000000000002E4B8
00000000000765FF lea 0x80(%rsp),%rdi
0000000000076607 lea 0x10(%rsp),%rsi
000000000007660C mov $0x38,%edx
0000000000076611 call 0x000000000002E4B8
0000000000076616 lea 0x48(%rsp),%rdi
000000000007661B lea 0x80(%rsp),%rsi
0000000000076623 call 0x0000000000089330
0000000000076628 mov (%rsp),%rdi
000000000007662C add $8,%rdi
0000000000076630 lea 0x48(%rsp),%rsi
0000000000076635 mov $0x38,%edx
000000000007663A call 0x000000000002E4B8
000000000007663F mov (%rsp),%rcx
0000000000076643 mov 8(%rsp),%rax
0000000000076648 movq $1,(%rcx)
000000000007664F add $0xB8,%rsp
0000000000076656 ret

 Function call queue at function 765e0: []

Analyzing function at 780c0
00000000000780C0 sub $0xC8,%rsp
00000000000780C7 mov %rsi,8(%rsp)
00000000000780CC mov %rdi,0x10(%rsp)
00000000000780D1 mov %rdi,0x18(%rsp)
00000000000780D6 mov (%rsi),%rax
00000000000780D9 test %rax,%rax
00000000000780DC je 0x00000000000780E4
00000000000780DE jmp 0x00000000000780E0
00000000000780E0 jmp 0x0000000000078107
00000000000780E2 ud2
00000000000780E4 mov 0x10(%rsp),%rax
00000000000780E9 mov 8(%rsp),%rcx
00000000000780EE mov 8(%rcx),%rdx
00000000000780F2 mov 0x10(%rcx),%rcx
00000000000780F6 mov %rdx,8(%rax)
00000000000780FA mov %rcx,0x10(%rax)
00000000000780FE movq $0,(%rax)
0000000000078105 jmp 0x0000000000078171
0000000000078107 mov 8(%rsp),%rsi
000000000007810C add $8,%rsi
0000000000078110 lea 0x20(%rsp),%rdi
0000000000078115 mov $0x38,%edx
000000000007811A call 0x000000000002E4B8
000000000007811F lea 0x90(%rsp),%rdi
0000000000078127 lea 0x20(%rsp),%rsi
000000000007812C mov $0x38,%edx
0000000000078131 call 0x000000000002E4B8
0000000000078136 lea 0x58(%rsp),%rdi
000000000007813B lea 0x90(%rsp),%rsi
0000000000078143 mov $0x38,%edx
0000000000078148 call 0x000000000002E4B8
000000000007814D mov 0x10(%rsp),%rdi
0000000000078152 add $8,%rdi
0000000000078156 lea 0x58(%rsp),%rsi
000000000007815B mov $0x38,%edx
0000000000078160 call 0x000000000002E4B8
0000000000078165 mov 0x10(%rsp),%rax
000000000007816A movq $1,(%rax)
0000000000078171 mov 0x18(%rsp),%rax
0000000000078176 add $0xC8,%rsp
000000000007817D ret

 Function call queue at function 780c0: []

Analyzing function at 4c000
000000000004C000 sub $0x218,%rsp
000000000004C007 mov %rdx,8(%rsp)
000000000004C00C mov %rsi,0x10(%rsp)
000000000004C011 mov %rdi,0x18(%rsp)
000000000004C016 mov %rdi,0x20(%rsp)
000000000004C01B lea 0x68(%rsp),%rdi
000000000004C020 call 0x0000000000055270
000000000004C025 lea 0x28(%rsp),%rdi
000000000004C02A lea 0x68(%rsp),%rsi
000000000004C02F call 0x0000000000077FB0
000000000004C034 movzbl 0x28(%rsp),%eax
000000000004C039 test $1,%al
000000000004C03B je 0x000000000004C043
000000000004C03D jmp 0x000000000004C03F
000000000004C03F jmp 0x000000000004C064
000000000004C041 ud2
000000000004C043 mov 8(%rsp),%rdx
000000000004C048 mov 0x10(%rsp),%rsi
000000000004C04D mov 0x29(%rsp),%al
000000000004C051 mov %al,7(%rsp)
000000000004C055 lea 0x158(%rsp),%rdi
000000000004C05D call 0x000000000004C1A0
000000000004C062 jmp 0x000000000004C0C1
000000000004C064 lea 0x28(%rsp),%rsi
000000000004C069 add $8,%rsi
000000000004C06D lea 0xA8(%rsp),%rdi
000000000004C075 mov $0x38,%edx
000000000004C07A call 0x000000000002E4B8
000000000004C07F lea 0xE0(%rsp),%rdi
000000000004C087 lea 0xA8(%rsp),%rsi
000000000004C08F mov $0x38,%edx
000000000004C094 call 0x000000000002E4B8
000000000004C099 mov 0x18(%rsp),%rdi
000000000004C09E lea 0xE0(%rsp),%rsi
000000000004C0A6 lea 0x302AA0,%rdx
000000000004C0AD call 0x0000000000075BD0
000000000004C0B2 jmp 0x000000000004C0B4
000000000004C0B4 mov 0x20(%rsp),%rax
000000000004C0B9 add $0x218,%rsp
000000000004C0C0 ret
000000000004C0C1 lea 0x118(%rsp),%rdi
000000000004C0C9 lea 0x158(%rsp),%rsi
000000000004C0D1 call 0x0000000000077D70
000000000004C0D6 mov 0x118(%rsp),%eax
000000000004C0DD test %rax,%rax
000000000004C0E0 je 0x000000000004C0E8
000000000004C0E2 jmp 0x000000000004C0E4
000000000004C0E4 jmp 0x000000000004C13B
000000000004C0E6 ud2
000000000004C0E8 mov 0x18(%rsp),%rax
000000000004C0ED mov 7(%rsp),%sil
000000000004C0F2 mov 0x11C(%rsp),%edx
000000000004C0F9 mov 0x120(%rsp),%ecx
000000000004C100 and $1,%sil
000000000004C104 mov %sil,0x210(%rsp)
000000000004C10C mov %edx,0x208(%rsp)
000000000004C113 mov %ecx,0x20C(%rsp)
000000000004C11A mov 0x208(%rsp),%rcx
000000000004C122 mov %rcx,4(%rax)
000000000004C126 mov 0x210(%rsp),%ecx
000000000004C12D mov %ecx,0xC(%rax)
000000000004C130 movl $0,(%rax)
000000000004C136 jmp 0x000000000004C0B4
000000000004C13B lea 0x118(%rsp),%rsi
000000000004C143 add $8,%rsi
000000000004C147 lea 0x198(%rsp),%rdi
000000000004C14F mov $0x38,%edx
000000000004C154 call 0x000000000002E4B8
000000000004C159 lea 0x1D0(%rsp),%rdi
000000000004C161 lea 0x198(%rsp),%rsi
000000000004C169 mov $0x38,%edx
000000000004C16E call 0x000000000002E4B8
000000000004C173 mov 0x18(%rsp),%rdi
000000000004C178 lea 0x1D0(%rsp),%rsi
000000000004C180 lea 0x302AB8,%rdx
000000000004C187 call 0x0000000000075BD0
000000000004C18C jmp 0x000000000004C0B4

 Function call queue at function 4c000: [55270, 77fb0, 4c1a0, 75bd0, 77d70]

Analyzing function at 55270
0000000000055270 sub $0x108,%rsp
0000000000055277 mov %rdi,8(%rsp)
000000000005527C mov %rdi,0x10(%rsp)
0000000000055281 lea 0x58(%rsp),%rdi
0000000000055286 lea 0x305E10,%rdx
000000000005528D call 0x00000000000314A0
0000000000055292 lea 0x18(%rsp),%rdi
0000000000055297 lea 0x58(%rsp),%rsi
000000000005529C call 0x0000000000077B40
00000000000552A1 movzbl 0x18(%rsp),%eax
00000000000552A6 test $1,%al
00000000000552A8 je 0x00000000000552B0
00000000000552AA jmp 0x00000000000552AC
00000000000552AC jmp 0x00000000000552B9
00000000000552AE ud2
00000000000552B0 testb $1,0x19(%rsp)
00000000000552B5 jne 0x0000000000055324
00000000000552B7 jmp 0x0000000000055316
00000000000552B9 lea 0x18(%rsp),%rsi
00000000000552BE add $8,%rsi
00000000000552C2 lea 0x98(%rsp),%rdi
00000000000552CA mov $0x38,%edx
00000000000552CF call 0x000000000002E4B8
00000000000552D4 lea 0xD0(%rsp),%rdi
00000000000552DC lea 0x98(%rsp),%rsi
00000000000552E4 mov $0x38,%edx
00000000000552E9 call 0x000000000002E4B8
00000000000552EE mov 8(%rsp),%rdi
00000000000552F3 lea 0xD0(%rsp),%rsi
00000000000552FB lea 0x302C20,%rdx
0000000000055302 call 0x0000000000075D50
0000000000055307 jmp 0x0000000000055309
0000000000055309 mov 0x10(%rsp),%rax
000000000005530E add $0x108,%rsp
0000000000055315 ret
0000000000055316 mov 8(%rsp),%rax
000000000005531B movb $0,1(%rax)
000000000005531F movb $0,(%rax)
0000000000055322 jmp 0x0000000000055309
0000000000055324 mov 8(%rsp),%rax
0000000000055329 movb $1,1(%rax)
000000000005532D movb $0,(%rax)
0000000000055330 jmp 0x0000000000055309

 Function call queue at function 55270: [75d50]

Analyzing function at 75d50
0000000000075D50 sub $0xB8,%rsp
0000000000075D57 mov %rdi,(%rsp)
0000000000075D5B mov %rdi,8(%rsp)
0000000000075D60 lea 0x10(%rsp),%rdi
0000000000075D65 mov $0x38,%edx
0000000000075D6A call 0x000000000002E4B8
0000000000075D6F lea 0x80(%rsp),%rdi
0000000000075D77 lea 0x10(%rsp),%rsi
0000000000075D7C mov $0x38,%edx
0000000000075D81 call 0x000000000002E4B8
0000000000075D86 lea 0x48(%rsp),%rdi
0000000000075D8B lea 0x80(%rsp),%rsi
0000000000075D93 call 0x0000000000089330
0000000000075D98 mov (%rsp),%rdi
0000000000075D9C add $8,%rdi
0000000000075DA0 lea 0x48(%rsp),%rsi
0000000000075DA5 mov $0x38,%edx
0000000000075DAA call 0x000000000002E4B8
0000000000075DAF mov (%rsp),%rcx
0000000000075DB3 mov 8(%rsp),%rax
0000000000075DB8 movb $1,(%rcx)
0000000000075DBB add $0xB8,%rsp
0000000000075DC2 ret

 Function call queue at function 75d50: []

Analyzing function at 77fb0
0000000000077FB0 sub $0xC8,%rsp
0000000000077FB7 mov %rsi,8(%rsp)
0000000000077FBC mov %rdi,0x10(%rsp)
0000000000077FC1 mov %rdi,0x18(%rsp)
0000000000077FC6 movzbl (%rsi),%eax
0000000000077FC9 test $1,%al
0000000000077FCB je 0x0000000000077FD3
0000000000077FCD jmp 0x0000000000077FCF
0000000000077FCF jmp 0x0000000000077FEB
0000000000077FD1 ud2
0000000000077FD3 mov 0x10(%rsp),%rax
0000000000077FD8 mov 8(%rsp),%rcx
0000000000077FDD mov 1(%rcx),%cl
0000000000077FE0 and $1,%cl
0000000000077FE3 mov %cl,1(%rax)
0000000000077FE6 movb $0,(%rax)
0000000000077FE9 jmp 0x0000000000078051
0000000000077FEB mov 8(%rsp),%rsi
0000000000077FF0 add $8,%rsi
0000000000077FF4 lea 0x20(%rsp),%rdi
0000000000077FF9 mov $0x38,%edx
0000000000077FFE call 0x000000000002E4B8
0000000000078003 lea 0x90(%rsp),%rdi
000000000007800B lea 0x20(%rsp),%rsi
0000000000078010 mov $0x38,%edx
0000000000078015 call 0x000000000002E4B8
000000000007801A lea 0x58(%rsp),%rdi
000000000007801F lea 0x90(%rsp),%rsi
0000000000078027 mov $0x38,%edx
000000000007802C call 0x000000000002E4B8
0000000000078031 mov 0x10(%rsp),%rdi
0000000000078036 add $8,%rdi
000000000007803A lea 0x58(%rsp),%rsi
000000000007803F mov $0x38,%edx
0000000000078044 call 0x000000000002E4B8
0000000000078049 mov 0x10(%rsp),%rax
000000000007804E movb $1,(%rax)
0000000000078051 mov 0x18(%rsp),%rax
0000000000078056 add $0xC8,%rsp
000000000007805D ret

 Function call queue at function 77fb0: []

Analyzing function at 4c1a0
000000000004C1A0 sub $0x338,%rsp
000000000004C1A7 mov %rdx,0x30(%rsp)
000000000004C1AC mov %rsi,0x38(%rsp)
000000000004C1B1 mov %rdi,0x40(%rsp)
000000000004C1B6 mov %rdi,0x48(%rsp)
000000000004C1BB movb $0,0x31F(%rsp)
000000000004C1C3 movb $0,0x31E(%rsp)
000000000004C1CB lea 0x98(%rsp),%rdi
000000000004C1D3 lea 0x3065B0,%rdx
000000000004C1DA call 0x00000000000314A0
000000000004C1DF lea 0x58(%rsp),%rdi
000000000004C1E4 lea 0x98(%rsp),%rsi
000000000004C1EC call 0x0000000000077B40
000000000004C1F1 movzbl 0x58(%rsp),%eax
000000000004C1F6 test $1,%al
000000000004C1F8 je 0x000000000004C200
000000000004C1FA jmp 0x000000000004C1FC
000000000004C1FC jmp 0x000000000004C209
000000000004C1FE ud2
000000000004C200 testb $1,0x59(%rsp)
000000000004C205 jne 0x000000000004C277
000000000004C207 jmp 0x000000000004C25C
000000000004C209 lea 0x58(%rsp),%rsi
000000000004C20E add $8,%rsi
000000000004C212 lea 0xD8(%rsp),%rdi
000000000004C21A mov $0x38,%edx
000000000004C21F call 0x000000000002E4B8
000000000004C224 lea 0x110(%rsp),%rdi
000000000004C22C lea 0xD8(%rsp),%rsi
000000000004C234 mov $0x38,%edx
000000000004C239 call 0x000000000002E4B8
000000000004C23E mov 0x40(%rsp),%rdi
000000000004C243 lea 0x110(%rsp),%rsi
000000000004C24B lea 0x302AD0,%rdx
000000000004C252 call 0x0000000000075AD0
000000000004C257 jmp 0x000000000004C31A
000000000004C25C mov 0x38(%rsp),%rsi
000000000004C261 lea 0x188(%rsp),%rdi
000000000004C269 lea 0x306290,%rdx
000000000004C270 call 0x00000000000314A0
000000000004C275 jmp 0x000000000004C28C
000000000004C277 movb $1,0x57(%rsp)
000000000004C27C testb $1,0x57(%rsp)
000000000004C281 jne 0x000000000004C349
000000000004C287 jmp 0x000000000004C327
000000000004C28C lea 0x148(%rsp),%rdi
000000000004C294 lea 0x188(%rsp),%rsi
000000000004C29C call 0x0000000000077B40
000000000004C2A1 movzbl 0x148(%rsp),%eax
000000000004C2A9 test $1,%al
000000000004C2AB je 0x000000000004C2B3
000000000004C2AD jmp 0x000000000004C2AF
000000000004C2AF jmp 0x000000000004C2C4
000000000004C2B1 ud2
000000000004C2B3 mov 0x149(%rsp),%al
000000000004C2BA xor $0xFF,%al
000000000004C2BC and $1,%al
000000000004C2BE mov %al,0x57(%rsp)
000000000004C2C2 jmp 0x000000000004C27C
000000000004C2C4 lea 0x148(%rsp),%rsi
000000000004C2CC add $8,%rsi
000000000004C2D0 lea 0x1C8(%rsp),%rdi
000000000004C2D8 mov $0x38,%edx
000000000004C2DD call 0x000000000002E4B8
000000000004C2E2 lea 0x200(%rsp),%rdi
000000000004C2EA lea 0x1C8(%rsp),%rsi
000000000004C2F2 mov $0x38,%edx
000000000004C2F7 call 0x000000000002E4B8
000000000004C2FC mov 0x40(%rsp),%rdi
000000000004C301 lea 0x200(%rsp),%rsi
000000000004C309 lea 0x302AE8,%rdx
000000000004C310 call 0x0000000000075AD0
000000000004C315 jmp 0x000000000004C257
000000000004C31A mov 0x48(%rsp),%rax
000000000004C31F add $0x338,%rsp
000000000004C326 ret
000000000004C327 mov 0x30(%rsp),%rsi
000000000004C32C mov 0x3035A0,%rdx
000000000004C333 mov 0x3035A8,%rcx
000000000004C33A lea 0x258(%rsp),%rdi
000000000004C342 call 0x0000000000041970
000000000004C347 jmp 0x000000000004C375
000000000004C349 mov 0x40(%rsp),%rax
000000000004C34E movl $0,0x238(%rsp)
000000000004C359 mov 0x238(%rsp),%edx
000000000004C360 mov 0x23C(%rsp),%ecx
000000000004C367 mov %edx,4(%rax)
000000000004C36A mov %ecx,8(%rax)
000000000004C36D movl $0,(%rax)
000000000004C373 jmp 0x000000000004C31A
000000000004C375 lea 0x240(%rsp),%rdi
000000000004C37D lea 0x258(%rsp),%rsi
000000000004C385 call 0x000000000006EA30
000000000004C38A movb $1,0x31F(%rsp)
000000000004C392 mov $1,%eax
000000000004C397 xor %ecx,%ecx
000000000004C399 cmpq $0,0x240(%rsp)
000000000004C3A2 cmove %rcx,%rax
000000000004C3A6 cmp $1,%rax
000000000004C3AA jne 0x000000000004C3F8
000000000004C3AC movb $0,0x31F(%rsp)
000000000004C3B4 movb $1,0x31E(%rsp)
000000000004C3BC mov 0x250(%rsp),%rax
000000000004C3C4 mov %rax,0x280(%rsp)
000000000004C3CC movups 0x240(%rsp),%xmm0
000000000004C3D4 movaps %xmm0,0x270(%rsp)
000000000004C3DC lea 0x270(%rsp),%rdi
000000000004C3E4 call 0x00000000000649F0
000000000004C3E9 mov %rdx,0x20(%rsp)
000000000004C3EE mov %rax,0x28(%rsp)
000000000004C3F3 jmp 0x000000000004C4AD
000000000004C3F8 mov $1,%edi
000000000004C3FD call 0x00000000000554C0
000000000004C402 mov %edx,0x18(%rsp)
000000000004C406 mov %eax,0x1C(%rsp)
000000000004C40A jmp 0x000000000004C445
000000000004C40C mov $1,%eax
000000000004C411 xor %ecx,%ecx
000000000004C413 cmpq $0,0x240(%rsp)
000000000004C41C cmove %rcx,%rax
000000000004C420 cmp $1,%rax
000000000004C424 je 0x000000000004C68F
000000000004C42A jmp 0x000000000004C699
000000000004C42F mov %rax,%rcx
000000000004C432 mov %edx,%eax
000000000004C434 mov %rcx,0x320(%rsp)
000000000004C43C mov %eax,0x328(%rsp)
000000000004C443 jmp 0x000000000004C40C
000000000004C445 mov 0x40(%rsp),%rax
000000000004C44A mov 0x18(%rsp),%ecx
000000000004C44E mov 0x1C(%rsp),%edx
000000000004C452 mov %edx,4(%rax)
000000000004C455 mov %ecx,8(%rax)
000000000004C458 movl $0,(%rax)
000000000004C45E mov $1,%eax
000000000004C463 xor %ecx,%ecx
000000000004C465 cmpq $0,0x240(%rsp)
000000000004C46E cmove %rcx,%rax
000000000004C472 cmp $1,%rax
000000000004C476 je 0x000000000004C6BB
000000000004C47C jmp 0x000000000004C6C5
000000000004C481 lea 0xEFC00,%rax
000000000004C488 lea 0x270(%rsp),%rdi
000000000004C490 call *%rax
000000000004C492 jmp 0x000000000004C40C
000000000004C497 mov %rax,%rcx
000000000004C49A mov %edx,%eax
000000000004C49C mov %rcx,0x320(%rsp)
000000000004C4A4 mov %eax,0x328(%rsp)
000000000004C4AB jmp 0x000000000004C481
000000000004C4AD mov 0x20(%rsp),%rsi
000000000004C4B2 mov 0x28(%rsp),%rdi
000000000004C4B7 lea 0xBFFB0,%rax
000000000004C4BE call *%rax
000000000004C4C0 mov %rax,0x10(%rsp)
000000000004C4C5 jmp 0x000000000004C4C7
000000000004C4C7 mov 0x10(%rsp),%rax
000000000004C4CC mov %rax,0x330(%rsp)
000000000004C4D4 mov 0x330(%rsp),%rax
000000000004C4DC mov %rax,0x290(%rsp)
000000000004C4E4 movzbl 0x290(%rsp),%eax
000000000004C4EC test $1,%al
000000000004C4EE je 0x000000000004C4F6
000000000004C4F0 jmp 0x000000000004C4F2
000000000004C4F2 jmp 0x000000000004C50F
000000000004C4F4 ud2
000000000004C4F6 mov 0x294(%rsp),%edi
000000000004C4FD call 0x00000000000554C0
000000000004C502 mov %edx,8(%rsp)
000000000004C506 mov %eax,0xC(%rsp)
000000000004C50A jmp 0x000000000004C649
000000000004C50F mov 0x40(%rsp),%rdi
000000000004C514 mov 0x291(%rsp),%al
000000000004C51B mov 0x3035A0,%rdx
000000000004C522 mov 0x3035A8,%rcx
000000000004C529 mov %rdx,0x2A0(%rsp)
000000000004C531 mov %rcx,0x2A8(%rsp)
000000000004C539 movq $1,0x298(%rsp)
000000000004C545 movb $0,0x31E(%rsp)
000000000004C54D mov 0x270(%rsp),%rcx
000000000004C555 mov %rcx,0x2E8(%rsp)
000000000004C55D mov 0x278(%rsp),%rcx
000000000004C565 mov %rcx,0x2F0(%rsp)
000000000004C56D mov 0x280(%rsp),%rcx
000000000004C575 mov %rcx,0x2F8(%rsp)
000000000004C57D mov 0x298(%rsp),%rcx
000000000004C585 mov %rcx,0x300(%rsp)
000000000004C58D mov 0x2A0(%rsp),%rcx
000000000004C595 mov %rcx,0x308(%rsp)
000000000004C59D mov 0x2A8(%rsp),%rcx
000000000004C5A5 mov %rcx,0x310(%rsp)
000000000004C5AD mov 0x2E8(%rsp),%rcx
000000000004C5B5 mov %rcx,0x2B8(%rsp)
000000000004C5BD mov 0x2F0(%rsp),%rcx
000000000004C5C5 mov %rcx,0x2C0(%rsp)
000000000004C5CD mov 0x2F8(%rsp),%rcx
000000000004C5D5 mov %rcx,0x2C8(%rsp)
000000000004C5DD mov 0x300(%rsp),%rcx
000000000004C5E5 mov %rcx,0x2D0(%rsp)
000000000004C5ED mov 0x308(%rsp),%rcx
000000000004C5F5 mov %rcx,0x2D8(%rsp)
000000000004C5FD mov 0x310(%rsp),%rcx
000000000004C605 mov %rcx,0x2E0(%rsp)
000000000004C60D mov %al,0x2B1(%rsp)
000000000004C614 movb $8,0x2B0(%rsp)
000000000004C61C add $8,%rdi
000000000004C620 lea 0x2B0(%rsp),%rsi
000000000004C628 mov $0x38,%edx
000000000004C62D call 0x000000000002E4B8
000000000004C632 mov 0x40(%rsp),%rax
000000000004C637 movl $1,(%rax)
000000000004C63D testb $1,0x31E(%rsp)
000000000004C645 jne 0x000000000004C67C
000000000004C647 jmp 0x000000000004C66F
000000000004C649 mov 0x40(%rsp),%rax
000000000004C64E mov 8(%rsp),%ecx
000000000004C652 mov 0xC(%rsp),%edx
000000000004C656 mov %edx,4(%rax)
000000000004C659 mov %ecx,8(%rax)
000000000004C65C movl $0,(%rax)
000000000004C662 jmp 0x000000000004C63D
000000000004C664 lea 0x2FBE0,%rax
000000000004C66B call *%rax
000000000004C66D ud2
000000000004C66F movb $0,0x31E(%rsp)
000000000004C677 jmp 0x000000000004C45E
000000000004C67C lea 0xEFC00,%rax
000000000004C683 lea 0x270(%rsp),%rdi
000000000004C68B call *%rax
000000000004C68D jmp 0x000000000004C66F
000000000004C68F testb $1,0x31F(%rsp)
000000000004C697 jne 0x000000000004C6A8
000000000004C699 mov 0x320(%rsp),%rdi
000000000004C6A1 call 0x000000000002E3D0
000000000004C6A6 ud2
000000000004C6A8 lea 0xEFC00,%rax
000000000004C6AF lea 0x240(%rsp),%rdi
000000000004C6B7 call *%rax
000000000004C6B9 jmp 0x000000000004C699
000000000004C6BB testb $1,0x31F(%rsp)
000000000004C6C3 jne 0x000000000004C6D2
000000000004C6C5 movb $0,0x31F(%rsp)
000000000004C6CD jmp 0x000000000004C31A
000000000004C6D2 lea 0x240(%rsp),%rdi
000000000004C6DA callq *0x311900
000000000004C6E0 jmp 0x000000000004C6C5

 Function call queue at function 4c1a0: [75ad0, 6ea30, 554c0]

Analyzing function at 75ad0
0000000000075AD0 sub $0xB8,%rsp
0000000000075AD7 mov %rdi,(%rsp)
0000000000075ADB mov %rdi,8(%rsp)
0000000000075AE0 lea 0x10(%rsp),%rdi
0000000000075AE5 mov $0x38,%edx
0000000000075AEA call 0x000000000002E4B8
0000000000075AEF lea 0x80(%rsp),%rdi
0000000000075AF7 lea 0x10(%rsp),%rsi
0000000000075AFC mov $0x38,%edx
0000000000075B01 call 0x000000000002E4B8
0000000000075B06 lea 0x48(%rsp),%rdi
0000000000075B0B lea 0x80(%rsp),%rsi
0000000000075B13 call 0x0000000000089330
0000000000075B18 mov (%rsp),%rdi
0000000000075B1C add $8,%rdi
0000000000075B20 lea 0x48(%rsp),%rsi
0000000000075B25 mov $0x38,%edx
0000000000075B2A call 0x000000000002E4B8
0000000000075B2F mov (%rsp),%rcx
0000000000075B33 mov 8(%rsp),%rax
0000000000075B38 movl $1,(%rcx)
0000000000075B3E add $0xB8,%rsp
0000000000075B45 ret

 Function call queue at function 75ad0: []

Analyzing function at 6ea30
000000000006EA30 sub $0x68,%rsp
000000000006EA34 mov %rsi,(%rsp)
000000000006EA38 mov %rdi,8(%rsp)
000000000006EA3D mov %rdi,0x10(%rsp)
000000000006EA42 movb $1,0x67(%rsp)
000000000006EA47 mov (%rsi),%rax
000000000006EA4A test %rax,%rax
000000000006EA4D setne %al
000000000006EA50 movzbl %al,%eax
000000000006EA53 je 0x000000000006EA5B
000000000006EA55 jmp 0x000000000006EA57
000000000006EA57 jmp 0x000000000006EA69
000000000006EA59 ud2
000000000006EA5B mov 8(%rsp),%rax
000000000006EA60 movq $0,(%rax)
000000000006EA67 jmp 0x000000000006EAD9
000000000006EA69 mov 8(%rsp),%rdi
000000000006EA6E mov (%rsp),%rax
000000000006EA72 mov (%rax),%rcx
000000000006EA75 mov %rcx,0x18(%rsp)
000000000006EA7A mov 8(%rax),%rcx
000000000006EA7E mov %rcx,0x20(%rsp)
000000000006EA83 mov 0x10(%rax),%rax
000000000006EA87 mov %rax,0x28(%rsp)
000000000006EA8C movb $0,0x67(%rsp)
000000000006EA91 mov 0x18(%rsp),%rax
000000000006EA96 mov %rax,0x48(%rsp)
000000000006EA9B mov 0x20(%rsp),%rax
000000000006EAA0 mov %rax,0x50(%rsp)
000000000006EAA5 mov 0x28(%rsp),%rax
000000000006EAAA mov %rax,0x58(%rsp)
000000000006EAAF mov 0x48(%rsp),%rax
000000000006EAB4 mov %rax,0x30(%rsp)
000000000006EAB9 mov 0x50(%rsp),%rax
000000000006EABE mov %rax,0x38(%rsp)
000000000006EAC3 mov 0x58(%rsp),%rax
000000000006EAC8 mov %rax,0x40(%rsp)
000000000006EACD lea 0x30(%rsp),%rsi
000000000006EAD2 call 0x000000000006C570
000000000006EAD7 jmp 0x000000000006EAD9
000000000006EAD9 testb $1,0x67(%rsp)
000000000006EADE jne 0x000000000006EAEA
000000000006EAE0 mov 0x10(%rsp),%rax
000000000006EAE5 add $0x68,%rsp
000000000006EAE9 ret
000000000006EAEA jmp 0x000000000006EAE0

 Function call queue at function 6ea30: [6c570]

Analyzing function at 6c570
000000000006C570 sub $0x48,%rsp
000000000006C574 mov %rdi,(%rsp)
000000000006C578 mov %rdi,8(%rsp)
000000000006C57D mov (%rsi),%rax
000000000006C580 mov %rax,0x30(%rsp)
000000000006C585 mov 8(%rsi),%rax
000000000006C589 mov %rax,0x38(%rsp)
000000000006C58E mov 0x10(%rsi),%rax
000000000006C592 mov %rax,0x40(%rsp)
000000000006C597 lea 0x10(%rsp),%rdi
000000000006C59C lea 0x30(%rsp),%rsi
000000000006C5A1 call 0x0000000000088F60
000000000006C5A6 mov (%rsp),%rdi
000000000006C5AA lea 0x10(%rsp),%rsi
000000000006C5AF call 0x0000000000076910
000000000006C5B4 mov 8(%rsp),%rax
000000000006C5B9 add $0x48,%rsp
000000000006C5BD ret

 Function call queue at function 6c570: []

Analyzing function at 554c0
00000000000554C0 push %rax
00000000000554C1 mov %edi,4(%rsp)
00000000000554C5 movl $1,(%rsp)
00000000000554CC mov (%rsp),%eax
00000000000554CF mov 4(%rsp),%edx
00000000000554D3 pop %rcx
00000000000554D4 ret

 Function call queue at function 554c0: []

Analyzing function at 75bd0
0000000000075BD0 sub $0xB8,%rsp
0000000000075BD7 mov %rdi,(%rsp)
0000000000075BDB mov %rdi,8(%rsp)
0000000000075BE0 lea 0x10(%rsp),%rdi
0000000000075BE5 mov $0x38,%edx
0000000000075BEA call 0x000000000002E4B8
0000000000075BEF lea 0x80(%rsp),%rdi
0000000000075BF7 lea 0x10(%rsp),%rsi
0000000000075BFC mov $0x38,%edx
0000000000075C01 call 0x000000000002E4B8
0000000000075C06 lea 0x48(%rsp),%rdi
0000000000075C0B lea 0x80(%rsp),%rsi
0000000000075C13 call 0x0000000000089330
0000000000075C18 mov (%rsp),%rdi
0000000000075C1C add $8,%rdi
0000000000075C20 lea 0x48(%rsp),%rsi
0000000000075C25 mov $0x38,%edx
0000000000075C2A call 0x000000000002E4B8
0000000000075C2F mov (%rsp),%rcx
0000000000075C33 mov 8(%rsp),%rax
0000000000075C38 movl $1,(%rcx)
0000000000075C3E add $0xB8,%rsp
0000000000075C45 ret

 Function call queue at function 75bd0: []

Analyzing function at 77d70
0000000000077D70 sub $0xC8,%rsp
0000000000077D77 mov %rsi,8(%rsp)
0000000000077D7C mov %rdi,0x10(%rsp)
0000000000077D81 mov %rdi,0x18(%rsp)
0000000000077D86 mov (%rsi),%eax
0000000000077D88 test %rax,%rax
0000000000077D8B je 0x0000000000077D93
0000000000077D8D jmp 0x0000000000077D8F
0000000000077D8F jmp 0x0000000000077DB1
0000000000077D91 ud2
0000000000077D93 mov 0x10(%rsp),%rax
0000000000077D98 mov 8(%rsp),%rcx
0000000000077D9D mov 4(%rcx),%edx
0000000000077DA0 mov 8(%rcx),%ecx
0000000000077DA3 mov %edx,4(%rax)
0000000000077DA6 mov %ecx,8(%rax)
0000000000077DA9 movl $0,(%rax)
0000000000077DAF jmp 0x0000000000077E1A
0000000000077DB1 mov 8(%rsp),%rsi
0000000000077DB6 add $8,%rsi
0000000000077DBA lea 0x20(%rsp),%rdi
0000000000077DBF mov $0x38,%edx
0000000000077DC4 call 0x000000000002E4B8
0000000000077DC9 lea 0x90(%rsp),%rdi
0000000000077DD1 lea 0x20(%rsp),%rsi
0000000000077DD6 mov $0x38,%edx
0000000000077DDB call 0x000000000002E4B8
0000000000077DE0 lea 0x58(%rsp),%rdi
0000000000077DE5 lea 0x90(%rsp),%rsi
0000000000077DED mov $0x38,%edx
0000000000077DF2 call 0x000000000002E4B8
0000000000077DF7 mov 0x10(%rsp),%rdi
0000000000077DFC add $8,%rdi
0000000000077E00 lea 0x58(%rsp),%rsi
0000000000077E05 mov $0x38,%edx
0000000000077E0A call 0x000000000002E4B8
0000000000077E0F mov 0x10(%rsp),%rax
0000000000077E14 movl $1,(%rax)
0000000000077E1A mov 0x18(%rsp),%rax
0000000000077E1F add $0xC8,%rsp
0000000000077E26 ret

 Function call queue at function 77d70: []

Analyzing function at 77bf0
0000000000077BF0 sub $0xE8,%rsp
0000000000077BF7 mov %rsi,8(%rsp)
0000000000077BFC mov %rdi,0x10(%rsp)
0000000000077C01 mov %rdi,0x18(%rsp)
0000000000077C06 mov (%rsi),%eax
0000000000077C08 test %rax,%rax
0000000000077C0B je 0x0000000000077C13
0000000000077C0D jmp 0x0000000000077C0F
0000000000077C0F jmp 0x0000000000077C57
0000000000077C11 ud2
0000000000077C13 mov 0x10(%rsp),%rax
0000000000077C18 mov 8(%rsp),%rcx
0000000000077C1D mov 4(%rcx),%rdx
0000000000077C21 mov %rdx,0x20(%rsp)
0000000000077C26 mov 0xC(%rcx),%ecx
0000000000077C29 mov %ecx,0x28(%rsp)
0000000000077C2D mov 0x20(%rsp),%rcx
0000000000077C32 mov %rcx,0x30(%rsp)
0000000000077C37 mov 0x28(%rsp),%ecx
0000000000077C3B mov %ecx,0x38(%rsp)
0000000000077C3F mov 0x30(%rsp),%rcx
0000000000077C44 mov %rcx,4(%rax)
0000000000077C48 mov 0x38(%rsp),%ecx
0000000000077C4C mov %ecx,0xC(%rax)
0000000000077C4F movl $0,(%rax)
0000000000077C55 jmp 0x0000000000077CC0
0000000000077C57 mov 8(%rsp),%rsi
0000000000077C5C add $8,%rsi
0000000000077C60 lea 0x40(%rsp),%rdi
0000000000077C65 mov $0x38,%edx
0000000000077C6A call 0x000000000002E4B8
0000000000077C6F lea 0xB0(%rsp),%rdi
0000000000077C77 lea 0x40(%rsp),%rsi
0000000000077C7C mov $0x38,%edx
0000000000077C81 call 0x000000000002E4B8
0000000000077C86 lea 0x78(%rsp),%rdi
0000000000077C8B lea 0xB0(%rsp),%rsi
0000000000077C93 mov $0x38,%edx
0000000000077C98 call 0x000000000002E4B8
0000000000077C9D mov 0x10(%rsp),%rdi
0000000000077CA2 add $8,%rdi
0000000000077CA6 lea 0x78(%rsp),%rsi
0000000000077CAB mov $0x38,%edx
0000000000077CB0 call 0x000000000002E4B8
0000000000077CB5 mov 0x10(%rsp),%rax
0000000000077CBA movl $1,(%rax)
0000000000077CC0 mov 0x18(%rsp),%rax
0000000000077CC5 add $0xE8,%rsp
0000000000077CCC ret

 Function call queue at function 77bf0: []

Analyzing function at 78180
0000000000078180 sub $0x168,%rsp
0000000000078187 mov %rsi,8(%rsp)
000000000007818C mov %rdi,0x10(%rsp)
0000000000078191 mov %rdi,0x18(%rsp)
0000000000078196 mov (%rsi),%rax
0000000000078199 test %rax,%rax
000000000007819C je 0x00000000000781A4
000000000007819E jmp 0x00000000000781A0
00000000000781A0 jmp 0x00000000000781F6
00000000000781A2 ud2
00000000000781A4 mov 8(%rsp),%rsi
00000000000781A9 add $8,%rsi
00000000000781AD lea 0x20(%rsp),%rdi
00000000000781B2 mov $0x50,%edx
00000000000781B7 call 0x000000000002E4B8
00000000000781BC lea 0x70(%rsp),%rdi
00000000000781C1 lea 0x20(%rsp),%rsi
00000000000781C6 mov $0x50,%edx
00000000000781CB call 0x000000000002E4B8
00000000000781D0 mov 0x10(%rsp),%rdi
00000000000781D5 add $8,%rdi
00000000000781D9 lea 0x70(%rsp),%rsi
00000000000781DE mov $0x50,%edx
00000000000781E3 call 0x000000000002E4B8
00000000000781E8 mov 0x10(%rsp),%rax
00000000000781ED movq $0,(%rax)
00000000000781F4 jmp 0x000000000007826C
00000000000781F6 mov 8(%rsp),%rsi
00000000000781FB add $8,%rsi
00000000000781FF lea 0xC0(%rsp),%rdi
0000000000078207 mov $0x38,%edx
000000000007820C call 0x000000000002E4B8
0000000000078211 lea 0x130(%rsp),%rdi
0000000000078219 lea 0xC0(%rsp),%rsi
0000000000078221 mov $0x38,%edx
0000000000078226 call 0x000000000002E4B8
000000000007822B lea 0xF8(%rsp),%rdi
0000000000078233 lea 0x130(%rsp),%rsi
000000000007823B mov $0x38,%edx
0000000000078240 call 0x000000000002E4B8
0000000000078245 mov 0x10(%rsp),%rdi
000000000007824A add $8,%rdi
000000000007824E lea 0xF8(%rsp),%rsi
0000000000078256 mov $0x38,%edx
000000000007825B call 0x000000000002E4B8
0000000000078260 mov 0x10(%rsp),%rax
0000000000078265 movq $1,(%rax)
000000000007826C mov 0x18(%rsp),%rax
0000000000078271 add $0x168,%rsp
0000000000078278 ret

 Function call queue at function 78180: []

Analyzing function at 76460
0000000000076460 sub $0xB8,%rsp
0000000000076467 mov %rdi,(%rsp)
000000000007646B mov %rdi,8(%rsp)
0000000000076470 lea 0x10(%rsp),%rdi
0000000000076475 mov $0x38,%edx
000000000007647A call 0x000000000002E4B8
000000000007647F lea 0x80(%rsp),%rdi
0000000000076487 lea 0x10(%rsp),%rsi
000000000007648C mov $0x38,%edx
0000000000076491 call 0x000000000002E4B8
0000000000076496 lea 0x48(%rsp),%rdi
000000000007649B lea 0x80(%rsp),%rsi
00000000000764A3 call 0x0000000000089330
00000000000764A8 mov (%rsp),%rdi
00000000000764AC add $8,%rdi
00000000000764B0 lea 0x48(%rsp),%rsi
00000000000764B5 mov $0x38,%edx
00000000000764BA call 0x000000000002E4B8
00000000000764BF mov (%rsp),%rcx
00000000000764C3 mov 8(%rsp),%rax
00000000000764C8 movq $1,(%rcx)
00000000000764CF add $0xB8,%rsp
00000000000764D6 ret

 Function call queue at function 76460: []

Analyzing function at 5d2d0
000000000005D2D0 sub $0x668,%rsp
000000000005D2D7 mov %rsi,0x10(%rsp)
000000000005D2DC mov %rdi,0x18(%rsp)
000000000005D2E1 mov %dl,%al
000000000005D2E3 mov %al,0x27(%rsp)
000000000005D2E7 mov %rdi,0x28(%rsp)
000000000005D2EC lea 0x70(%rsp),%rdi
000000000005D2F1 lea 0x305DB0,%rdx
000000000005D2F8 call 0x00000000000314A0
000000000005D2FD lea 0x30(%rsp),%rdi
000000000005D302 lea 0x70(%rsp),%rsi
000000000005D307 call 0x0000000000077B40
000000000005D30C movzbl 0x30(%rsp),%eax
000000000005D311 test $1,%al
000000000005D313 je 0x000000000005D31B
000000000005D315 jmp 0x000000000005D317
000000000005D317 jmp 0x000000000005D33E
000000000005D319 ud2
000000000005D31B mov 0x10(%rsp),%rsi
000000000005D320 mov 0x31(%rsp),%al
000000000005D324 mov %al,0xF(%rsp)
000000000005D328 lea 0x160(%rsp),%rdi
000000000005D330 lea 0x305F60,%rdx
000000000005D337 call 0x00000000000314A0
000000000005D33C jmp 0x000000000005D39B
000000000005D33E lea 0x30(%rsp),%rsi
000000000005D343 add $8,%rsi
000000000005D347 lea 0xB0(%rsp),%rdi
000000000005D34F mov $0x38,%edx
000000000005D354 call 0x000000000002E4B8
000000000005D359 lea 0xE8(%rsp),%rdi
000000000005D361 lea 0xB0(%rsp),%rsi
000000000005D369 mov $0x38,%edx
000000000005D36E call 0x000000000002E4B8
000000000005D373 mov 0x18(%rsp),%rdi
000000000005D378 lea 0xE8(%rsp),%rsi
000000000005D380 lea 0x3031C8,%rdx
000000000005D387 call 0x00000000000761D0
000000000005D38C jmp 0x000000000005D38E
000000000005D38E mov 0x28(%rsp),%rax
000000000005D393 add $0x668,%rsp
000000000005D39A ret
000000000005D39B lea 0x120(%rsp),%rdi
000000000005D3A3 lea 0x160(%rsp),%rsi
000000000005D3AB call 0x0000000000077B40
000000000005D3B0 movzbl 0x120(%rsp),%eax
000000000005D3B8 test $1,%al
000000000005D3BA je 0x000000000005D3C2
000000000005D3BC jmp 0x000000000005D3BE
000000000005D3BE jmp 0x000000000005D3E8
000000000005D3C0 ud2
000000000005D3C2 mov 0x10(%rsp),%rsi
000000000005D3C7 mov 0x121(%rsp),%al
000000000005D3CE mov %al,0xE(%rsp)
000000000005D3D2 lea 0x250(%rsp),%rdi
000000000005D3DA lea 0x305DE0,%rdx
000000000005D3E1 call 0x00000000000314A0
000000000005D3E6 jmp 0x000000000005D43E
000000000005D3E8 lea 0x120(%rsp),%rsi
000000000005D3F0 add $8,%rsi
000000000005D3F4 lea 0x1A0(%rsp),%rdi
000000000005D3FC mov $0x38,%edx
000000000005D401 call 0x000000000002E4B8
000000000005D406 lea 0x1D8(%rsp),%rdi
000000000005D40E lea 0x1A0(%rsp),%rsi
000000000005D416 mov $0x38,%edx
000000000005D41B call 0x000000000002E4B8
000000000005D420 mov 0x18(%rsp),%rdi
000000000005D425 lea 0x1D8(%rsp),%rsi
000000000005D42D lea 0x3031E0,%rdx
000000000005D434 call 0x00000000000761D0
000000000005D439 jmp 0x000000000005D38E
000000000005D43E lea 0x210(%rsp),%rdi
000000000005D446 lea 0x250(%rsp),%rsi
000000000005D44E call 0x0000000000077B40
000000000005D453 movzbl 0x210(%rsp),%eax
000000000005D45B test $1,%al
000000000005D45D je 0x000000000005D465
000000000005D45F jmp 0x000000000005D461
000000000005D461 jmp 0x000000000005D480
000000000005D463 ud2
000000000005D465 mov 0x10(%rsp),%rdi
000000000005D46A mov 0x211(%rsp),%al
000000000005D471 mov %al,0xC(%rsp)
000000000005D475 call 0x0000000000031580
000000000005D47A mov %al,0xD(%rsp)
000000000005D47E jmp 0x000000000005D4D6
000000000005D480 lea 0x210(%rsp),%rsi
000000000005D488 add $8,%rsi
000000000005D48C lea 0x290(%rsp),%rdi
000000000005D494 mov $0x38,%edx
000000000005D499 call 0x000000000002E4B8
000000000005D49E lea 0x2C8(%rsp),%rdi
000000000005D4A6 lea 0x290(%rsp),%rsi
000000000005D4AE mov $0x38,%edx
000000000005D4B3 call 0x000000000002E4B8
000000000005D4B8 mov 0x18(%rsp),%rdi
000000000005D4BD lea 0x2C8(%rsp),%rsi
000000000005D4C5 lea 0x3031F8,%rdx
000000000005D4CC call 0x00000000000761D0
000000000005D4D1 jmp 0x000000000005D38E
000000000005D4D6 mov 0xD(%rsp),%al
000000000005D4DA test $1,%al
000000000005D4DC jne 0x000000000005D4F1
000000000005D4DE jmp 0x000000000005D4E0
000000000005D4E0 mov 0xC(%rsp),%al
000000000005D4E4 test $1,%al
000000000005D4E6 jne 0x000000000005D6C4
000000000005D4EC jmp 0x000000000005D6BA
000000000005D4F1 mov 0xF(%rsp),%al
000000000005D4F5 xor $0xFF,%al
000000000005D4F7 test $1,%al
000000000005D4F9 jne 0x000000000005D505
000000000005D4FB movb $0,0x307(%rsp)
000000000005D503 jmp 0x000000000005D514
000000000005D505 mov 0xC(%rsp),%al
000000000005D509 xor $0xFF,%al
000000000005D50B and $1,%al
000000000005D50D mov %al,0x307(%rsp)
000000000005D514 testb $1,0x307(%rsp)
000000000005D51C jne 0x000000000005D528
000000000005D51E movb $0,0x306(%rsp)
000000000005D526 jmp 0x000000000005D551
000000000005D528 mov 0x10(%rsp),%rdi
000000000005D52D lea 0x305F90,%rsi
000000000005D534 call 0x0000000000031510
000000000005D539 mov %rax,(%rsp)
000000000005D53D mov (%rsp),%rax
000000000005D541 cmp $0,%rax
000000000005D545 seta %al
000000000005D548 and $1,%al
000000000005D54A mov %al,0x306(%rsp)
000000000005D551 testb $1,0x306(%rsp)
000000000005D559 jne 0x000000000005D565
000000000005D55B mov 0xF(%rsp),%al
000000000005D55F test $1,%al
000000000005D561 jne 0x000000000005D5D0
000000000005D563 jmp 0x000000000005D5C6
000000000005D565 mov 0x18(%rsp),%rdi
000000000005D56A lea 0x305F90,%rax
000000000005D571 mov %rax,0x310(%rsp)
000000000005D579 lea 0x305DB0,%rax
000000000005D580 mov %rax,0x318(%rsp)
000000000005D588 lea 0x305DE0,%rax
000000000005D58F mov %rax,0x320(%rsp)
000000000005D597 movb $6,0x308(%rsp)
000000000005D59F add $8,%rdi
000000000005D5A3 lea 0x308(%rsp),%rsi
000000000005D5AB mov $0x38,%edx
000000000005D5B0 call 0x000000000002E4B8
000000000005D5B5 mov 0x18(%rsp),%rax
000000000005D5BA movq $1,(%rax)
000000000005D5C1 jmp 0x000000000005D38E
000000000005D5C6 movb $0,0x347(%rsp)
000000000005D5CE jmp 0x000000000005D5DD
000000000005D5D0 mov 0xE(%rsp),%al
000000000005D5D4 and $1,%al
000000000005D5D6 mov %al,0x347(%rsp)
000000000005D5DD testb $1,0x347(%rsp)
000000000005D5E5 jne 0x000000000005D5F1
000000000005D5E7 mov 0xC(%rsp),%al
000000000005D5EB test $1,%al
000000000005D5ED jne 0x000000000005D64D
000000000005D5EF jmp 0x000000000005D643
000000000005D5F1 mov 0x18(%rsp),%rdi
000000000005D5F6 lea 0x305DB0,%rax
000000000005D5FD mov %rax,0x350(%rsp)
000000000005D605 lea 0x305F60,%rax
000000000005D60C mov %rax,0x358(%rsp)
000000000005D614 movb $4,0x348(%rsp)
000000000005D61C add $8,%rdi
000000000005D620 lea 0x348(%rsp),%rsi
000000000005D628 mov $0x38,%edx
000000000005D62D call 0x000000000002E4B8
000000000005D632 mov 0x18(%rsp),%rax
000000000005D637 movq $1,(%rax)
000000000005D63E jmp 0x000000000005D38E
000000000005D643 movb $0,0x387(%rsp)
000000000005D64B jmp 0x000000000005D65A
000000000005D64D mov 0xE(%rsp),%al
000000000005D651 and $1,%al
000000000005D653 mov %al,0x387(%rsp)
000000000005D65A testb $1,0x387(%rsp)
000000000005D662 je 0x000000000005D4E0
000000000005D668 mov 0x18(%rsp),%rdi
000000000005D66D lea 0x305DE0,%rax
000000000005D674 mov %rax,0x390(%rsp)
000000000005D67C lea 0x305F60,%rax
000000000005D683 mov %rax,0x398(%rsp)
000000000005D68B movb $4,0x388(%rsp)
000000000005D693 add $8,%rdi
000000000005D697 lea 0x388(%rsp),%rsi
000000000005D69F mov $0x38,%edx
000000000005D6A4 call 0x000000000002E4B8
000000000005D6A9 mov 0x18(%rsp),%rax
000000000005D6AE movq $1,(%rax)
000000000005D6B5 jmp 0x000000000005D38E
000000000005D6BA movb $0,0x3C7(%rsp)
000000000005D6C2 jmp 0x000000000005D6D1
000000000005D6C4 mov 0x27(%rsp),%al
000000000005D6C8 and $1,%al
000000000005D6CA mov %al,0x3C7(%rsp)
000000000005D6D1 testb $1,0x3C7(%rsp)
000000000005D6D9 jne 0x000000000005D6EC
000000000005D6DB mov 0xF(%rsp),%al
000000000005D6DF test $1,%al
000000000005D6E1 jne 0x000000000005D83E
000000000005D6E7 jmp 0x000000000005D82D
000000000005D6EC mov 0x10(%rsp),%rsi
000000000005D6F1 lea 0x438(%rsp),%rdi
000000000005D6F9 mov $1,%edx
000000000005D6FE call 0x000000000005DA00
000000000005D703 lea 0x3F8(%rsp),%rdi
000000000005D70B lea 0x438(%rsp),%rsi
000000000005D713 call 0x0000000000078690
000000000005D718 mov 0x3F8(%rsp),%rax
000000000005D720 test %rax,%rax
000000000005D723 je 0x000000000005D72B
000000000005D725 jmp 0x000000000005D727
000000000005D727 jmp 0x000000000005D7A2
000000000005D729 ud2
000000000005D72B mov 0x400(%rsp),%rax
000000000005D733 mov %rax,0x4E8(%rsp)
000000000005D73B mov 0x408(%rsp),%rax
000000000005D743 mov %rax,0x4F0(%rsp)
000000000005D74B mov 0x410(%rsp),%rax
000000000005D753 mov %rax,0x4F8(%rsp)
000000000005D75B mov 0x4E8(%rsp),%rax
000000000005D763 mov %rax,0x3E0(%rsp)
000000000005D76B mov 0x4F0(%rsp),%rax
000000000005D773 mov %rax,0x3E8(%rsp)
000000000005D77B mov 0x4F8(%rsp),%rax
000000000005D783 mov %rax,0x3F0(%rsp)
000000000005D78B lea 0x3C8(%rsp),%rdi
000000000005D793 lea 0x3E0(%rsp),%rsi
000000000005D79B call 0x000000000005DD90
000000000005D7A0 jmp 0x000000000005D7F8
000000000005D7A2 lea 0x3F8(%rsp),%rsi
000000000005D7AA add $8,%rsi
000000000005D7AE lea 0x478(%rsp),%rdi
000000000005D7B6 mov $0x38,%edx
000000000005D7BB call 0x000000000002E4B8
000000000005D7C0 lea 0x4B0(%rsp),%rdi
000000000005D7C8 lea 0x478(%rsp),%rsi
000000000005D7D0 mov $0x38,%edx
000000000005D7D5 call 0x000000000002E4B8
000000000005D7DA mov 0x18(%rsp),%rdi
000000000005D7DF lea 0x4B0(%rsp),%rsi
000000000005D7E7 lea 0x303210,%rdx
000000000005D7EE call 0x00000000000761D0
000000000005D7F3 jmp 0x000000000005D38E
000000000005D7F8 mov 0x18(%rsp),%rax
000000000005D7FD mov 0x3C8(%rsp),%rcx
000000000005D805 mov %rcx,8(%rax)
000000000005D809 mov 0x3D0(%rsp),%rcx
000000000005D811 mov %rcx,0x10(%rax)
000000000005D815 mov 0x3D8(%rsp),%rcx
000000000005D81D mov %rcx,0x18(%rax)
000000000005D821 movq $0,(%rax)
000000000005D828 jmp 0x000000000005D38E
000000000005D82D mov 0xE(%rsp),%al
000000000005D831 test $1,%al
000000000005D833 jne 0x000000000005D9BD
000000000005D839 jmp 0x000000000005D97C
000000000005D83E mov 0x10(%rsp),%rsi
000000000005D843 lea 0x570(%rsp),%rdi
000000000005D84B xor %edx,%edx
000000000005D84D call 0x000000000005DA00
000000000005D852 lea 0x530(%rsp),%rdi
000000000005D85A lea 0x570(%rsp),%rsi
000000000005D862 call 0x0000000000078690
000000000005D867 mov 0x530(%rsp),%rax
000000000005D86F test %rax,%rax
000000000005D872 je 0x000000000005D87A
000000000005D874 jmp 0x000000000005D876
000000000005D876 jmp 0x000000000005D8F1
000000000005D878 ud2
000000000005D87A mov 0x538(%rsp),%rax
000000000005D882 mov %rax,0x620(%rsp)
000000000005D88A mov 0x540(%rsp),%rax
000000000005D892 mov %rax,0x628(%rsp)
000000000005D89A mov 0x548(%rsp),%rax
000000000005D8A2 mov %rax,0x630(%rsp)
000000000005D8AA mov 0x620(%rsp),%rax
000000000005D8B2 mov %rax,0x518(%rsp)
000000000005D8BA mov 0x628(%rsp),%rax
000000000005D8C2 mov %rax,0x520(%rsp)
000000000005D8CA mov 0x630(%rsp),%rax
000000000005D8D2 mov %rax,0x528(%rsp)
000000000005D8DA lea 0x500(%rsp),%rdi
000000000005D8E2 lea 0x518(%rsp),%rsi
000000000005D8EA call 0x000000000005DD90
000000000005D8EF jmp 0x000000000005D947
000000000005D8F1 lea 0x530(%rsp),%rsi
000000000005D8F9 add $8,%rsi
000000000005D8FD lea 0x5B0(%rsp),%rdi
000000000005D905 mov $0x38,%edx
000000000005D90A call 0x000000000002E4B8
000000000005D90F lea 0x5E8(%rsp),%rdi
000000000005D917 lea 0x5B0(%rsp),%rsi
000000000005D91F mov $0x38,%edx
000000000005D924 call 0x000000000002E4B8
000000000005D929 mov 0x18(%rsp),%rdi
000000000005D92E lea 0x5E8(%rsp),%rsi
000000000005D936 lea 0x303228,%rdx
000000000005D93D call 0x00000000000761D0
000000000005D942 jmp 0x000000000005D38E
000000000005D947 mov 0x18(%rsp),%rax
000000000005D94C mov 0x500(%rsp),%rcx
000000000005D954 mov %rcx,8(%rax)
000000000005D958 mov 0x508(%rsp),%rcx
000000000005D960 mov %rcx,0x10(%rax)
000000000005D964 mov 0x510(%rsp),%rcx
000000000005D96C mov %rcx,0x18(%rax)
000000000005D970 movq $0,(%rax)
000000000005D977 jmp 0x000000000005D38E
000000000005D97C mov 0x18(%rsp),%rax
000000000005D981 movq $3,0x650(%rsp)
000000000005D98D mov 0x650(%rsp),%rcx
000000000005D995 mov %rcx,8(%rax)
000000000005D999 mov 0x658(%rsp),%rcx
000000000005D9A1 mov %rcx,0x10(%rax)
000000000005D9A5 mov 0x660(%rsp),%rcx
000000000005D9AD mov %rcx,0x18(%rax)
000000000005D9B1 movq $0,(%rax)
000000000005D9B8 jmp 0x000000000005D38E
000000000005D9BD mov 0x18(%rsp),%rax
000000000005D9C2 movq $2,0x638(%rsp)
000000000005D9CE mov 0x638(%rsp),%rcx
000000000005D9D6 mov %rcx,8(%rax)
000000000005D9DA mov 0x640(%rsp),%rcx
000000000005D9E2 mov %rcx,0x10(%rax)
000000000005D9E6 mov 0x648(%rsp),%rcx
000000000005D9EE mov %rcx,0x18(%rax)
000000000005D9F2 movq $0,(%rax)
000000000005D9F9 jmp 0x000000000005D38E

 Function call queue at function 5d2d0: [761d0, 31510, 5da00, 78690, 5dd90]

Analyzing function at 761d0
00000000000761D0 sub $0xB8,%rsp
00000000000761D7 mov %rdi,(%rsp)
00000000000761DB mov %rdi,8(%rsp)
00000000000761E0 lea 0x10(%rsp),%rdi
00000000000761E5 mov $0x38,%edx
00000000000761EA call 0x000000000002E4B8
00000000000761EF lea 0x80(%rsp),%rdi
00000000000761F7 lea 0x10(%rsp),%rsi
00000000000761FC mov $0x38,%edx
0000000000076201 call 0x000000000002E4B8
0000000000076206 lea 0x48(%rsp),%rdi
000000000007620B lea 0x80(%rsp),%rsi
0000000000076213 call 0x0000000000089330
0000000000076218 mov (%rsp),%rdi
000000000007621C add $8,%rdi
0000000000076220 lea 0x48(%rsp),%rsi
0000000000076225 mov $0x38,%edx
000000000007622A call 0x000000000002E4B8
000000000007622F mov (%rsp),%rcx
0000000000076233 mov 8(%rsp),%rax
0000000000076238 movq $1,(%rcx)
000000000007623F add $0xB8,%rsp
0000000000076246 ret

 Function call queue at function 761d0: []

Analyzing function at 31510
0000000000031510 sub $0x58,%rsp
0000000000031514 mov %rsi,0x20(%rsp)
0000000000031519 call 0x00000000000963E0
000000000003151E mov %rax,0x28(%rsp)
0000000000031523 mov %rdx,0x30(%rsp)
0000000000031528 mov 0x30(%rsp),%rsi
000000000003152D mov 0x28(%rsp),%rdi
0000000000031532 call 0x00000000000A2A50
0000000000031537 mov %rax,0x10(%rsp)
000000000003153C mov %rdx,0x18(%rsp)
0000000000031541 mov 0x18(%rsp),%rdx
0000000000031546 mov 0x10(%rsp),%rsi
000000000003154B mov 0x20(%rsp),%rax
0000000000031550 mov %rax,0x50(%rsp)
0000000000031555 mov 0x50(%rsp),%rcx
000000000003155A lea 0x38(%rsp),%rdi
000000000003155F call 0x0000000000051910
0000000000031564 lea 0x38(%rsp),%rdi
0000000000031569 call 0x000000000005A6F0
000000000003156E mov %rax,8(%rsp)
0000000000031573 mov 8(%rsp),%rax
0000000000031578 add $0x58,%rsp
000000000003157C ret

 Function call queue at function 31510: [51910, 5a6f0]

Analyzing function at 51910
0000000000051910 push %rax
0000000000051911 mov %rdi,%rax
0000000000051914 mov %rax,(%rsp)
0000000000051918 call 0x000000000005ACB0
000000000005191D mov (%rsp),%rax
0000000000051921 pop %rcx
0000000000051922 ret

 Function call queue at function 51910: []

Analyzing function at 5a6f0
000000000005A6F0 sub $0x58,%rsp
000000000005A6F4 movb $1,0x47(%rsp)
000000000005A6F9 mov (%rdi),%rax
000000000005A6FC mov %rax,0x10(%rsp)
000000000005A701 mov 8(%rdi),%rax
000000000005A705 mov %rax,0x18(%rsp)
000000000005A70A mov 0x10(%rdi),%rdi
000000000005A70E call 0x000000000005A780
000000000005A713 mov %rax,0x20(%rsp)
000000000005A718 jmp 0x000000000005A733
000000000005A71A testb $1,0x47(%rsp)
000000000005A71F jne 0x000000000005A770
000000000005A721 jmp 0x000000000005A764
000000000005A723 mov %rax,%rcx
000000000005A726 mov %edx,%eax
000000000005A728 mov %rcx,0x48(%rsp)
000000000005A72D mov %eax,0x50(%rsp)
000000000005A731 jmp 0x000000000005A71A
000000000005A733 mov 0x20(%rsp),%rcx
000000000005A738 mov 0x18(%rsp),%rdx
000000000005A73D mov 0x10(%rsp),%rsi
000000000005A742 movb $0,0x47(%rsp)
000000000005A747 lea 0x28(%rsp),%rdi
000000000005A74C call 0x0000000000050F10
000000000005A751 jmp 0x000000000005A753
000000000005A753 lea 0x28(%rsp),%rdi
000000000005A758 call 0x00000000000B6140
000000000005A75D mov %rax,8(%rsp)
000000000005A762 jmp 0x000000000005A772
000000000005A764 mov 0x48(%rsp),%rdi
000000000005A769 call 0x000000000002E3D0
000000000005A76E ud2
000000000005A770 jmp 0x000000000005A764
000000000005A772 mov 8(%rsp),%rax
000000000005A777 add $0x58,%rsp
000000000005A77B ret

 Function call queue at function 5a6f0: [5a780, 50f10, b6140]

Analyzing function at 5a780
000000000005A780 push %rax
000000000005A781 mov %rdi,(%rsp)
000000000005A785 mov (%rsp),%rax
000000000005A789 pop %rcx
000000000005A78A ret

 Function call queue at function 5a780: []

Analyzing function at 50f10
0000000000050F10 push %rax
0000000000050F11 mov %rdi,%rax
0000000000050F14 mov %rax,(%rsp)
0000000000050F18 call 0x00000000000B6BF0
0000000000050F1D mov (%rsp),%rax
0000000000050F21 pop %rcx
0000000000050F22 ret

 Function call queue at function 50f10: []

Analyzing function at b6140
00000000000B6140 sub $0x28,%rsp
00000000000B6144 mov (%rdi),%rax
00000000000B6147 mov %rax,0x10(%rsp)
00000000000B614C mov 8(%rdi),%rax
00000000000B6150 mov %rax,0x18(%rsp)
00000000000B6155 mov 0x10(%rdi),%rax
00000000000B6159 mov %rax,0x20(%rsp)
00000000000B615E lea 0x10(%rsp),%rdi
00000000000B6163 call 0x0000000000062380
00000000000B6168 mov %rax,8(%rsp)
00000000000B616D mov 8(%rsp),%rax
00000000000B6172 add $0x28,%rsp
00000000000B6176 ret

 Function call queue at function b6140: [62380]

Analyzing function at 62380
0000000000062380 sub $0x28,%rsp
0000000000062384 mov (%rdi),%rax
0000000000062387 mov %rax,0x10(%rsp)
000000000006238C mov 8(%rdi),%rax
0000000000062390 mov %rax,0x18(%rsp)
0000000000062395 mov 0x10(%rdi),%rax
0000000000062399 mov %rax,0x20(%rsp)
000000000006239E lea 0x10(%rsp),%rdi
00000000000623A3 xor %eax,%eax
00000000000623A5 mov %eax,%esi
00000000000623A7 call 0x00000000000B5890
00000000000623AC mov %rax,8(%rsp)
00000000000623B1 mov 8(%rsp),%rax
00000000000623B6 add $0x28,%rsp
00000000000623BA ret

 Function call queue at function 62380: [b5890]

Analyzing function at b5890
00000000000B5890 sub $0x48,%rsp
00000000000B5894 mov %rsi,0x10(%rsp)
00000000000B5899 movb $1,0x37(%rsp)
00000000000B589E mov (%rdi),%rax
00000000000B58A1 mov %rax,0x18(%rsp)
00000000000B58A6 mov 8(%rdi),%rax
00000000000B58AA mov %rax,0x20(%rsp)
00000000000B58AF movb $1,0x36(%rsp)
00000000000B58B4 mov 0x10(%rdi),%rdi
00000000000B58B8 call 0x00000000000B6CB0
00000000000B58BD mov %rax,0x28(%rsp)
00000000000B58C2 jmp 0x00000000000B58DD
00000000000B58C4 testb $1,0x36(%rsp)
00000000000B58C9 jne 0x00000000000B591A
00000000000B58CB jmp 0x00000000000B5911
00000000000B58CD mov %rax,%rcx
00000000000B58D0 mov %edx,%eax
00000000000B58D2 mov %rcx,0x38(%rsp)
00000000000B58D7 mov %eax,0x40(%rsp)
00000000000B58DB jmp 0x00000000000B58C4
00000000000B58DD mov 0x28(%rsp),%rcx
00000000000B58E2 mov 0x10(%rsp),%rdx
00000000000B58E7 mov 0x20(%rsp),%rsi
00000000000B58EC mov 0x18(%rsp),%rdi
00000000000B58F1 movb $0,0x37(%rsp)
00000000000B58F6 movb $0,0x36(%rsp)
00000000000B58FB call 0x00000000000517F0
00000000000B5900 mov %rax,8(%rsp)
00000000000B5905 jmp 0x00000000000B5907
00000000000B5907 mov 8(%rsp),%rax
00000000000B590C add $0x48,%rsp
00000000000B5910 ret

 Function call queue at function b5890: [b6cb0, 517f0]

Analyzing function at b6cb0
00000000000B6CB0 push %rax
00000000000B6CB1 mov %rdi,(%rsp)
00000000000B6CB5 mov (%rsp),%rax
00000000000B6CB9 pop %rcx
00000000000B6CBA ret

 Function call queue at function b6cb0: []

Analyzing function at 517f0
00000000000517F0 sub $0x68,%rsp
00000000000517F4 mov %rdi,0x18(%rsp)
00000000000517F9 mov %rsi,0x20(%rsp)
00000000000517FE mov %rcx,0x28(%rsp)
0000000000051803 movb $1,0x57(%rsp)
0000000000051808 mov %rdx,0x30(%rsp)
000000000005180D lea 0x18(%rsp),%rdi
0000000000051812 call 0x0000000000053910
0000000000051817 mov %rax,0x10(%rsp)
000000000005181C jmp 0x000000000005183E
000000000005181E testb $1,0x57(%rsp)
0000000000051823 jne 0x00000000000518B9
0000000000051829 jmp 0x00000000000518B7
000000000005182E mov %rax,%rcx
0000000000051831 mov %edx,%eax
0000000000051833 mov %rcx,0x58(%rsp)
0000000000051838 mov %eax,0x60(%rsp)
000000000005183C jmp 0x000000000005181E
000000000005183E mov 0x10(%rsp),%rax
0000000000051843 mov %rax,0x38(%rsp)
0000000000051848 mov $1,%eax
000000000005184D xor %ecx,%ecx
000000000005184F cmpq $0,0x38(%rsp)
0000000000051855 cmove %rcx,%rax
0000000000051859 cmp $1,%rax
000000000005185D jne 0x0000000000051893
000000000005185F mov 0x38(%rsp),%rax
0000000000051864 movb $0,0x57(%rsp)
0000000000051869 mov 0x30(%rsp),%rcx
000000000005186E mov %rcx,0x40(%rsp)
0000000000051873 mov %rax,0x48(%rsp)
0000000000051878 mov 0x40(%rsp),%rsi
000000000005187D mov 0x48(%rsp),%rdx
0000000000051882 lea 0x28(%rsp),%rdi
0000000000051887 call 0x00000000000B6E60
000000000005188C mov %rax,8(%rsp)
0000000000051891 jmp 0x00000000000518A3
0000000000051893 jmp 0x0000000000051895
0000000000051895 jmp 0x0000000000051897
0000000000051897 jmp 0x0000000000051899
0000000000051899 mov 0x30(%rsp),%rax
000000000005189E add $0x68,%rsp
00000000000518A2 ret
00000000000518A3 mov 8(%rsp),%rax
00000000000518A8 movb $1,0x57(%rsp)
00000000000518AD mov %rax,0x30(%rsp)
00000000000518B2 jmp 0x000000000005180D

 Function call queue at function 517f0: [b6e60]

Analyzing function at b6e60
00000000000B6E60 sub $0x58,%rsp
00000000000B6E64 mov %rsi,0x10(%rsp)
00000000000B6E69 mov %rdi,%rax
00000000000B6E6C mov %rax,0x18(%rsp)
00000000000B6E71 movb $1,0x47(%rsp)
00000000000B6E76 mov %rdx,0x38(%rsp)
00000000000B6E7B mov 0x38(%rsp),%rsi
00000000000B6E80 call 0x000000000005A7A0
00000000000B6E85 mov %rax,0x20(%rsp)
00000000000B6E8A jmp 0x00000000000B6EA5
00000000000B6E8C testb $1,0x47(%rsp)
00000000000B6E91 jne 0x00000000000B6EEF
00000000000B6E93 jmp 0x00000000000B6EE3
00000000000B6E95 mov %rax,%rcx
00000000000B6E98 mov %edx,%eax
00000000000B6E9A mov %rcx,0x48(%rsp)
00000000000B6E9F mov %eax,0x50(%rsp)
00000000000B6EA3 jmp 0x00000000000B6E8C
00000000000B6EA5 mov 0x18(%rsp),%rdi
00000000000B6EAA mov 0x20(%rsp),%rax
00000000000B6EAF mov 0x10(%rsp),%rcx
00000000000B6EB4 movb $0,0x47(%rsp)
00000000000B6EB9 mov %rcx,0x28(%rsp)
00000000000B6EBE mov %rax,0x30(%rsp)
00000000000B6EC3 mov 0x28(%rsp),%rsi
00000000000B6EC8 mov 0x30(%rsp),%rdx
00000000000B6ECD call 0x00000000000623C0
00000000000B6ED2 mov %rax,8(%rsp)
00000000000B6ED7 jmp 0x00000000000B6ED9
00000000000B6ED9 mov 8(%rsp),%rax
00000000000B6EDE add $0x58,%rsp
00000000000B6EE2 ret

 Function call queue at function b6e60: [5a7a0, 623c0]

Analyzing function at 5a7a0
000000000005A7A0 sub $0x38,%rsp
000000000005A7A4 mov %rsi,0x18(%rsp)
000000000005A7A9 lea 0x18(%rsp),%rax
000000000005A7AE mov %rax,0x20(%rsp)
000000000005A7B3 mov 0x20(%rsp),%rsi
000000000005A7B8 call 0x00000000000A6450
000000000005A7BD mov %al,0x17(%rsp)
000000000005A7C1 jmp 0x000000000005A7D5
000000000005A7C3 jmp 0x000000000005A7E5
000000000005A7C5 mov %rax,%rcx
000000000005A7C8 mov %edx,%eax
000000000005A7CA mov %rcx,0x28(%rsp)
000000000005A7CF mov %eax,0x30(%rsp)
000000000005A7D3 jmp 0x000000000005A7C3
000000000005A7D5 mov 0x17(%rsp),%al
000000000005A7D9 and $1,%al
000000000005A7DB movzbl %al,%eax
000000000005A7DE mov %rax,8(%rsp)
000000000005A7E3 jmp 0x000000000005A7F1
000000000005A7E5 mov 0x28(%rsp),%rdi
000000000005A7EA call 0x000000000002E3D0
000000000005A7EF ud2
000000000005A7F1 mov 8(%rsp),%rax
000000000005A7F6 add $0x38,%rsp
000000000005A7FA ret

 Function call queue at function 5a7a0: [a6450]

Analyzing function at a6450
00000000000A6450 push %rax
00000000000A6451 mov %rdi,%rax
00000000000A6454 mov (%rsi),%rdi
00000000000A6457 mov (%rax),%rsi
00000000000A645A call 0x0000000000030FD0
00000000000A645F mov %al,7(%rsp)
00000000000A6463 mov 7(%rsp),%al
00000000000A6467 and $1,%al
00000000000A6469 movzbl %al,%eax
00000000000A646C pop %rcx
00000000000A646D ret

 Function call queue at function a6450: []

Analyzing function at 623c0
00000000000623C0 push %rax
00000000000623C1 add %rdx,%rsi
00000000000623C4 mov %rsi,(%rsp)
00000000000623C8 setb %al
00000000000623CB test $1,%al
00000000000623CD jne 0x00000000000623D5
00000000000623CF mov (%rsp),%rax
00000000000623D3 pop %rcx
00000000000623D4 ret
00000000000623D5 lea 0x255210,%rdi
00000000000623DC lea 0x303740,%rdx
00000000000623E3 lea 0x2FB10,%rax
00000000000623EA mov $0x1C,%esi
00000000000623EF call *%rax
00000000000623F1 ud2

 Function call queue at function 623c0: []

Analyzing function at 5da00
000000000005DA00 sub $0x248,%rsp
000000000005DA07 mov %rdi,0x20(%rsp)
000000000005DA0C mov %dl,%al
000000000005DA0E mov %al,0x2F(%rsp)
000000000005DA12 mov %rdi,0x30(%rsp)
000000000005DA17 lea 0x88(%rsp),%rdi
000000000005DA1F lea 0x305F90,%rdx
000000000005DA26 call 0x00000000000314E0
000000000005DA2B lea 0x48(%rsp),%rdi
000000000005DA30 lea 0x88(%rsp),%rsi
000000000005DA38 call 0x0000000000077940
000000000005DA3D mov 0x48(%rsp),%rax
000000000005DA42 test %rax,%rax
000000000005DA45 je 0x000000000005DA4D
000000000005DA47 jmp 0x000000000005DA49
000000000005DA49 jmp 0x000000000005DA7A
000000000005DA4B ud2
000000000005DA4D mov 0x50(%rsp),%rcx
000000000005DA52 mov 0x58(%rsp),%rax
000000000005DA57 mov %rcx,0x38(%rsp)
000000000005DA5C mov %rax,0x40(%rsp)
000000000005DA61 mov $1,%eax
000000000005DA66 xor %ecx,%ecx
000000000005DA68 cmpq $0,0x38(%rsp)
000000000005DA6E cmove %rcx,%rax
000000000005DA72 cmp $1,%rax
000000000005DA76 je 0x000000000005DAD7
000000000005DA78 jmp 0x000000000005DAF0
000000000005DA7A lea 0x48(%rsp),%rsi
000000000005DA7F add $8,%rsi
000000000005DA83 lea 0xC8(%rsp),%rdi
000000000005DA8B mov $0x38,%edx
000000000005DA90 call 0x000000000002E4B8
000000000005DA95 lea 0x100(%rsp),%rdi
000000000005DA9D lea 0xC8(%rsp),%rsi
000000000005DAA5 mov $0x38,%edx
000000000005DAAA call 0x000000000002E4B8
000000000005DAAF mov 0x20(%rsp),%rdi
000000000005DAB4 lea 0x100(%rsp),%rsi
000000000005DABC lea 0x303240,%rdx
000000000005DAC3 call 0x0000000000075DD0
000000000005DAC8 jmp 0x000000000005DACA
000000000005DACA mov 0x30(%rsp),%rax
000000000005DACF add $0x248,%rsp
000000000005DAD6 ret
000000000005DAD7 mov 0x38(%rsp),%rsi
000000000005DADC mov 0x40(%rsp),%rdx
000000000005DAE1 lea 0x138(%rsp),%rdi
000000000005DAE9 call 0x0000000000088E50
000000000005DAEE jmp 0x000000000005DB5F
000000000005DAF0 mov 0x20(%rsp),%rax
000000000005DAF5 mov 0x2F(%rsp),%cl
000000000005DAF9 movq $0,0x228(%rsp)
000000000005DB05 and $1,%cl
000000000005DB08 mov %cl,0x220(%rsp)
000000000005DB0F mov 0x228(%rsp),%rdx
000000000005DB17 mov 0x230(%rsp),%rcx
000000000005DB1F mov %rdx,0x210(%rsp)
000000000005DB27 mov %rcx,0x218(%rsp)
000000000005DB2F mov 0x210(%rsp),%rcx
000000000005DB37 mov %rcx,8(%rax)
000000000005DB3B mov 0x218(%rsp),%rcx
000000000005DB43 mov %rcx,0x10(%rax)
000000000005DB47 mov 0x220(%rsp),%rcx
000000000005DB4F mov %rcx,0x18(%rax)
000000000005DB53 movq $0,(%rax)
000000000005DB5A jmp 0x000000000005DACA
000000000005DB5F lea 0x1AF980,%rax
000000000005DB66 lea 0x138(%rsp),%rdi
000000000005DB6E call *%rax
000000000005DB70 mov %rdx,0x10(%rsp)
000000000005DB75 mov %rax,0x18(%rsp)
000000000005DB7A jmp 0x000000000005DBA8
000000000005DB7C lea 0x1C9610,%rax
000000000005DB83 lea 0x138(%rsp),%rdi
000000000005DB8B call *%rax
000000000005DB8D jmp 0x000000000005DD6D
000000000005DB92 mov %rax,%rcx
000000000005DB95 mov %edx,%eax
000000000005DB97 mov %rcx,0x238(%rsp)
000000000005DB9F mov %eax,0x240(%rsp)
000000000005DBA6 jmp 0x000000000005DB7C
000000000005DBA8 mov 0x10(%rsp),%rdx
000000000005DBAD mov 0x18(%rsp),%rsi
000000000005DBB2 lea 0xBFFE0,%rax
000000000005DBB9 lea 0x158(%rsp),%rdi
000000000005DBC1 call *%rax
000000000005DBC3 jmp 0x000000000005DBC5
000000000005DBC5 movzbl 0x158(%rsp),%eax
000000000005DBCD test $1,%al
000000000005DBCF je 0x000000000005DBDA
000000000005DBD1 jmp 0x000000000005DBD3
000000000005DBD3 jmp 0x000000000005DC59
000000000005DBD8 ud2
000000000005DBDA mov 0x20(%rsp),%rax
000000000005DBDF mov 0x2F(%rsp),%cl
000000000005DBE3 mov 0x160(%rsp),%rdx
000000000005DBEB mov %rdx,0x188(%rsp)
000000000005DBF3 movq $1,0x180(%rsp)
000000000005DBFF and $1,%cl
000000000005DC02 mov %cl,0x178(%rsp)
000000000005DC09 mov 0x180(%rsp),%rdx
000000000005DC11 mov 0x188(%rsp),%rcx
000000000005DC19 mov %rdx,0x168(%rsp)
000000000005DC21 mov %rcx,0x170(%rsp)
000000000005DC29 mov 0x168(%rsp),%rcx
000000000005DC31 mov %rcx,8(%rax)
000000000005DC35 mov 0x170(%rsp),%rcx
000000000005DC3D mov %rcx,0x10(%rax)
000000000005DC41 mov 0x178(%rsp),%rcx
000000000005DC49 mov %rcx,0x18(%rax)
000000000005DC4D movq $0,(%rax)
000000000005DC54 jmp 0x000000000005DD7C
000000000005DC59 mov 0x159(%rsp),%al
000000000005DC60 mov %al,0xF(%rsp)
000000000005DC64 lea 0x305F90,%rax
000000000005DC6B mov %rax,0x198(%rsp)
000000000005DC73 movq $0,0x190(%rsp)
000000000005DC7F lea 0x1E0(%rsp),%rdi
000000000005DC87 lea 0x138(%rsp),%rsi
000000000005DC8F call 0x0000000000082A40
000000000005DC94 jmp 0x000000000005DC96
000000000005DC96 mov 0x20(%rsp),%rdi
000000000005DC9B mov 0xF(%rsp),%al
000000000005DC9F mov 0x190(%rsp),%rcx
000000000005DCA7 mov %rcx,0x1F8(%rsp)
000000000005DCAF mov 0x198(%rsp),%rcx
000000000005DCB7 mov %rcx,0x200(%rsp)
000000000005DCBF mov 0x1A0(%rsp),%rcx
000000000005DCC7 mov %rcx,0x208(%rsp)
000000000005DCCF mov 0x1E0(%rsp),%rcx
000000000005DCD7 mov %rcx,0x1B0(%rsp)
000000000005DCDF mov 0x1E8(%rsp),%rcx
000000000005DCE7 mov %rcx,0x1B8(%rsp)
000000000005DCEF mov 0x1F0(%rsp),%rcx
000000000005DCF7 mov %rcx,0x1C0(%rsp)
000000000005DCFF mov 0x1F8(%rsp),%rcx
000000000005DD07 mov %rcx,0x1C8(%rsp)
000000000005DD0F mov 0x200(%rsp),%rcx
000000000005DD17 mov %rcx,0x1D0(%rsp)
000000000005DD1F mov 0x208(%rsp),%rcx
000000000005DD27 mov %rcx,0x1D8(%rsp)
000000000005DD2F mov %al,0x1A9(%rsp)
000000000005DD36 movb $8,0x1A8(%rsp)
000000000005DD3E add $8,%rdi
000000000005DD42 lea 0x1A8(%rsp),%rsi
000000000005DD4A mov $0x38,%edx
000000000005DD4F call 0x000000000002E4B8
000000000005DD54 mov 0x20(%rsp),%rax
000000000005DD59 movq $1,(%rax)
000000000005DD60 jmp 0x000000000005DD7C
000000000005DD62 lea 0x2FBE0,%rax
000000000005DD69 call *%rax
000000000005DD6B ud2
000000000005DD6D mov 0x238(%rsp),%rdi
000000000005DD75 call 0x000000000002E3D0
000000000005DD7A ud2
000000000005DD7C lea 0x138(%rsp),%rdi
000000000005DD84 callq *0x317308
000000000005DD8A jmp 0x000000000005DB5A

 Function call queue at function 5da00: [75dd0, 88e50, 82a40]

Analyzing function at 75dd0
0000000000075DD0 sub $0xB8,%rsp
0000000000075DD7 mov %rdi,(%rsp)
0000000000075DDB mov %rdi,8(%rsp)
0000000000075DE0 lea 0x10(%rsp),%rdi
0000000000075DE5 mov $0x38,%edx
0000000000075DEA call 0x000000000002E4B8
0000000000075DEF lea 0x80(%rsp),%rdi
0000000000075DF7 lea 0x10(%rsp),%rsi
0000000000075DFC mov $0x38,%edx
0000000000075E01 call 0x000000000002E4B8
0000000000075E06 lea 0x48(%rsp),%rdi
0000000000075E0B lea 0x80(%rsp),%rsi
0000000000075E13 call 0x0000000000089330
0000000000075E18 mov (%rsp),%rdi
0000000000075E1C add $8,%rdi
0000000000075E20 lea 0x48(%rsp),%rsi
0000000000075E25 mov $0x38,%edx
0000000000075E2A call 0x000000000002E4B8
0000000000075E2F mov (%rsp),%rcx
0000000000075E33 mov 8(%rsp),%rax
0000000000075E38 movq $1,(%rcx)
0000000000075E3F add $0xB8,%rsp
0000000000075E46 ret

 Function call queue at function 75dd0: []

Analyzing function at 88e50
0000000000088E50 push %rax
0000000000088E51 mov %rdi,%rax
0000000000088E54 mov %rax,(%rsp)
0000000000088E58 callq *0x311CE0
0000000000088E5E mov (%rsp),%rax
0000000000088E62 pop %rcx
0000000000088E63 ret

 Function call queue at function 88e50: []

Analyzing function at 82a40
0000000000082A40 sub $0x38,%rsp
0000000000082A44 mov %rsi,0x10(%rsp)
0000000000082A49 mov %rdi,%rax
0000000000082A4C mov 0x10(%rsp),%rdi
0000000000082A51 mov %rax,0x18(%rsp)
0000000000082A56 mov %rax,0x20(%rsp)
0000000000082A5B callq *0x310060
0000000000082A61 mov %rax,0x28(%rsp)
0000000000082A66 mov %rdx,0x30(%rsp)
0000000000082A6B mov 0x30(%rsp),%rsi
0000000000082A70 mov 0x28(%rsp),%rdi
0000000000082A75 lea 0x303DC0,%rdx
0000000000082A7C callq *0x317768
0000000000082A82 mov %rax,(%rsp)
0000000000082A86 mov %rdx,8(%rsp)
0000000000082A8B mov 8(%rsp),%rdx
0000000000082A90 mov (%rsp),%rsi
0000000000082A94 mov 0x18(%rsp),%rdi
0000000000082A99 call 0x0000000000030760
0000000000082A9E mov 0x20(%rsp),%rax
0000000000082AA3 add $0x38,%rsp
0000000000082AA7 ret

 Function call queue at function 82a40: [30760]

Analyzing function at 30760
0000000000030760 sub $0x48,%rsp
0000000000030764 mov %rdi,(%rsp)
0000000000030768 mov %rdi,8(%rsp)
000000000003076D mov %rsi,0x38(%rsp)
0000000000030772 mov %rdx,0x40(%rsp)
0000000000030777 mov 0x38(%rsp),%rax
000000000003077C mov %rax,0x10(%rsp)
0000000000030781 mov 0x40(%rsp),%rax
0000000000030786 mov %rax,0x18(%rsp)
000000000003078B mov 0x18(%rsp),%rdx
0000000000030790 mov 0x10(%rsp),%rsi
0000000000030795 lea 0x20(%rsp),%rdi
000000000003079A callq *0x315360
00000000000307A0 mov (%rsp),%rdi
00000000000307A4 lea 0x20(%rsp),%rsi
00000000000307A9 call 0x0000000000064600
00000000000307AE mov 8(%rsp),%rax
00000000000307B3 add $0x48,%rsp
00000000000307B7 ret

 Function call queue at function 30760: [64600]

Analyzing function at 64600
0000000000064600 sub $0x18,%rsp
0000000000064604 mov %rdi,%rax
0000000000064607 mov (%rsi),%rcx
000000000006460A mov %rcx,(%rsp)
000000000006460E mov 8(%rsi),%rcx
0000000000064612 mov %rcx,8(%rsp)
0000000000064617 mov 0x10(%rsi),%rcx
000000000006461B mov %rcx,0x10(%rsp)
0000000000064620 mov (%rsp),%rcx
0000000000064624 mov %rcx,(%rdi)
0000000000064627 mov 8(%rsp),%rcx
000000000006462C mov %rcx,8(%rdi)
0000000000064630 mov 0x10(%rsp),%rcx
0000000000064635 mov %rcx,0x10(%rdi)
0000000000064639 add $0x18,%rsp
000000000006463D ret

 Function call queue at function 64600: []

Analyzing function at 78690
0000000000078690 sub $0xF8,%rsp
0000000000078697 mov %rsi,8(%rsp)
000000000007869C mov %rdi,0x10(%rsp)
00000000000786A1 mov %rdi,0x18(%rsp)
00000000000786A6 mov (%rsi),%rax
00000000000786A9 test %rax,%rax
00000000000786AC je 0x00000000000786B4
00000000000786AE jmp 0x00000000000786B0
00000000000786B0 jmp 0x000000000007871B
00000000000786B2 ud2
00000000000786B4 mov 0x10(%rsp),%rax
00000000000786B9 mov 8(%rsp),%rcx
00000000000786BE mov 8(%rcx),%rdx
00000000000786C2 mov %rdx,0x20(%rsp)
00000000000786C7 mov 0x10(%rcx),%rdx
00000000000786CB mov %rdx,0x28(%rsp)
00000000000786D0 mov 0x18(%rcx),%rcx
00000000000786D4 mov %rcx,0x30(%rsp)
00000000000786D9 mov 0x20(%rsp),%rcx
00000000000786DE mov %rcx,0x38(%rsp)
00000000000786E3 mov 0x28(%rsp),%rcx
00000000000786E8 mov %rcx,0x40(%rsp)
00000000000786ED mov 0x30(%rsp),%rcx
00000000000786F2 mov %rcx,0x48(%rsp)
00000000000786F7 mov 0x38(%rsp),%rcx
00000000000786FC mov %rcx,8(%rax)
0000000000078700 mov 0x40(%rsp),%rcx
0000000000078705 mov %rcx,0x10(%rax)
0000000000078709 mov 0x48(%rsp),%rcx
000000000007870E mov %rcx,0x18(%rax)
0000000000078712 movq $0,(%rax)
0000000000078719 jmp 0x000000000007878B
000000000007871B mov 8(%rsp),%rsi
0000000000078720 add $8,%rsi
0000000000078724 lea 0x50(%rsp),%rdi
0000000000078729 mov $0x38,%edx
000000000007872E call 0x000000000002E4B8
0000000000078733 lea 0xC0(%rsp),%rdi
000000000007873B lea 0x50(%rsp),%rsi
0000000000078740 mov $0x38,%edx
0000000000078745 call 0x000000000002E4B8
000000000007874A lea 0x88(%rsp),%rdi
0000000000078752 lea 0xC0(%rsp),%rsi
000000000007875A mov $0x38,%edx
000000000007875F call 0x000000000002E4B8
0000000000078764 mov 0x10(%rsp),%rdi
0000000000078769 add $8,%rdi
000000000007876D lea 0x88(%rsp),%rsi
0000000000078775 mov $0x38,%edx
000000000007877A call 0x000000000002E4B8
000000000007877F mov 0x10(%rsp),%rax
0000000000078784 movq $1,(%rax)
000000000007878B mov 0x18(%rsp),%rax
0000000000078790 add $0xF8,%rsp
0000000000078797 ret

 Function call queue at function 78690: []

Analyzing function at 5dd90
000000000005DD90 mov %rdi,%rax
000000000005DD93 mov (%rsi),%rcx
000000000005DD96 mov %rcx,(%rdi)
000000000005DD99 mov 8(%rsi),%rcx
000000000005DD9D mov %rcx,8(%rdi)
000000000005DDA1 mov 0x10(%rsi),%rcx
000000000005DDA5 mov %rcx,0x10(%rdi)
000000000005DDA9 ret

 Function call queue at function 5dd90: []

Analyzing function at 77780
0000000000077780 sub $0xF8,%rsp
0000000000077787 mov %rsi,8(%rsp)
000000000007778C mov %rdi,0x10(%rsp)
0000000000077791 mov %rdi,0x18(%rsp)
0000000000077796 mov (%rsi),%rax
0000000000077799 test %rax,%rax
000000000007779C je 0x00000000000777A4
000000000007779E jmp 0x00000000000777A0
00000000000777A0 jmp 0x000000000007780B
00000000000777A2 ud2
00000000000777A4 mov 0x10(%rsp),%rax
00000000000777A9 mov 8(%rsp),%rcx
00000000000777AE mov 8(%rcx),%rdx
00000000000777B2 mov %rdx,0x20(%rsp)
00000000000777B7 mov 0x10(%rcx),%rdx
00000000000777BB mov %rdx,0x28(%rsp)
00000000000777C0 mov 0x18(%rcx),%rcx
00000000000777C4 mov %rcx,0x30(%rsp)
00000000000777C9 mov 0x20(%rsp),%rcx
00000000000777CE mov %rcx,0x38(%rsp)
00000000000777D3 mov 0x28(%rsp),%rcx
00000000000777D8 mov %rcx,0x40(%rsp)
00000000000777DD mov 0x30(%rsp),%rcx
00000000000777E2 mov %rcx,0x48(%rsp)
00000000000777E7 mov 0x38(%rsp),%rcx
00000000000777EC mov %rcx,8(%rax)
00000000000777F0 mov 0x40(%rsp),%rcx
00000000000777F5 mov %rcx,0x10(%rax)
00000000000777F9 mov 0x48(%rsp),%rcx
00000000000777FE mov %rcx,0x18(%rax)
0000000000077802 movq $0,(%rax)
0000000000077809 jmp 0x000000000007787B
000000000007780B mov 8(%rsp),%rsi
0000000000077810 add $8,%rsi
0000000000077814 lea 0x50(%rsp),%rdi
0000000000077819 mov $0x38,%edx
000000000007781E call 0x000000000002E4B8
0000000000077823 lea 0xC0(%rsp),%rdi
000000000007782B lea 0x50(%rsp),%rsi
0000000000077830 mov $0x38,%edx
0000000000077835 call 0x000000000002E4B8
000000000007783A lea 0x88(%rsp),%rdi
0000000000077842 lea 0xC0(%rsp),%rsi
000000000007784A mov $0x38,%edx
000000000007784F call 0x000000000002E4B8
0000000000077854 mov 0x10(%rsp),%rdi
0000000000077859 add $8,%rdi
000000000007785D lea 0x88(%rsp),%rsi
0000000000077865 mov $0x38,%edx
000000000007786A call 0x000000000002E4B8
000000000007786F mov 0x10(%rsp),%rax
0000000000077874 movq $1,(%rax)
000000000007787B mov 0x18(%rsp),%rax
0000000000077880 add $0xF8,%rsp
0000000000077887 ret

 Function call queue at function 77780: []

Analyzing function at 44da0
0000000000044DA0 sub $0x728,%rsp
0000000000044DA7 mov %rsi,8(%rsp)
0000000000044DAC mov %rdi,0x10(%rsp)
0000000000044DB1 mov %rdi,0x18(%rsp)
0000000000044DB6 lea 0x80(%rsp),%rdi
0000000000044DBE lea 0x306140,%rdx
0000000000044DC5 call 0x00000000000314A0
0000000000044DCA lea 0x40(%rsp),%rdi
0000000000044DCF lea 0x80(%rsp),%rsi
0000000000044DD7 call 0x0000000000077B40
0000000000044DDC movzbl 0x40(%rsp),%eax
0000000000044DE1 test $1,%al
0000000000044DE3 je 0x0000000000044DEB
0000000000044DE5 jmp 0x0000000000044DE7
0000000000044DE7 jmp 0x0000000000044E0E
0000000000044DE9 ud2
0000000000044DEB mov 8(%rsp),%rsi
0000000000044DF0 mov 0x41(%rsp),%al
0000000000044DF4 mov %al,7(%rsp)
0000000000044DF8 lea 0x170(%rsp),%rdi
0000000000044E00 lea 0x305FC0,%rdx
0000000000044E07 call 0x00000000000314A0
0000000000044E0C jmp 0x0000000000044E61
0000000000044E0E lea 0x40(%rsp),%rsi
0000000000044E13 add $8,%rsi
0000000000044E17 lea 0xC0(%rsp),%rdi
0000000000044E1F mov $0x38,%edx
0000000000044E24 call 0x000000000002E4B8
0000000000044E29 lea 0xF8(%rsp),%rdi
0000000000044E31 lea 0xC0(%rsp),%rsi
0000000000044E39 mov $0x38,%edx
0000000000044E3E call 0x000000000002E4B8
0000000000044E43 mov 0x10(%rsp),%rdi
0000000000044E48 lea 0xF8(%rsp),%rsi
0000000000044E50 lea 0x302638,%rdx
0000000000044E57 call 0x00000000000762D0
0000000000044E5C jmp 0x00000000000453A5
0000000000044E61 lea 0x130(%rsp),%rdi
0000000000044E69 lea 0x170(%rsp),%rsi
0000000000044E71 call 0x0000000000077B40
0000000000044E76 movzbl 0x130(%rsp),%eax
0000000000044E7E test $1,%al
0000000000044E80 je 0x0000000000044E88
0000000000044E82 jmp 0x0000000000044E84
0000000000044E84 jmp 0x0000000000044EAE
0000000000044E86 ud2
0000000000044E88 mov 8(%rsp),%rsi
0000000000044E8D mov 0x131(%rsp),%al
0000000000044E94 mov %al,6(%rsp)
0000000000044E98 lea 0x260(%rsp),%rdi
0000000000044EA0 lea 0x306170,%rdx
0000000000044EA7 call 0x00000000000314A0
0000000000044EAC jmp 0x0000000000044F04
0000000000044EAE lea 0x130(%rsp),%rsi
0000000000044EB6 add $8,%rsi
0000000000044EBA lea 0x1B0(%rsp),%rdi
0000000000044EC2 mov $0x38,%edx
0000000000044EC7 call 0x000000000002E4B8
0000000000044ECC lea 0x1E8(%rsp),%rdi
0000000000044ED4 lea 0x1B0(%rsp),%rsi
0000000000044EDC mov $0x38,%edx
0000000000044EE1 call 0x000000000002E4B8
0000000000044EE6 mov 0x10(%rsp),%rdi
0000000000044EEB lea 0x1E8(%rsp),%rsi
0000000000044EF3 lea 0x302650,%rdx
0000000000044EFA call 0x00000000000762D0
0000000000044EFF jmp 0x0000000000044E5C
0000000000044F04 lea 0x220(%rsp),%rdi
0000000000044F0C lea 0x260(%rsp),%rsi
0000000000044F14 call 0x0000000000077B40
0000000000044F19 movzbl 0x220(%rsp),%eax
0000000000044F21 test $1,%al
0000000000044F23 je 0x0000000000044F2B
0000000000044F25 jmp 0x0000000000044F27
0000000000044F27 jmp 0x0000000000044F4A
0000000000044F29 ud2
0000000000044F2B mov 8(%rsp),%rsi
0000000000044F30 mov 0x221(%rsp),%al
0000000000044F37 mov %al,5(%rsp)
0000000000044F3B lea 0x350(%rsp),%rdi
0000000000044F43 call 0x00000000000453C0
0000000000044F48 jmp 0x0000000000044FA0
0000000000044F4A lea 0x220(%rsp),%rsi
0000000000044F52 add $8,%rsi
0000000000044F56 lea 0x2A0(%rsp),%rdi
0000000000044F5E mov $0x38,%edx
0000000000044F63 call 0x000000000002E4B8
0000000000044F68 lea 0x2D8(%rsp),%rdi
0000000000044F70 lea 0x2A0(%rsp),%rsi
0000000000044F78 mov $0x38,%edx
0000000000044F7D call 0x000000000002E4B8
0000000000044F82 mov 0x10(%rsp),%rdi
0000000000044F87 lea 0x2D8(%rsp),%rsi
0000000000044F8F lea 0x302668,%rdx
0000000000044F96 call 0x00000000000762D0
0000000000044F9B jmp 0x0000000000044EFF
0000000000044FA0 lea 0x310(%rsp),%rdi
0000000000044FA8 lea 0x350(%rsp),%rsi
0000000000044FB0 call 0x0000000000077E30
0000000000044FB5 movzbl 0x310(%rsp),%eax
0000000000044FBD test $1,%al
0000000000044FBF je 0x0000000000044FC7
0000000000044FC1 jmp 0x0000000000044FC3
0000000000044FC3 jmp 0x0000000000044FF1
0000000000044FC5 ud2
0000000000044FC7 mov 8(%rsp),%rsi
0000000000044FCC mov 0x311(%rsp),%al
0000000000044FD3 mov %al,3(%rsp)
0000000000044FD7 mov 0x312(%rsp),%al
0000000000044FDE mov %al,4(%rsp)
0000000000044FE2 lea 0x440(%rsp),%rdi
0000000000044FEA call 0x0000000000079E70
0000000000044FEF jmp 0x0000000000045047
0000000000044FF1 lea 0x310(%rsp),%rsi
0000000000044FF9 add $8,%rsi
0000000000044FFD lea 0x390(%rsp),%rdi
0000000000045005 mov $0x38,%edx
000000000004500A call 0x000000000002E4B8
000000000004500F lea 0x3C8(%rsp),%rdi
0000000000045017 lea 0x390(%rsp),%rsi
000000000004501F mov $0x38,%edx
0000000000045024 call 0x000000000002E4B8
0000000000045029 mov 0x10(%rsp),%rdi
000000000004502E lea 0x3C8(%rsp),%rsi
0000000000045036 lea 0x302680,%rdx
000000000004503D call 0x00000000000762D0
0000000000045042 jmp 0x0000000000044F9B
0000000000045047 lea 0x400(%rsp),%rdi
000000000004504F lea 0x440(%rsp),%rsi
0000000000045057 call 0x0000000000078ED0
000000000004505C movzbl 0x400(%rsp),%eax
0000000000045064 test $1,%al
0000000000045066 je 0x000000000004506E
0000000000045068 jmp 0x000000000004506A
000000000004506A jmp 0x000000000004508D
000000000004506C ud2
000000000004506E mov 8(%rsp),%rsi
0000000000045073 mov 0x401(%rsp),%al
000000000004507A mov %al,2(%rsp)
000000000004507E lea 0x550(%rsp),%rdi
0000000000045086 call 0x0000000000045D20
000000000004508B jmp 0x00000000000450E3
000000000004508D lea 0x400(%rsp),%rsi
0000000000045095 add $8,%rsi
0000000000045099 lea 0x480(%rsp),%rdi
00000000000450A1 mov $0x38,%edx
00000000000450A6 call 0x000000000002E4B8
00000000000450AB lea 0x4B8(%rsp),%rdi
00000000000450B3 lea 0x480(%rsp),%rsi
00000000000450BB mov $0x38,%edx
00000000000450C0 call 0x000000000002E4B8
00000000000450C5 mov 0x10(%rsp),%rdi
00000000000450CA lea 0x4B8(%rsp),%rsi
00000000000450D2 lea 0x302698,%rdx
00000000000450D9 call 0x00000000000762D0
00000000000450DE jmp 0x0000000000045042
00000000000450E3 lea 0x510(%rsp),%rdi
00000000000450EB lea 0x550(%rsp),%rsi
00000000000450F3 call 0x0000000000078980
00000000000450F8 mov 0x510(%rsp),%rax
0000000000045100 test %rax,%rax
0000000000045103 je 0x000000000004510B
0000000000045105 jmp 0x0000000000045107
0000000000045107 jmp 0x000000000004515F
0000000000045109 ud2
000000000004510B mov 8(%rsp),%rsi
0000000000045110 mov 0x528(%rsp),%rax
0000000000045118 mov %rax,0x610(%rsp)
0000000000045120 movups 0x518(%rsp),%xmm0
0000000000045128 movaps %xmm0,0x600(%rsp)
0000000000045130 mov 0x610(%rsp),%rax
0000000000045138 mov %rax,0x500(%rsp)
0000000000045140 movaps 0x600(%rsp),%xmm0
0000000000045148 movaps %xmm0,0x4F0(%rsp)
0000000000045150 lea 0x660(%rsp),%rdi
0000000000045158 call 0x0000000000046100
000000000004515D jmp 0x00000000000451DA
000000000004515F lea 0x510(%rsp),%rsi
0000000000045167 add $8,%rsi
000000000004516B lea 0x590(%rsp),%rdi
0000000000045173 mov $0x38,%edx
0000000000045178 call 0x000000000002E4B8
000000000004517D lea 0x5C8(%rsp),%rdi
0000000000045185 lea 0x590(%rsp),%rsi
000000000004518D mov $0x38,%edx
0000000000045192 call 0x000000000002E4B8
0000000000045197 mov 0x10(%rsp),%rdi
000000000004519C lea 0x5C8(%rsp),%rsi
00000000000451A4 lea 0x3026B0,%rdx
00000000000451AB call 0x00000000000762D0
00000000000451B0 jmp 0x00000000000450DE
00000000000451B5 lea 0x4F0(%rsp),%rdi
00000000000451BD call 0x000000000009CC50
00000000000451C2 jmp 0x000000000004520F
00000000000451C4 mov %rax,%rcx
00000000000451C7 mov %edx,%eax
00000000000451C9 mov %rcx,0x718(%rsp)
00000000000451D1 mov %eax,0x720(%rsp)
00000000000451D8 jmp 0x00000000000451B5
00000000000451DA lea 0x620(%rsp),%rdi
00000000000451E2 lea 0x660(%rsp),%rsi
00000000000451EA call 0x0000000000078280
00000000000451EF jmp 0x00000000000451F1
00000000000451F1 movzbl 0x620(%rsp),%eax
00000000000451F9 test $1,%al
00000000000451FB je 0x0000000000045220
00000000000451FD jmp 0x00000000000451FF
00000000000451FF jmp 0x00000000000452D0
0000000000045204 lea 0x2FBE0,%rax
000000000004520B call *%rax
000000000004520D ud2
000000000004520F mov 0x718(%rsp),%rdi
0000000000045217 call 0x000000000002E3D0
000000000004521C ud2
000000000004521E ud2
0000000000045220 mov 0x10(%rsp),%rax
0000000000045225 mov 2(%rsp),%dl
0000000000045229 mov 5(%rsp),%sil
000000000004522E mov 6(%rsp),%dil
0000000000045233 mov 4(%rsp),%r8b
0000000000045238 mov 3(%rsp),%r9b
000000000004523D mov 7(%rsp),%r10b
0000000000045242 mov 0x621(%rsp),%cl
0000000000045249 and $1,%r10b
000000000004524D mov %r10b,0x38(%rsp)
0000000000045252 mov %r9b,0x39(%rsp)
0000000000045257 mov %r8b,0x3A(%rsp)
000000000004525C and $1,%dil
0000000000045260 mov %dil,0x3B(%rsp)
0000000000045265 and $1,%sil
0000000000045269 mov %sil,0x3C(%rsp)
000000000004526E mov %dl,0x3D(%rsp)
0000000000045272 mov 0x4F0(%rsp),%rdx
000000000004527A mov %rdx,0x20(%rsp)
000000000004527F mov 0x4F8(%rsp),%rdx
0000000000045287 mov %rdx,0x28(%rsp)
000000000004528C mov 0x500(%rsp),%rdx
0000000000045294 mov %rdx,0x30(%rsp)
0000000000045299 and $1,%cl
000000000004529C mov %cl,0x3E(%rsp)
00000000000452A0 mov 0x20(%rsp),%rcx
00000000000452A5 mov %rcx,8(%rax)
00000000000452A9 mov 0x28(%rsp),%rcx
00000000000452AE mov %rcx,0x10(%rax)
00000000000452B2 mov 0x30(%rsp),%rcx
00000000000452B7 mov %rcx,0x18(%rax)
00000000000452BB mov 0x38(%rsp),%rcx
00000000000452C0 mov %rcx,0x20(%rax)
00000000000452C4 movq $0,(%rax)
00000000000452CB jmp 0x00000000000453A5
00000000000452D0 mov 0x10(%rsp),%rdi
00000000000452D5 mov 0x658(%rsp),%rax
00000000000452DD mov %rax,0x6D0(%rsp)
00000000000452E5 movups 0x628(%rsp),%xmm0
00000000000452ED movups 0x638(%rsp),%xmm1
00000000000452F5 movups 0x648(%rsp),%xmm2
00000000000452FD movaps %xmm2,0x6C0(%rsp)
0000000000045305 movaps %xmm1,0x6B0(%rsp)
000000000004530D movaps %xmm0,0x6A0(%rsp)
0000000000045315 mov 0x6D0(%rsp),%rax
000000000004531D mov %rax,0x710(%rsp)
0000000000045325 movaps 0x6A0(%rsp),%xmm0
000000000004532D movaps 0x6B0(%rsp),%xmm1
0000000000045335 movaps 0x6C0(%rsp),%xmm2
000000000004533D movaps %xmm2,0x700(%rsp)
0000000000045345 movaps %xmm1,0x6F0(%rsp)
000000000004534D movaps %xmm0,0x6E0(%rsp)
0000000000045355 lea 0x3026C8,%rdx
000000000004535C lea 0x6E0(%rsp),%rsi
0000000000045364 call 0x00000000000762D0
0000000000045369 jmp 0x0000000000045393
000000000004536B lea 0x4F0(%rsp),%rdi
0000000000045373 call 0x000000000009CC50
0000000000045378 jmp 0x000000000004520F
000000000004537D mov %rax,%rcx
0000000000045380 mov %edx,%eax
0000000000045382 mov %rcx,0x718(%rsp)
000000000004538A mov %eax,0x720(%rsp)
0000000000045391 jmp 0x000000000004536B
0000000000045393 lea 0x4F0(%rsp),%rdi
000000000004539B call 0x000000000009CC50
00000000000453A0 jmp 0x00000000000451B0
00000000000453A5 mov 0x18(%rsp),%rax
00000000000453AA add $0x728,%rsp
00000000000453B1 ret

 Function call queue at function 44da0: [762d0, 453c0, 77e30, 79e70, 78ed0, 45d20, 78980, 46100, 9cc50, 78280]

Analyzing function at 762d0
00000000000762D0 sub $0xB8,%rsp
00000000000762D7 mov %rdi,(%rsp)
00000000000762DB mov %rdi,8(%rsp)
00000000000762E0 lea 0x10(%rsp),%rdi
00000000000762E5 mov $0x38,%edx
00000000000762EA call 0x000000000002E4B8
00000000000762EF lea 0x80(%rsp),%rdi
00000000000762F7 lea 0x10(%rsp),%rsi
00000000000762FC mov $0x38,%edx
0000000000076301 call 0x000000000002E4B8
0000000000076306 lea 0x48(%rsp),%rdi
000000000007630B lea 0x80(%rsp),%rsi
0000000000076313 call 0x0000000000089330
0000000000076318 mov (%rsp),%rdi
000000000007631C add $8,%rdi
0000000000076320 lea 0x48(%rsp),%rsi
0000000000076325 mov $0x38,%edx
000000000007632A call 0x000000000002E4B8
000000000007632F mov (%rsp),%rcx
0000000000076333 mov 8(%rsp),%rax
0000000000076338 movq $1,(%rcx)
000000000007633F add $0xB8,%rsp
0000000000076346 ret

 Function call queue at function 762d0: []

Analyzing function at 453c0
00000000000453C0 sub $0x218,%rsp
00000000000453C7 mov %rdi,0x50(%rsp)
00000000000453CC mov %rdi,0x58(%rsp)
00000000000453D1 lea 0xB0(%rsp),%rdi
00000000000453D9 lea 0x3060B0,%rdx
00000000000453E0 call 0x00000000000314E0
00000000000453E5 lea 0x70(%rsp),%rdi
00000000000453EA lea 0xB0(%rsp),%rsi
00000000000453F2 call 0x0000000000077940
00000000000453F7 mov 0x70(%rsp),%rax
00000000000453FC test %rax,%rax
00000000000453FF je 0x0000000000045407
0000000000045401 jmp 0x0000000000045403
0000000000045403 jmp 0x0000000000045432
0000000000045405 ud2
0000000000045407 mov 0x78(%rsp),%rcx
000000000004540C mov 0x80(%rsp),%rax
0000000000045414 mov %rcx,0x60(%rsp)
0000000000045419 mov %rax,0x68(%rsp)
000000000004541E mov 0x60(%rsp),%rax
0000000000045423 test %rax,%rax
0000000000045426 setne %al
0000000000045429 movzbl %al,%eax
000000000004542C je 0x0000000000045487
000000000004542E jmp 0x0000000000045430
0000000000045430 jmp 0x0000000000045499
0000000000045432 lea 0x70(%rsp),%rsi
0000000000045437 add $8,%rsi
000000000004543B lea 0xF0(%rsp),%rdi
0000000000045443 mov $0x38,%edx
0000000000045448 call 0x000000000002E4B8
000000000004544D lea 0x128(%rsp),%rdi
0000000000045455 lea 0xF0(%rsp),%rsi
000000000004545D mov $0x38,%edx
0000000000045462 call 0x000000000002E4B8
0000000000045467 mov 0x50(%rsp),%rdi
000000000004546C lea 0x128(%rsp),%rsi
0000000000045474 lea 0x3026E0,%rdx
000000000004547B call 0x0000000000075A00
0000000000045480 jmp 0x0000000000045BE7
0000000000045485 ud2
0000000000045487 call 0x0000000000045CF0
000000000004548C mov %al,0x4E(%rsp)
0000000000045490 mov %dl,0x4F(%rsp)
0000000000045494 jmp 0x0000000000045CCF
0000000000045499 mov 0x60(%rsp),%rdi
000000000004549E mov %rdi,0x38(%rsp)
00000000000454A3 mov 0x68(%rsp),%rsi
00000000000454A8 mov %rsi,0x40(%rsp)
00000000000454AD call 0x0000000000088E80
00000000000454B2 mov %rdx,0x168(%rsp)
00000000000454BA mov %rax,0x160(%rsp)
00000000000454C2 mov 0x160(%rsp),%rax
00000000000454CA test %rax,%rax
00000000000454CD setne %al
00000000000454D0 movzbl %al,%eax
00000000000454D3 je 0x00000000000454DB
00000000000454D5 jmp 0x00000000000454D7
00000000000454D7 jmp 0x00000000000454F7
00000000000454D9 ud2
00000000000454DB mov 0x40(%rsp),%rdx
00000000000454E0 mov 0x38(%rsp),%rsi
00000000000454E5 lea 0x1A8(%rsp),%rdi
00000000000454ED call 0x0000000000032560
00000000000454F2 jmp 0x0000000000045C60
00000000000454F7 mov 0x160(%rsp),%rdi
00000000000454FF mov %rdi,0x20(%rsp)
0000000000045504 mov 0x168(%rsp),%rsi
000000000004550C mov %rsi,0x28(%rsp)
0000000000045511 lea 0x2538B1,%rdx
0000000000045518 mov $4,%ecx
000000000004551D call 0x0000000000049F90
0000000000045522 mov %al,0x37(%rsp)
0000000000045526 mov 0x37(%rsp),%al
000000000004552A test $1,%al
000000000004552C jne 0x0000000000045551
000000000004552E jmp 0x0000000000045530
0000000000045530 mov 0x28(%rsp),%rsi
0000000000045535 mov 0x20(%rsp),%rdi
000000000004553A lea 0x2538D1,%rdx
0000000000045541 mov $8,%ecx
0000000000045546 call 0x0000000000049F90
000000000004554B mov %al,0x1F(%rsp)
000000000004554F jmp 0x0000000000045576
0000000000045551 movb $1,0x1C2(%rsp)
0000000000045559 movzbl 0x1C2(%rsp),%edi
0000000000045561 call 0x00000000000463A0
0000000000045566 mov %dl,0x1C1(%rsp)
000000000004556D mov %al,0x1C0(%rsp)
0000000000045574 jmp 0x00000000000455A1
0000000000045576 mov 0x1F(%rsp),%al
000000000004557A test $1,%al
000000000004557C jne 0x0000000000045551
000000000004557E jmp 0x0000000000045580
0000000000045580 mov 0x28(%rsp),%rsi
0000000000045585 mov 0x20(%rsp),%rdi
000000000004558A lea 0x2538B5,%rdx
0000000000045591 mov $4,%ecx
0000000000045596 call 0x0000000000049F90
000000000004559B mov %al,0x1E(%rsp)
000000000004559F jmp 0x00000000000455C2
00000000000455A1 mov 0x50(%rsp),%rax
00000000000455A6 mov 0x1C0(%rsp),%dl
00000000000455AD mov 0x1C1(%rsp),%cl
00000000000455B4 mov %dl,1(%rax)
00000000000455B7 mov %cl,2(%rax)
00000000000455BA movb $0,(%rax)
00000000000455BD jmp 0x0000000000045BE7
00000000000455C2 mov 0x1E(%rsp),%al
00000000000455C6 test $1,%al
00000000000455C8 jne 0x00000000000455ED
00000000000455CA jmp 0x00000000000455CC
00000000000455CC mov 0x28(%rsp),%rsi
00000000000455D1 mov 0x20(%rsp),%rdi
00000000000455D6 lea 0x2538D9,%rdx
00000000000455DD mov $8,%ecx
00000000000455E2 call 0x0000000000049F90
00000000000455E7 mov %al,0x1D(%rsp)
00000000000455EB jmp 0x0000000000045612
00000000000455ED movb $0,0x1C3(%rsp)
00000000000455F5 movzbl 0x1C3(%rsp),%edi
00000000000455FD call 0x00000000000463A0
0000000000045602 mov %dl,0x1C1(%rsp)
0000000000045609 mov %al,0x1C0(%rsp)
0000000000045610 jmp 0x00000000000455A1
0000000000045612 mov 0x1D(%rsp),%al
0000000000045616 test $1,%al
0000000000045618 jne 0x00000000000455ED
000000000004561A jmp 0x000000000004561C
000000000004561C mov 0x28(%rsp),%rsi
0000000000045621 mov 0x20(%rsp),%rdi
0000000000045626 lea 0x253911,%rdx
000000000004562D mov $5,%ecx
0000000000045632 call 0x0000000000049F90
0000000000045637 mov %al,0x1C(%rsp)
000000000004563B mov 0x1C(%rsp),%al
000000000004563F test $1,%al
0000000000045641 jne 0x0000000000045666
0000000000045643 jmp 0x0000000000045645
0000000000045645 mov 0x28(%rsp),%rsi
000000000004564A mov 0x20(%rsp),%rdi
000000000004564F lea 0x253916,%rdx
0000000000045656 mov $9,%ecx
000000000004565B call 0x0000000000049F90
0000000000045660 mov %al,0x1B(%rsp)
0000000000045664 jmp 0x000000000004568E
0000000000045666 movb $1,0x1C4(%rsp)
000000000004566E movzbl 0x1C4(%rsp),%edi
0000000000045676 call 0x00000000000463E0
000000000004567B mov %dl,0x1C1(%rsp)
0000000000045682 mov %al,0x1C0(%rsp)
0000000000045689 jmp 0x00000000000455A1
000000000004568E mov 0x1B(%rsp),%al
0000000000045692 test $1,%al
0000000000045694 jne 0x0000000000045666
0000000000045696 jmp 0x0000000000045698
0000000000045698 mov 0x28(%rsp),%rsi
000000000004569D mov 0x20(%rsp),%rdi
00000000000456A2 lea 0x25391F,%rdx
00000000000456A9 mov $5,%ecx
00000000000456AE call 0x0000000000049F90
00000000000456B3 mov %al,0x1A(%rsp)
00000000000456B7 mov 0x1A(%rsp),%al
00000000000456BB test $1,%al
00000000000456BD jne 0x00000000000456E2
00000000000456BF jmp 0x00000000000456C1
00000000000456C1 mov 0x28(%rsp),%rsi
00000000000456C6 mov 0x20(%rsp),%rdi
00000000000456CB lea 0x253924,%rdx
00000000000456D2 mov $9,%ecx
00000000000456D7 call 0x0000000000049F90
00000000000456DC mov %al,0x19(%rsp)
00000000000456E0 jmp 0x000000000004570A
00000000000456E2 movb $0,0x1C5(%rsp)
00000000000456EA movzbl 0x1C5(%rsp),%edi
00000000000456F2 call 0x00000000000463E0
00000000000456F7 mov %dl,0x1C1(%rsp)
00000000000456FE mov %al,0x1C0(%rsp)
0000000000045705 jmp 0x00000000000455A1
000000000004570A mov 0x19(%rsp),%al
000000000004570E test $1,%al
0000000000045710 jne 0x00000000000456E2
0000000000045712 jmp 0x0000000000045714
0000000000045714 mov 0x28(%rsp),%rsi
0000000000045719 mov 0x20(%rsp),%rdi
000000000004571E lea 0x2538B9,%rdx
0000000000045725 mov $4,%ecx
000000000004572A call 0x0000000000049F90
000000000004572F mov %al,0x18(%rsp)
0000000000045733 mov 0x18(%rsp),%al
0000000000045737 test $1,%al
0000000000045739 jne 0x000000000004575E
000000000004573B jmp 0x000000000004573D
000000000004573D mov 0x28(%rsp),%rsi
0000000000045742 mov 0x20(%rsp),%rdi
0000000000045747 lea 0x2538E1,%rdx
000000000004574E mov $8,%ecx
0000000000045753 call 0x0000000000049F90
0000000000045758 mov %al,0x17(%rsp)
000000000004575C jmp 0x000000000004576B
000000000004575E movb $3,0x1C0(%rsp)
0000000000045766 jmp 0x00000000000455A1
000000000004576B mov 0x17(%rsp),%al
000000000004576F test $1,%al
0000000000045771 jne 0x000000000004575E
0000000000045773 jmp 0x0000000000045775
0000000000045775 mov 0x28(%rsp),%rsi
000000000004577A mov 0x20(%rsp),%rdi
000000000004577F lea 0x25392D,%rdx
0000000000045786 mov $3,%ecx
000000000004578B call 0x0000000000049F90
0000000000045790 mov %al,0x16(%rsp)
0000000000045794 mov 0x16(%rsp),%al
0000000000045798 test $1,%al
000000000004579A jne 0x00000000000457BF
000000000004579C jmp 0x000000000004579E
000000000004579E mov 0x28(%rsp),%rsi
00000000000457A3 mov 0x20(%rsp),%rdi
00000000000457A8 lea 0x253930,%rdx
00000000000457AF mov $9,%ecx
00000000000457B4 call 0x0000000000049F90
00000000000457B9 mov %al,0x15(%rsp)
00000000000457BD jmp 0x00000000000457E7
00000000000457BF movb $1,0x1C6(%rsp)
00000000000457C7 movzbl 0x1C6(%rsp),%edi
00000000000457CF call 0x00000000000463C0
00000000000457D4 mov %dl,0x1C1(%rsp)
00000000000457DB mov %al,0x1C0(%rsp)
00000000000457E2 jmp 0x00000000000455A1
00000000000457E7 mov 0x15(%rsp),%al
00000000000457EB test $1,%al
00000000000457ED jne 0x00000000000457BF
00000000000457EF jmp 0x00000000000457F1
00000000000457F1 mov 0x28(%rsp),%rsi
00000000000457F6 mov 0x20(%rsp),%rdi
00000000000457FB lea 0x253939,%rdx
0000000000045802 mov $3,%ecx
0000000000045807 call 0x0000000000049F90
000000000004580C mov %al,0x14(%rsp)
0000000000045810 mov 0x14(%rsp),%al
0000000000045814 test $1,%al
0000000000045816 jne 0x000000000004583B
0000000000045818 jmp 0x000000000004581A
000000000004581A mov 0x28(%rsp),%rsi
000000000004581F mov 0x20(%rsp),%rdi
0000000000045824 lea 0x25393C,%rdx
000000000004582B mov $9,%ecx
0000000000045830 call 0x0000000000049F90
0000000000045835 mov %al,0x13(%rsp)
0000000000045839 jmp 0x0000000000045863
000000000004583B movb $0,0x1C7(%rsp)
0000000000045843 movzbl 0x1C7(%rsp),%edi
000000000004584B call 0x00000000000463C0
0000000000045850 mov %dl,0x1C1(%rsp)
0000000000045857 mov %al,0x1C0(%rsp)
000000000004585E jmp 0x00000000000455A1
0000000000045863 mov 0x13(%rsp),%al
0000000000045867 test $1,%al
0000000000045869 jne 0x000000000004583B
000000000004586B jmp 0x000000000004586D
000000000004586D mov 0x28(%rsp),%rsi
0000000000045872 mov 0x20(%rsp),%rdi
0000000000045877 lea 0x2538BD,%rdx
000000000004587E mov $4,%ecx
0000000000045883 call 0x0000000000049F90
0000000000045888 mov %al,0x12(%rsp)
000000000004588C mov 0x12(%rsp),%al
0000000000045890 test $1,%al
0000000000045892 jne 0x00000000000458B7
0000000000045894 jmp 0x0000000000045896
0000000000045896 mov 0x28(%rsp),%rsi
000000000004589B mov 0x20(%rsp),%rdi
00000000000458A0 lea 0x2538C1,%rdx
00000000000458A7 mov $4,%ecx
00000000000458AC call 0x0000000000049F90
00000000000458B1 mov %al,0x11(%rsp)
00000000000458B5 jmp 0x00000000000458C4
00000000000458B7 movb $5,0x1C0(%rsp)
00000000000458BF jmp 0x00000000000455A1
00000000000458C4 mov 0x11(%rsp),%al
00000000000458C8 test $1,%al
00000000000458CA jne 0x00000000000458B7
00000000000458CC jmp 0x00000000000458CE
00000000000458CE mov 0x28(%rsp),%rsi
00000000000458D3 mov 0x20(%rsp),%rdi
00000000000458D8 lea 0x253945,%rdx
00000000000458DF mov $3,%ecx
00000000000458E4 call 0x0000000000049F90
00000000000458E9 mov %al,0x10(%rsp)
00000000000458ED mov 0x10(%rsp),%al
00000000000458F1 test $1,%al
00000000000458F3 jne 0x00000000000458B7
00000000000458F5 jmp 0x00000000000458F7
00000000000458F7 mov 0x28(%rsp),%rsi
00000000000458FC mov 0x20(%rsp),%rdi
0000000000045901 lea 0x2538E9,%rdx
0000000000045908 mov $8,%ecx
000000000004590D call 0x0000000000049F90
0000000000045912 mov %al,0xF(%rsp)
0000000000045916 mov 0xF(%rsp),%al
000000000004591A test $1,%al
000000000004591C jne 0x00000000000458B7
000000000004591E jmp 0x0000000000045920
0000000000045920 mov 0x28(%rsp),%rsi
0000000000045925 mov 0x20(%rsp),%rdi
000000000004592A lea 0x253948,%rdx
0000000000045931 mov $3,%ecx
0000000000045936 call 0x0000000000049F90
000000000004593B mov %al,0xE(%rsp)
000000000004593F mov 0xE(%rsp),%al
0000000000045943 test $1,%al
0000000000045945 jne 0x00000000000458B7
000000000004594B jmp 0x000000000004594D
000000000004594D mov 0x28(%rsp),%rsi
0000000000045952 mov 0x20(%rsp),%rdi
0000000000045957 lea 0x25394B,%rdx
000000000004595E mov $6,%ecx
0000000000045963 call 0x0000000000049F90
0000000000045968 mov %al,0xD(%rsp)
000000000004596C mov 0xD(%rsp),%al
0000000000045970 test $1,%al
0000000000045972 jne 0x00000000000458B7
0000000000045978 jmp 0x000000000004597A
000000000004597A mov 0x28(%rsp),%rsi
000000000004597F mov 0x20(%rsp),%rdi
0000000000045984 lea 0x253951,%rdx
000000000004598B mov $3,%ecx
0000000000045990 call 0x0000000000049F90
0000000000045995 mov %al,0xC(%rsp)
0000000000045999 mov 0xC(%rsp),%al
000000000004599D test $1,%al
000000000004599F jne 0x00000000000459C4
00000000000459A1 jmp 0x00000000000459A3
00000000000459A3 mov 0x28(%rsp),%rsi
00000000000459A8 mov 0x20(%rsp),%rdi
00000000000459AD lea 0x253954,%rdx
00000000000459B4 mov $3,%ecx
00000000000459B9 call 0x0000000000049F90
00000000000459BE mov %al,0xB(%rsp)
00000000000459C2 jmp 0x00000000000459D1
00000000000459C4 movb $0xA,0x1C0(%rsp)
00000000000459CC jmp 0x00000000000455A1
00000000000459D1 mov 0xB(%rsp),%al
00000000000459D5 test $1,%al
00000000000459D7 jne 0x00000000000459C4
00000000000459D9 jmp 0x00000000000459DB
00000000000459DB mov 0x28(%rsp),%rsi
00000000000459E0 mov 0x20(%rsp),%rdi
00000000000459E5 lea 0x253957,%rdx
00000000000459EC mov $6,%ecx
00000000000459F1 call 0x0000000000049F90
00000000000459F6 mov %al,0xA(%rsp)
00000000000459FA mov 0xA(%rsp),%al
00000000000459FE test $1,%al
0000000000045A00 jne 0x00000000000459C4
0000000000045A02 jmp 0x0000000000045A04
0000000000045A04 mov 0x28(%rsp),%rsi
0000000000045A09 mov 0x20(%rsp),%rdi
0000000000045A0E lea 0x25395D,%rdx
0000000000045A15 mov $2,%ecx
0000000000045A1A call 0x0000000000049F90
0000000000045A1F mov %al,9(%rsp)
0000000000045A23 mov 9(%rsp),%al
0000000000045A27 test $1,%al
0000000000045A29 jne 0x0000000000045A4E
0000000000045A2B jmp 0x0000000000045A2D
0000000000045A2D mov 0x28(%rsp),%rsi
0000000000045A32 mov 0x20(%rsp),%rdi
0000000000045A37 lea 0x25395F,%rdx
0000000000045A3E mov $7,%ecx
0000000000045A43 call 0x0000000000049F90
0000000000045A48 mov %al,8(%rsp)
0000000000045A4C jmp 0x0000000000045A5B
0000000000045A4E movb $7,0x1C0(%rsp)
0000000000045A56 jmp 0x00000000000455A1
0000000000045A5B mov 8(%rsp),%al
0000000000045A5F test $1,%al
0000000000045A61 jne 0x0000000000045A4E
0000000000045A63 jmp 0x0000000000045A65
0000000000045A65 mov 0x28(%rsp),%rsi
0000000000045A6A mov 0x20(%rsp),%rdi
0000000000045A6F lea 0x253966,%rdx
0000000000045A76 mov $3,%ecx
0000000000045A7B call 0x0000000000049F90
0000000000045A80 mov %al,7(%rsp)
0000000000045A84 mov 7(%rsp),%al
0000000000045A88 test $1,%al
0000000000045A8A jne 0x0000000000045AAF
0000000000045A8C jmp 0x0000000000045A8E
0000000000045A8E mov 0x28(%rsp),%rsi
0000000000045A93 mov 0x20(%rsp),%rdi
0000000000045A98 lea 0x2538F1,%rdx
0000000000045A9F mov $8,%ecx
0000000000045AA4 call 0x0000000000049F90
0000000000045AA9 mov %al,6(%rsp)
0000000000045AAD jmp 0x0000000000045ABC
0000000000045AAF movb $6,0x1C0(%rsp)
0000000000045AB7 jmp 0x00000000000455A1
0000000000045ABC mov 6(%rsp),%al
0000000000045AC0 test $1,%al
0000000000045AC2 jne 0x0000000000045AAF
0000000000045AC4 jmp 0x0000000000045AC6
0000000000045AC6 mov 0x28(%rsp),%rsi
0000000000045ACB mov 0x20(%rsp),%rdi
0000000000045AD0 lea 0x253969,%rdx
0000000000045AD7 mov $2,%ecx
0000000000045ADC call 0x0000000000049F90
0000000000045AE1 mov %al,5(%rsp)
0000000000045AE5 mov 5(%rsp),%al
0000000000045AE9 test $1,%al
0000000000045AEB jne 0x0000000000045B10
0000000000045AED jmp 0x0000000000045AEF
0000000000045AEF mov 0x28(%rsp),%rsi
0000000000045AF4 mov 0x20(%rsp),%rdi
0000000000045AF9 lea 0x25396B,%rdx
0000000000045B00 mov $7,%ecx
0000000000045B05 call 0x0000000000049F90
0000000000045B0A mov %al,4(%rsp)
0000000000045B0E jmp 0x0000000000045B1D
0000000000045B10 movb $8,0x1C0(%rsp)
0000000000045B18 jmp 0x00000000000455A1
0000000000045B1D mov 4(%rsp),%al
0000000000045B21 test $1,%al
0000000000045B23 jne 0x0000000000045B10
0000000000045B25 jmp 0x0000000000045B27
0000000000045B27 mov 0x28(%rsp),%rsi
0000000000045B2C mov 0x20(%rsp),%rdi
0000000000045B31 lea 0x253972,%rdx
0000000000045B38 mov $5,%ecx
0000000000045B3D call 0x0000000000049F90
0000000000045B42 mov %al,3(%rsp)
0000000000045B46 mov 3(%rsp),%al
0000000000045B4A test $1,%al
0000000000045B4C jne 0x0000000000045B71
0000000000045B4E jmp 0x0000000000045B50
0000000000045B50 mov 0x28(%rsp),%rsi
0000000000045B55 mov 0x20(%rsp),%rdi
0000000000045B5A lea 0x2538C5,%rdx
0000000000045B61 mov $4,%ecx
0000000000045B66 call 0x0000000000049F90
0000000000045B6B mov %al,2(%rsp)
0000000000045B6F jmp 0x0000000000045B7E
0000000000045B71 movb $4,0x1C0(%rsp)
0000000000045B79 jmp 0x00000000000455A1
0000000000045B7E mov 2(%rsp),%al
0000000000045B82 test $1,%al
0000000000045B84 jne 0x0000000000045BA9
0000000000045B86 jmp 0x0000000000045B88
0000000000045B88 mov 0x28(%rsp),%rsi
0000000000045B8D mov 0x20(%rsp),%rdi
0000000000045B92 lea 0x2538C9,%rdx
0000000000045B99 mov $4,%ecx
0000000000045B9E call 0x0000000000049F90
0000000000045BA3 mov %al,1(%rsp)
0000000000045BA7 jmp 0x0000000000045BB6
0000000000045BA9 movb $9,0x1C0(%rsp)
0000000000045BB1 jmp 0x00000000000455A1
0000000000045BB6 mov 1(%rsp),%al
0000000000045BBA test $1,%al
0000000000045BBC jne 0x0000000000045BDA
0000000000045BBE jmp 0x0000000000045BC0
0000000000045BC0 mov 0x28(%rsp),%rdx
0000000000045BC5 mov 0x20(%rsp),%rsi
0000000000045BCA lea 0x200(%rsp),%rdi
0000000000045BD2 callq *0x310AB0
0000000000045BD8 jmp 0x0000000000045BF4
0000000000045BDA movb $0,0x1C0(%rsp)
0000000000045BE2 jmp 0x00000000000455A1
0000000000045BE7 mov 0x58(%rsp),%rax
0000000000045BEC add $0x218,%rsp
0000000000045BF3 ret
0000000000045BF4 mov 0x50(%rsp),%rdi
0000000000045BF9 lea 0x3060B0,%rax
0000000000045C00 mov %rax,0x1D0(%rsp)
0000000000045C08 mov 0x200(%rsp),%rax
0000000000045C10 mov %rax,0x1D8(%rsp)
0000000000045C18 mov 0x208(%rsp),%rax
0000000000045C20 mov %rax,0x1E0(%rsp)
0000000000045C28 mov 0x210(%rsp),%rax
0000000000045C30 mov %rax,0x1E8(%rsp)
0000000000045C38 movb $1,0x1C8(%rsp)
0000000000045C40 add $8,%rdi
0000000000045C44 lea 0x1C8(%rsp),%rsi
0000000000045C4C mov $0x38,%edx
0000000000045C51 call 0x000000000002E4B8
0000000000045C56 mov 0x50(%rsp),%rax
0000000000045C5B movb $1,(%rax)
0000000000045C5E jmp 0x0000000000045BE7
0000000000045C60 mov 0x50(%rsp),%rdi
0000000000045C65 lea 0x3060B0,%rax
0000000000045C6C mov %rax,0x178(%rsp)
0000000000045C74 mov 0x1A8(%rsp),%rax
0000000000045C7C mov %rax,0x180(%rsp)
0000000000045C84 mov 0x1B0(%rsp),%rax
0000000000045C8C mov %rax,0x188(%rsp)
0000000000045C94 mov 0x1B8(%rsp),%rax
0000000000045C9C mov %rax,0x190(%rsp)
0000000000045CA4 movb $1,0x170(%rsp)
0000000000045CAC add $8,%rdi
0000000000045CB0 lea 0x170(%rsp),%rsi
0000000000045CB8 mov $0x38,%edx
0000000000045CBD call 0x000000000002E4B8
0000000000045CC2 mov 0x50(%rsp),%rax
0000000000045CC7 movb $1,(%rax)
0000000000045CCA jmp 0x0000000000045BE7
0000000000045CCF mov 0x50(%rsp),%rax
0000000000045CD4 mov 0x4F(%rsp),%cl
0000000000045CD8 mov 0x4E(%rsp),%dl
0000000000045CDC mov %dl,1(%rax)
0000000000045CDF mov %cl,2(%rax)
0000000000045CE2 movb $0,(%rax)
0000000000045CE5 jmp 0x0000000000045480

 Function call queue at function 453c0: [75a00, 45cf0, 88e80, 49f90, 463a0, 463e0, 463c0]

Analyzing function at 75a00
0000000000075A00 sub $0xB8,%rsp
0000000000075A07 mov %rdi,(%rsp)
0000000000075A0B mov %rdi,8(%rsp)
0000000000075A10 lea 0x10(%rsp),%rdi
0000000000075A15 mov $0x38,%edx
0000000000075A1A call 0x000000000002E4B8
0000000000075A1F lea 0x80(%rsp),%rdi
0000000000075A27 lea 0x10(%rsp),%rsi
0000000000075A2C mov $0x38,%edx
0000000000075A31 call 0x000000000002E4B8
0000000000075A36 lea 0x48(%rsp),%rdi
0000000000075A3B lea 0x80(%rsp),%rsi
0000000000075A43 call 0x0000000000089330
0000000000075A48 mov (%rsp),%rdi
0000000000075A4C add $8,%rdi
0000000000075A50 lea 0x48(%rsp),%rsi
0000000000075A55 mov $0x38,%edx
0000000000075A5A call 0x000000000002E4B8
0000000000075A5F mov (%rsp),%rcx
0000000000075A63 mov 8(%rsp),%rax
0000000000075A68 movb $1,(%rcx)
0000000000075A6B add $0xB8,%rsp
0000000000075A72 ret

 Function call queue at function 75a00: []

Analyzing function at 45cf0
0000000000045CF0 push %rax
0000000000045CF1 movb $1,7(%rsp)
0000000000045CF6 mov 7(%rsp),%al
0000000000045CFA and $1,%al
0000000000045CFC movzbl %al,%edi
0000000000045CFF call 0x00000000000463A0
0000000000045D04 mov %al,5(%rsp)
0000000000045D08 mov %dl,6(%rsp)
0000000000045D0C mov 6(%rsp),%dl
0000000000045D10 mov 5(%rsp),%al
0000000000045D14 pop %rcx
0000000000045D15 ret

 Function call queue at function 45cf0: []

Analyzing function at 88e80
0000000000088E80 sub $0x18,%rsp
0000000000088E84 callq *0x314A48
0000000000088E8A mov %rax,8(%rsp)
0000000000088E8F mov %rdx,0x10(%rsp)
0000000000088E94 mov 0x10(%rsp),%rdx
0000000000088E99 mov 8(%rsp),%rax
0000000000088E9E add $0x18,%rsp
0000000000088EA2 ret

 Function call queue at function 88e80: []

Analyzing function at 49f90
0000000000049F90 sub $0x58,%rsp
0000000000049F94 mov %rdx,8(%rsp)
0000000000049F99 mov %rcx,0x10(%rsp)
0000000000049F9E mov %rdi,0x48(%rsp)
0000000000049FA3 mov %rsi,0x50(%rsp)
0000000000049FA8 mov 0x48(%rsp),%rax
0000000000049FAD mov 0x50(%rsp),%rcx
0000000000049FB2 mov %rcx,0x20(%rsp)
0000000000049FB7 mov %rax,0x18(%rsp)
0000000000049FBC mov 0x10(%rsp),%rax
0000000000049FC1 mov 8(%rsp),%rcx
0000000000049FC6 mov %rcx,0x38(%rsp)
0000000000049FCB mov %rax,0x40(%rsp)
0000000000049FD0 mov 0x38(%rsp),%rax
0000000000049FD5 mov 0x40(%rsp),%rcx
0000000000049FDA mov %rcx,0x30(%rsp)
0000000000049FDF mov %rax,0x28(%rsp)
0000000000049FE4 lea 0x18(%rsp),%rdi
0000000000049FE9 lea 0x28(%rsp),%rsi
0000000000049FEE callq *0x315AA0
0000000000049FF4 mov %al,7(%rsp)
0000000000049FF8 mov 7(%rsp),%al
0000000000049FFC and $1,%al
0000000000049FFE movzbl %al,%eax
000000000004A001 add $0x58,%rsp
000000000004A005 ret

 Function call queue at function 49f90: []

Analyzing function at 463a0
00000000000463A0 push %rax
00000000000463A1 mov %dil,%al
00000000000463A4 and $1,%al
00000000000463A6 mov %al,1(%rsp)
00000000000463AA movb $1,(%rsp)
00000000000463AE mov (%rsp),%al
00000000000463B1 mov 1(%rsp),%dl
00000000000463B5 pop %rcx
00000000000463B6 ret

 Function call queue at function 463a0: []

Analyzing function at 463e0
00000000000463E0 push %rax
00000000000463E1 mov %dil,%al
00000000000463E4 and $1,%al
00000000000463E6 mov %al,1(%rsp)
00000000000463EA movb $0xB,(%rsp)
00000000000463EE mov (%rsp),%al
00000000000463F1 mov 1(%rsp),%dl
00000000000463F5 pop %rcx
00000000000463F6 ret

 Function call queue at function 463e0: []

Analyzing function at 463c0
00000000000463C0 push %rax
00000000000463C1 mov %dil,%al
00000000000463C4 and $1,%al
00000000000463C6 mov %al,1(%rsp)
00000000000463CA movb $2,(%rsp)
00000000000463CE mov (%rsp),%al
00000000000463D1 mov 1(%rsp),%dl
00000000000463D5 pop %rcx
00000000000463D6 ret

 Function call queue at function 463c0: []

Analyzing function at 77e30
0000000000077E30 sub $0xC8,%rsp
0000000000077E37 mov %rsi,8(%rsp)
0000000000077E3C mov %rdi,0x10(%rsp)
0000000000077E41 mov %rdi,0x18(%rsp)
0000000000077E46 movzbl (%rsi),%eax
0000000000077E49 test $1,%al
0000000000077E4B je 0x0000000000077E53
0000000000077E4D jmp 0x0000000000077E4F
0000000000077E4F jmp 0x0000000000077E6E
0000000000077E51 ud2
0000000000077E53 mov 0x10(%rsp),%rax
0000000000077E58 mov 8(%rsp),%rcx
0000000000077E5D mov 1(%rcx),%dl
0000000000077E60 mov 2(%rcx),%cl
0000000000077E63 mov %dl,1(%rax)
0000000000077E66 mov %cl,2(%rax)
0000000000077E69 movb $0,(%rax)
0000000000077E6C jmp 0x0000000000077ED4
0000000000077E6E mov 8(%rsp),%rsi
0000000000077E73 add $8,%rsi
0000000000077E77 lea 0x20(%rsp),%rdi
0000000000077E7C mov $0x38,%edx
0000000000077E81 call 0x000000000002E4B8
0000000000077E86 lea 0x90(%rsp),%rdi
0000000000077E8E lea 0x20(%rsp),%rsi
0000000000077E93 mov $0x38,%edx
0000000000077E98 call 0x000000000002E4B8
0000000000077E9D lea 0x58(%rsp),%rdi
0000000000077EA2 lea 0x90(%rsp),%rsi
0000000000077EAA mov $0x38,%edx
0000000000077EAF call 0x000000000002E4B8
0000000000077EB4 mov 0x10(%rsp),%rdi
0000000000077EB9 add $8,%rdi
0000000000077EBD lea 0x58(%rsp),%rsi
0000000000077EC2 mov $0x38,%edx
0000000000077EC7 call 0x000000000002E4B8
0000000000077ECC mov 0x10(%rsp),%rax
0000000000077ED1 movb $1,(%rax)
0000000000077ED4 mov 0x18(%rsp),%rax
0000000000077ED9 add $0xC8,%rsp
0000000000077EE0 ret

 Function call queue at function 77e30: []

Analyzing function at 79e70
0000000000079E70 sub $0xA8,%rsp
0000000000079E77 mov %rsi,0x10(%rsp)
0000000000079E7C mov %rdi,%rax
0000000000079E7F mov 0x10(%rsp),%rdi
0000000000079E84 mov %rax,0x18(%rsp)
0000000000079E89 mov %rax,0x20(%rsp)
0000000000079E8E lea 0x305F30,%rsi
0000000000079E95 call 0x0000000000031510
0000000000079E9A mov %rax,0x28(%rsp)
0000000000079E9F mov 0x28(%rsp),%rax
0000000000079EA4 cmp $0,%rax
0000000000079EA8 jne 0x0000000000079EB8
0000000000079EAA mov 0x18(%rsp),%rax
0000000000079EAF movb $2,1(%rax)
0000000000079EB3 movb $0,(%rax)
0000000000079EB6 jmp 0x0000000000079F24
0000000000079EB8 mov 0x28(%rsp),%rax
0000000000079EBD cmp $1,%rax
0000000000079EC1 jne 0x0000000000079ED1
0000000000079EC3 mov 0x18(%rsp),%rax
0000000000079EC8 movb $1,1(%rax)
0000000000079ECC movb $0,(%rax)
0000000000079ECF jmp 0x0000000000079F24
0000000000079ED1 mov 0x10(%rsp),%rdi
0000000000079ED6 lea 0x305DE0,%rsi
0000000000079EDD call 0x0000000000031510
0000000000079EE2 mov %rax,8(%rsp)
0000000000079EE7 mov 8(%rsp),%rax
0000000000079EEC cmp $0,%rax
0000000000079EF0 ja 0x0000000000079EFF
0000000000079EF2 mov 0x28(%rsp),%rax
0000000000079EF7 cmp $3,%rax
0000000000079EFB jae 0x0000000000079F38
0000000000079EFD jmp 0x0000000000079F31
0000000000079EFF mov 0x18(%rsp),%rdi
0000000000079F04 movb $7,0x30(%rsp)
0000000000079F09 add $8,%rdi
0000000000079F0D lea 0x30(%rsp),%rsi
0000000000079F12 mov $0x38,%edx
0000000000079F17 call 0x000000000002E4B8
0000000000079F1C mov 0x18(%rsp),%rax
0000000000079F21 movb $1,(%rax)
0000000000079F24 mov 0x20(%rsp),%rax
0000000000079F29 add $0xA8,%rsp
0000000000079F30 ret
0000000000079F31 movb $0,0x6F(%rsp)
0000000000079F36 jmp 0x0000000000079F50
0000000000079F38 mov 0x10(%rsp),%rdi
0000000000079F3D call 0x0000000000031580
0000000000079F42 mov %al,7(%rsp)
0000000000079F46 mov 7(%rsp),%al
0000000000079F4A and $1,%al
0000000000079F4C mov %al,0x6F(%rsp)
0000000000079F50 testb $1,0x6F(%rsp)
0000000000079F55 jne 0x0000000000079F65
0000000000079F57 mov 0x18(%rsp),%rax
0000000000079F5C movb $0,1(%rax)
0000000000079F60 movb $0,(%rax)
0000000000079F63 jmp 0x0000000000079F24
0000000000079F65 mov 0x18(%rsp),%rdi
0000000000079F6A lea 0x305F30,%rax
0000000000079F71 mov %rax,0x78(%rsp)
0000000000079F76 lea 0x305F30,%rax
0000000000079F7D mov %rax,0x80(%rsp)
0000000000079F85 movb $4,0x70(%rsp)
0000000000079F8A add $8,%rdi
0000000000079F8E lea 0x70(%rsp),%rsi
0000000000079F93 mov $0x38,%edx
0000000000079F98 call 0x000000000002E4B8
0000000000079F9D mov 0x18(%rsp),%rax
0000000000079FA2 movb $1,(%rax)
0000000000079FA5 jmp 0x0000000000079F24

 Function call queue at function 79e70: []

Analyzing function at 78ed0
0000000000078ED0 sub $0xC8,%rsp
0000000000078ED7 mov %rsi,8(%rsp)
0000000000078EDC mov %rdi,0x10(%rsp)
0000000000078EE1 mov %rdi,0x18(%rsp)
0000000000078EE6 movzbl (%rsi),%eax
0000000000078EE9 test $1,%al
0000000000078EEB je 0x0000000000078EF3
0000000000078EED jmp 0x0000000000078EEF
0000000000078EEF jmp 0x0000000000078F08
0000000000078EF1 ud2
0000000000078EF3 mov 0x10(%rsp),%rax
0000000000078EF8 mov 8(%rsp),%rcx
0000000000078EFD mov 1(%rcx),%cl
0000000000078F00 mov %cl,1(%rax)
0000000000078F03 movb $0,(%rax)
0000000000078F06 jmp 0x0000000000078F6E
0000000000078F08 mov 8(%rsp),%rsi
0000000000078F0D add $8,%rsi
0000000000078F11 lea 0x20(%rsp),%rdi
0000000000078F16 mov $0x38,%edx
0000000000078F1B call 0x000000000002E4B8
0000000000078F20 lea 0x90(%rsp),%rdi
0000000000078F28 lea 0x20(%rsp),%rsi
0000000000078F2D mov $0x38,%edx
0000000000078F32 call 0x000000000002E4B8
0000000000078F37 lea 0x58(%rsp),%rdi
0000000000078F3C lea 0x90(%rsp),%rsi
0000000000078F44 mov $0x38,%edx
0000000000078F49 call 0x000000000002E4B8
0000000000078F4E mov 0x10(%rsp),%rdi
0000000000078F53 add $8,%rdi
0000000000078F57 lea 0x58(%rsp),%rsi
0000000000078F5C mov $0x38,%edx
0000000000078F61 call 0x000000000002E4B8
0000000000078F66 mov 0x10(%rsp),%rax
0000000000078F6B movb $1,(%rax)
0000000000078F6E mov 0x18(%rsp),%rax
0000000000078F73 add $0xC8,%rsp
0000000000078F7A ret

 Function call queue at function 78ed0: []

Analyzing function at 45d20
0000000000045D20 sub $0x2C8,%rsp
0000000000045D27 mov %rdi,0x18(%rsp)
0000000000045D2C mov %rdi,0x20(%rsp)
0000000000045D31 movb $0,0x2B7(%rsp)
0000000000045D39 lea 0x78(%rsp),%rdi
0000000000045D3E lea 0x3060E0,%rdx
0000000000045D45 call 0x00000000000314E0
0000000000045D4A lea 0x38(%rsp),%rdi
0000000000045D4F lea 0x78(%rsp),%rsi
0000000000045D54 call 0x0000000000077940
0000000000045D59 mov 0x38(%rsp),%rax
0000000000045D5E test %rax,%rax
0000000000045D61 je 0x0000000000045D69
0000000000045D63 jmp 0x0000000000045D65
0000000000045D65 jmp 0x0000000000045D91
0000000000045D67 ud2
0000000000045D69 mov 0x40(%rsp),%rcx
0000000000045D6E mov 0x48(%rsp),%rax
0000000000045D73 mov %rcx,0x28(%rsp)
0000000000045D78 mov %rax,0x30(%rsp)
0000000000045D7D mov 0x28(%rsp),%rax
0000000000045D82 test %rax,%rax
0000000000045D85 setne %al
0000000000045D88 movzbl %al,%eax
0000000000045D8B je 0x0000000000045DE6
0000000000045D8D jmp 0x0000000000045D8F
0000000000045D8F jmp 0x0000000000045DF8
0000000000045D91 lea 0x38(%rsp),%rsi
0000000000045D96 add $8,%rsi
0000000000045D9A lea 0xB8(%rsp),%rdi
0000000000045DA2 mov $0x38,%edx
0000000000045DA7 call 0x000000000002E4B8
0000000000045DAC lea 0xF0(%rsp),%rdi
0000000000045DB4 lea 0xB8(%rsp),%rsi
0000000000045DBC mov $0x38,%edx
0000000000045DC1 call 0x000000000002E4B8
0000000000045DC6 mov 0x18(%rsp),%rdi
0000000000045DCB lea 0xF0(%rsp),%rsi
0000000000045DD3 lea 0x3026F8,%rdx
0000000000045DDA call 0x0000000000075E50
0000000000045DDF jmp 0x00000000000460B6
0000000000045DE4 ud2
0000000000045DE6 lea 0x128(%rsp),%rdi
0000000000045DEE call 0x0000000000044CE0
0000000000045DF3 jmp 0x00000000000460C3
0000000000045DF8 mov 0x28(%rsp),%rsi
0000000000045DFD mov 0x30(%rsp),%rdx
0000000000045E02 lea 0x1F8(%rsp),%rdi
0000000000045E0A call 0x0000000000088E50
0000000000045E0F lea 0x1AF980,%rax
0000000000045E16 lea 0x1F8(%rsp),%rdi
0000000000045E1E call *%rax
0000000000045E20 mov %rdx,8(%rsp)
0000000000045E25 mov %rax,0x10(%rsp)
0000000000045E2A jmp 0x0000000000045E58
0000000000045E2C lea 0x1C9610,%rax
0000000000045E33 lea 0x1F8(%rsp),%rdi
0000000000045E3B call *%rax
0000000000045E3D jmp 0x0000000000045EF7
0000000000045E42 mov %rax,%rcx
0000000000045E45 mov %edx,%eax
0000000000045E47 mov %rcx,0x2B8(%rsp)
0000000000045E4F mov %eax,0x2C0(%rsp)
0000000000045E56 jmp 0x0000000000045E2C
0000000000045E58 mov 8(%rsp),%rdx
0000000000045E5D mov 0x10(%rsp),%rsi
0000000000045E62 lea 0xC0000,%rax
0000000000045E69 lea 0x1B0(%rsp),%rdi
0000000000045E71 mov $0x7C,%ecx
0000000000045E76 call *%rax
0000000000045E78 jmp 0x0000000000045E7A
0000000000045E7A lea 0x180(%rsp),%rdi
0000000000045E82 lea 0x1B0(%rsp),%rsi
0000000000045E8A call 0x00000000000B3770
0000000000045E8F jmp 0x0000000000045E91
0000000000045E91 movb $1,0x2B7(%rsp)
0000000000045E99 mov 0x190(%rsp),%rax
0000000000045EA1 mov %rax,0x150(%rsp)
0000000000045EA9 movups 0x180(%rsp),%xmm0
0000000000045EB1 movaps %xmm0,0x140(%rsp)
0000000000045EB9 mov 0x1A8(%rsp),%rax
0000000000045EC1 mov %rax,0x170(%rsp)
0000000000045EC9 movups 0x198(%rsp),%xmm0
0000000000045ED1 movaps %xmm0,0x160(%rsp)
0000000000045ED9 lea 0x1C9610,%rax
0000000000045EE0 lea 0x1F8(%rsp),%rdi
0000000000045EE8 call *%rax
0000000000045EEA jmp 0x0000000000045F2E
0000000000045EEC lea 0x2FBE0,%rax
0000000000045EF3 call *%rax
0000000000045EF5 ud2
0000000000045EF7 mov 0x2B8(%rsp),%rdi
0000000000045EFF call 0x000000000002E3D0
0000000000045F04 ud2
0000000000045F06 lea 0x160(%rsp),%rdi
0000000000045F0E call 0x000000000009D670
0000000000045F13 jmp 0x000000000004604B
0000000000045F18 mov %rax,%rcx
0000000000045F1B mov %edx,%eax
0000000000045F1D mov %rcx,0x2B8(%rsp)
0000000000045F25 mov %eax,0x2C0(%rsp)
0000000000045F2C jmp 0x0000000000045F06
0000000000045F2E lea 0x218(%rsp),%rdi
0000000000045F36 lea 0x160(%rsp),%rsi
0000000000045F3E call 0x00000000000941C0
0000000000045F43 jmp 0x0000000000045F45
0000000000045F45 mov 0x220(%rsp),%rax
0000000000045F4D test %rax,%rax
0000000000045F50 setne %al
0000000000045F53 movzbl %al,%eax
0000000000045F56 je 0x0000000000045F5E
0000000000045F58 jmp 0x0000000000045F5A
0000000000045F5A jmp 0x0000000000045FCB
0000000000045F5C ud2
0000000000045F5E mov 0x18(%rsp),%rax
0000000000045F63 movb $0,0x2B7(%rsp)
0000000000045F6B mov 0x140(%rsp),%rcx
0000000000045F73 mov %rcx,0x298(%rsp)
0000000000045F7B mov 0x148(%rsp),%rcx
0000000000045F83 mov %rcx,0x2A0(%rsp)
0000000000045F8B mov 0x150(%rsp),%rcx
0000000000045F93 mov %rcx,0x2A8(%rsp)
0000000000045F9B mov 0x298(%rsp),%rcx
0000000000045FA3 mov %rcx,8(%rax)
0000000000045FA7 mov 0x2A0(%rsp),%rcx
0000000000045FAF mov %rcx,0x10(%rax)
0000000000045FB3 mov 0x2A8(%rsp),%rcx
0000000000045FBB mov %rcx,0x18(%rax)
0000000000045FBF movq $0,(%rax)
0000000000045FC6 jmp 0x000000000004605A
0000000000045FCB mov 0x228(%rsp),%rax
0000000000045FD3 mov %rax,0x240(%rsp)
0000000000045FDB movups 0x218(%rsp),%xmm0
0000000000045FE3 movaps %xmm0,0x230(%rsp)
0000000000045FEB mov 0x240(%rsp),%rax
0000000000045FF3 mov %rax,0x290(%rsp)
0000000000045FFB movaps 0x230(%rsp),%xmm0
0000000000046003 movaps %xmm0,0x280(%rsp)
000000000004600B lea 0x248(%rsp),%rdi
0000000000046013 lea 0x280(%rsp),%rsi
000000000004601B call 0x0000000000038F20
0000000000046020 jmp 0x0000000000046022
0000000000046022 mov 0x18(%rsp),%rdi
0000000000046027 add $8,%rdi
000000000004602B lea 0x248(%rsp),%rsi
0000000000046033 mov $0x38,%edx
0000000000046038 call 0x000000000002E4B8
000000000004603D mov 0x18(%rsp),%rax
0000000000046042 movq $1,(%rax)
0000000000046049 jmp 0x000000000004605A
000000000004604B testb $1,0x2B7(%rsp)
0000000000046053 jne 0x000000000004608B
0000000000046055 jmp 0x0000000000045EF7
000000000004605A lea 0x160(%rsp),%rdi
0000000000046062 call 0x000000000009D670
0000000000046067 jmp 0x000000000004607F
0000000000046069 mov %rax,%rcx
000000000004606C mov %edx,%eax
000000000004606E mov %rcx,0x2B8(%rsp)
0000000000046076 mov %eax,0x2C0(%rsp)
000000000004607D jmp 0x000000000004604B
000000000004607F testb $1,0x2B7(%rsp)
0000000000046087 jne 0x00000000000460A7
0000000000046089 jmp 0x000000000004609D
000000000004608B lea 0x140(%rsp),%rdi
0000000000046093 call 0x000000000009CC50
0000000000046098 jmp 0x0000000000045EF7
000000000004609D movb $0,0x2B7(%rsp)
00000000000460A5 jmp 0x00000000000460B6
00000000000460A7 lea 0x140(%rsp),%rdi
00000000000460AF call 0x000000000009CC50
00000000000460B4 jmp 0x000000000004609D
00000000000460B6 mov 0x20(%rsp),%rax
00000000000460BB add $0x2C8,%rsp
00000000000460C2 ret
00000000000460C3 mov 0x18(%rsp),%rax
00000000000460C8 mov 0x128(%rsp),%rcx
00000000000460D0 mov %rcx,8(%rax)
00000000000460D4 mov 0x130(%rsp),%rcx
00000000000460DC mov %rcx,0x10(%rax)
00000000000460E0 mov 0x138(%rsp),%rcx
00000000000460E8 mov %rcx,0x18(%rax)
00000000000460EC movq $0,(%rax)
00000000000460F3 jmp 0x0000000000045DDF

 Function call queue at function 45d20: [75e50, 44ce0, b3770, 9d670, 941c0, 38f20]

Analyzing function at 75e50
0000000000075E50 sub $0xB8,%rsp
0000000000075E57 mov %rdi,(%rsp)
0000000000075E5B mov %rdi,8(%rsp)
0000000000075E60 lea 0x10(%rsp),%rdi
0000000000075E65 mov $0x38,%edx
0000000000075E6A call 0x000000000002E4B8
0000000000075E6F lea 0x80(%rsp),%rdi
0000000000075E77 lea 0x10(%rsp),%rsi
0000000000075E7C mov $0x38,%edx
0000000000075E81 call 0x000000000002E4B8
0000000000075E86 lea 0x48(%rsp),%rdi
0000000000075E8B lea 0x80(%rsp),%rsi
0000000000075E93 call 0x0000000000089330
0000000000075E98 mov (%rsp),%rdi
0000000000075E9C add $8,%rdi
0000000000075EA0 lea 0x48(%rsp),%rsi
0000000000075EA5 mov $0x38,%edx
0000000000075EAA call 0x000000000002E4B8
0000000000075EAF mov (%rsp),%rcx
0000000000075EB3 mov 8(%rsp),%rax
0000000000075EB8 movq $1,(%rcx)
0000000000075EBF add $0xB8,%rsp
0000000000075EC6 ret

 Function call queue at function 75e50: []

Analyzing function at 44ce0
0000000000044CE0 sub $0x28,%rsp
0000000000044CE4 mov %rdi,(%rsp)
0000000000044CE8 mov %rdi,8(%rsp)
0000000000044CED lea 0x10(%rsp),%rdi
0000000000044CF2 callq *0x316108
0000000000044CF8 mov 8(%rsp),%rax
0000000000044CFD mov (%rsp),%rcx
0000000000044D01 mov 0x10(%rsp),%rdx
0000000000044D06 mov %rdx,(%rcx)
0000000000044D09 mov 0x18(%rsp),%rdx
0000000000044D0E mov %rdx,8(%rcx)
0000000000044D12 mov 0x20(%rsp),%rdx
0000000000044D17 mov %rdx,0x10(%rcx)
0000000000044D1B add $0x28,%rsp
0000000000044D1F ret

 Function call queue at function 44ce0: []

Analyzing function at b3770
00000000000B3770 sub $0x338,%rsp
00000000000B3777 mov %rdi,0x10(%rsp)
00000000000B377C mov %rdi,0x18(%rsp)
00000000000B3781 movb $0,0x327(%rsp)
00000000000B3789 lea 0x68(%rsp),%rdi
00000000000B378E mov $0x48,%edx
00000000000B3793 call 0x000000000002E4B8
00000000000B3798 lea 0x20(%rsp),%rdi
00000000000B379D lea 0x68(%rsp),%rsi
00000000000B37A2 callq *0x30FC68
00000000000B37A8 movb $1,0x327(%rsp)
00000000000B37B0 lea 0xE8350,%rax
00000000000B37B7 lea 0xC8(%rsp),%rdi
00000000000B37BF lea 0x20(%rsp),%rsi
00000000000B37C4 call *%rax
00000000000B37C6 jmp 0x00000000000B37F1
00000000000B37C8 testb $1,0x327(%rsp)
00000000000B37D0 jne 0x00000000000B3BD0
00000000000B37D6 jmp 0x00000000000B3BC1
00000000000B37DB mov %rax,%rcx
00000000000B37DE mov %edx,%eax
00000000000B37E0 mov %rcx,0x328(%rsp)
00000000000B37E8 mov %eax,0x330(%rsp)
00000000000B37EF jmp 0x00000000000B37C8
00000000000B37F1 cmpq $1,0xD0(%rsp)
00000000000B37FA jne 0x00000000000B3813
00000000000B37FC mov 0xD8(%rsp),%rsi
00000000000B3804 lea 0xB0(%rsp),%rdi
00000000000B380C call 0x0000000000091220
00000000000B3811 jmp 0x00000000000B3837
00000000000B3813 lea 0xD6F20,%rax
00000000000B381A lea 0xB0(%rsp),%rdi
00000000000B3822 call *%rax
00000000000B3824 jmp 0x00000000000B3826
00000000000B3826 jmp 0x00000000000B3828
00000000000B3828 lea 0xE0(%rsp),%rdi
00000000000B3830 call 0x0000000000091300
00000000000B3835 jmp 0x00000000000B3865
00000000000B3837 jmp 0x00000000000B3828
00000000000B3839 lea 0xDC460,%rax
00000000000B3840 lea 0xB0(%rsp),%rdi
00000000000B3848 call *%rax
00000000000B384A jmp 0x00000000000B37C8
00000000000B384F mov %rax,%rcx
00000000000B3852 mov %edx,%eax
00000000000B3854 mov %rcx,0x328(%rsp)
00000000000B385C mov %eax,0x330(%rsp)
00000000000B3863 jmp 0x00000000000B3839
00000000000B3865 movb $0,0x327(%rsp)
00000000000B386D mov 0x60(%rsp),%rax
00000000000B3872 mov %rax,0x180(%rsp)
00000000000B387A movups 0x20(%rsp),%xmm0
00000000000B387F movups 0x30(%rsp),%xmm1
00000000000B3884 movups 0x40(%rsp),%xmm2
00000000000B3889 movups 0x50(%rsp),%xmm3
00000000000B388E movaps %xmm3,0x170(%rsp)
00000000000B3896 movaps %xmm2,0x160(%rsp)
00000000000B389E movaps %xmm1,0x150(%rsp)
00000000000B38A6 movaps %xmm0,0x140(%rsp)
00000000000B38AE lea 0xEAB20,%rax
00000000000B38B5 lea 0xF8(%rsp),%rdi
00000000000B38BD lea 0x140(%rsp),%rsi
00000000000B38C5 call *%rax
00000000000B38C7 jmp 0x00000000000B38F1
00000000000B38C9 lea 0xE0(%rsp),%rdi
00000000000B38D1 call 0x000000000009D670
00000000000B38D6 jmp 0x00000000000B3839
00000000000B38DB mov %rax,%rcx
00000000000B38DE mov %edx,%eax
00000000000B38E0 mov %rcx,0x328(%rsp)
00000000000B38E8 mov %eax,0x330(%rsp)
00000000000B38EF jmp 0x00000000000B38C9
00000000000B38F1 lea 0x188(%rsp),%rdi
00000000000B38F9 lea 0xF8(%rsp),%rsi
00000000000B3901 mov $0x48,%edx
00000000000B3906 call 0x000000000002E4B8
00000000000B390B lea 0xC9870,%rax
00000000000B3912 lea 0x188(%rsp),%rdi
00000000000B391A call *%rax
00000000000B391C mov %rdx,(%rsp)
00000000000B3920 mov %rax,8(%rsp)
00000000000B3925 jmp 0x00000000000B393F
00000000000B3927 jmp 0x00000000000B38C9
00000000000B3929 mov %rax,%rcx
00000000000B392C mov %edx,%eax
00000000000B392E mov %rcx,0x328(%rsp)
00000000000B3936 mov %eax,0x330(%rsp)
00000000000B393D jmp 0x00000000000B3927
00000000000B393F mov (%rsp),%rax
00000000000B3943 mov 8(%rsp),%rcx
00000000000B3948 mov %rcx,0x1D0(%rsp)
00000000000B3950 mov %rax,0x1D8(%rsp)
00000000000B3958 mov 0x1D0(%rsp),%rax
00000000000B3960 test %rax,%rax
00000000000B3963 setne %al
00000000000B3966 movzbl %al,%eax
00000000000B3969 je 0x00000000000B3971
00000000000B396B jmp 0x00000000000B396D
00000000000B396D jmp 0x00000000000B3976
00000000000B396F ud2
00000000000B3971 jmp 0x00000000000B3AC5
00000000000B3976 mov 0x1D0(%rsp),%rsi
00000000000B397E mov 0x1D8(%rsp),%rdx
00000000000B3986 lea 0xCFCD0,%rax
00000000000B398D lea 0x1E0(%rsp),%rdi
00000000000B3995 call *%rax
00000000000B3997 jmp 0x00000000000B3999
00000000000B3999 mov 0x1E0(%rsp),%rax
00000000000B39A1 test %rax,%rax
00000000000B39A4 je 0x00000000000B39AF
00000000000B39A6 jmp 0x00000000000B39A8
00000000000B39A8 jmp 0x00000000000B3A4A
00000000000B39AD ud2
00000000000B39AF mov 0x218(%rsp),%rax
00000000000B39B7 mov %rax,0x250(%rsp)
00000000000B39BF movups 0x1E8(%rsp),%xmm0
00000000000B39C7 movups 0x1F8(%rsp),%xmm1
00000000000B39CF movups 0x208(%rsp),%xmm2
00000000000B39D7 movaps %xmm2,0x240(%rsp)
00000000000B39DF movaps %xmm1,0x230(%rsp)
00000000000B39E7 movaps %xmm0,0x220(%rsp)
00000000000B39EF mov 0x250(%rsp),%rax
00000000000B39F7 mov %rax,0x290(%rsp)
00000000000B39FF movaps 0x220(%rsp),%xmm0
00000000000B3A07 movaps 0x230(%rsp),%xmm1
00000000000B3A0F movaps 0x240(%rsp),%xmm2
00000000000B3A17 movaps %xmm2,0x280(%rsp)
00000000000B3A1F movaps %xmm1,0x270(%rsp)
00000000000B3A27 movaps %xmm0,0x260(%rsp)
00000000000B3A2F lea 0xD75A0,%rax
00000000000B3A36 lea 0xB0(%rsp),%rdi
00000000000B3A3E lea 0x260(%rsp),%rsi
00000000000B3A46 call *%rax
00000000000B3A48 jmp 0x00000000000B3AC3
00000000000B3A4A mov 0x1F8(%rsp),%rax
00000000000B3A52 mov %rax,0x2B0(%rsp)
00000000000B3A5A movups 0x1E8(%rsp),%xmm0
00000000000B3A62 movaps %xmm0,0x2A0(%rsp)
00000000000B3A6A mov 0x2B0(%rsp),%rax
00000000000B3A72 mov %rax,0x2D0(%rsp)
00000000000B3A7A movaps 0x2A0(%rsp),%xmm0
00000000000B3A82 movaps %xmm0,0x2C0(%rsp)
00000000000B3A8A lea 0xE0(%rsp),%rdi
00000000000B3A92 lea 0x2C0(%rsp),%rsi
00000000000B3A9A call 0x0000000000094840
00000000000B3A9F jmp 0x00000000000B3ABC
00000000000B3AA1 jmp 0x00000000000B3927
00000000000B3AA6 mov %rax,%rcx
00000000000B3AA9 mov %edx,%eax
00000000000B3AAB mov %rcx,0x328(%rsp)
00000000000B3AB3 mov %eax,0x330(%rsp)
00000000000B3ABA jmp 0x00000000000B3AA1
00000000000B3ABC jmp 0x00000000000B3ABE
00000000000B3ABE jmp 0x00000000000B390B
00000000000B3AC3 jmp 0x00000000000B3ABE
00000000000B3AC5 mov 0x18(%rsp),%rax
00000000000B3ACA mov 0x10(%rsp),%rcx
00000000000B3ACF mov 0xB0(%rsp),%rdx
00000000000B3AD7 mov %rdx,0x2F0(%rsp)
00000000000B3ADF mov 0xB8(%rsp),%rdx
00000000000B3AE7 mov %rdx,0x2F8(%rsp)
00000000000B3AEF mov 0xC0(%rsp),%rdx
00000000000B3AF7 mov %rdx,0x300(%rsp)
00000000000B3AFF mov 0x2F0(%rsp),%rdx
00000000000B3B07 mov %rdx,0x2D8(%rsp)
00000000000B3B0F mov 0x2F8(%rsp),%rdx
00000000000B3B17 mov %rdx,0x2E0(%rsp)
00000000000B3B1F mov 0x300(%rsp),%rdx
00000000000B3B27 mov %rdx,0x2E8(%rsp)
00000000000B3B2F mov 0xE0(%rsp),%rdx
00000000000B3B37 mov %rdx,0x308(%rsp)
00000000000B3B3F mov 0xE8(%rsp),%rdx
00000000000B3B47 mov %rdx,0x310(%rsp)
00000000000B3B4F mov 0xF0(%rsp),%rdx
00000000000B3B57 mov %rdx,0x318(%rsp)
00000000000B3B5F mov 0x2D8(%rsp),%rdx
00000000000B3B67 mov %rdx,(%rcx)
00000000000B3B6A mov 0x2E0(%rsp),%rdx
00000000000B3B72 mov %rdx,8(%rcx)
00000000000B3B76 mov 0x2E8(%rsp),%rdx
00000000000B3B7E mov %rdx,0x10(%rcx)
00000000000B3B82 mov 0x308(%rsp),%rdx
00000000000B3B8A mov %rdx,0x18(%rcx)
00000000000B3B8E mov 0x310(%rsp),%rdx
00000000000B3B96 mov %rdx,0x20(%rcx)
00000000000B3B9A mov 0x318(%rsp),%rdx
00000000000B3BA2 mov %rdx,0x28(%rcx)
00000000000B3BA6 movb $0,0x327(%rsp)
00000000000B3BAE add $0x338,%rsp
00000000000B3BB5 ret

 Function call queue at function b3770: [91220, 91300, 94840]

Analyzing function at 91220
0000000000091220 push %rax
0000000000091221 mov %rdi,%rax
0000000000091224 mov %rax,(%rsp)
0000000000091228 call 0x0000000000093A10
000000000009122D mov (%rsp),%rax
0000000000091231 pop %rcx
0000000000091232 ret

 Function call queue at function 91220: []

Analyzing function at 91300
0000000000091300 mov %rdi,%rax
0000000000091303 mov 0x253718,%rdx
000000000009130A mov 0x253720,%rcx
0000000000091311 mov %rdx,(%rdi)
0000000000091314 mov %rcx,8(%rdi)
0000000000091318 movq $0,0x10(%rdi)
0000000000091320 ret

 Function call queue at function 91300: []

Analyzing function at 94840
0000000000094840 sub $0x78,%rsp
0000000000094844 mov %rdi,0x10(%rsp)
0000000000094849 mov %rsi,0x18(%rsp)
000000000009484E movb $1,0x57(%rsp)
0000000000094853 mov 0x10(%rdi),%rax
0000000000094857 mov %rax,0x20(%rsp)
000000000009485C mov 8(%rdi),%rax
0000000000094860 mov %rax,0x70(%rsp)
0000000000094865 mov 0x70(%rsp),%rax
000000000009486A mov %rax,0x28(%rsp)
000000000009486F jmp 0x0000000000094891
0000000000094871 testb $1,0x57(%rsp)
0000000000094876 jne 0x0000000000094932
000000000009487C jmp 0x0000000000094926
0000000000094881 mov %rax,%rcx
0000000000094884 mov %edx,%eax
0000000000094886 mov %rcx,0x58(%rsp)
000000000009488B mov %eax,0x60(%rsp)
000000000009488F jmp 0x0000000000094871
0000000000094891 mov 0x20(%rsp),%rax
0000000000094896 mov 0x28(%rsp),%rcx
000000000009489B cmp %rcx,%rax
000000000009489E je 0x00000000000948B1
00000000000948A0 mov 0x10(%rsp),%rdi
00000000000948A5 call 0x0000000000091680
00000000000948AA mov %rax,8(%rsp)
00000000000948AF jmp 0x00000000000948C3
00000000000948B1 mov 0x10(%rsp),%rdi
00000000000948B6 mov 0x10(%rdi),%rsi
00000000000948BA call 0x0000000000080DF0
00000000000948BF jmp 0x00000000000948C1
00000000000948C1 jmp 0x00000000000948A0
00000000000948C3 mov 8(%rsp),%rax
00000000000948C8 mov 0x10(%rsp),%rcx
00000000000948CD imul $0x18,0x10(%rcx),%rcx
00000000000948D2 add %rcx,%rax
00000000000948D5 mov %rax,0x68(%rsp)
00000000000948DA mov 0x68(%rsp),%rax
00000000000948DF mov %rax,(%rsp)
00000000000948E3 jmp 0x00000000000948E5
00000000000948E5 mov (%rsp),%rdi
00000000000948E9 mov 0x18(%rsp),%rax
00000000000948EE movb $0,0x57(%rsp)
00000000000948F3 mov 0x10(%rax),%rcx
00000000000948F7 mov %rcx,0x40(%rsp)
00000000000948FC movups (%rax),%xmm0
00000000000948FF movaps %xmm0,0x30(%rsp)
0000000000094904 lea 0x30(%rsp),%rsi
0000000000094909 call 0x00000000000687E0
000000000009490E jmp 0x0000000000094910
0000000000094910 mov 0x10(%rsp),%rax
0000000000094915 mov 0x10(%rax),%rcx
0000000000094919 add $1,%rcx
000000000009491D mov %rcx,0x10(%rax)
0000000000094921 add $0x78,%rsp
0000000000094925 ret

 Function call queue at function 94840: [91680, 80df0, 687e0]

Analyzing function at 91680
0000000000091680 push %rax
0000000000091681 call 0x0000000000081770
0000000000091686 mov %rax,(%rsp)
000000000009168A mov (%rsp),%rdi
000000000009168E call 0x0000000000038DA0
0000000000091693 mov (%rsp),%rax
0000000000091697 pop %rcx
0000000000091698 ret

 Function call queue at function 91680: [38da0]

Analyzing function at 38da0
0000000000038DA0 sub $0x28,%rsp
0000000000038DA4 mov %rdi,0x10(%rsp)
0000000000038DA9 movq $0,0x20(%rsp)
0000000000038DB2 mov 0x20(%rsp),%rdi
0000000000038DB7 callq *0x30FE80
0000000000038DBD mov %rax,0x18(%rsp)
0000000000038DC2 mov 0x18(%rsp),%rsi
0000000000038DC7 mov 0x10(%rsp),%rdi
0000000000038DCC callq *0x312630
0000000000038DD2 mov %al,0xF(%rsp)
0000000000038DD6 mov 0xF(%rsp),%al
0000000000038DDA and $1,%al
0000000000038DDC movzbl %al,%eax
0000000000038DDF add $0x28,%rsp
0000000000038DE3 ret

 Function call queue at function 38da0: []

Analyzing function at 80df0
0000000000080DF0 sub $0x18,%rsp
0000000000080DF4 mov $1,%edx
0000000000080DF9 call 0x000000000007E350
0000000000080DFE mov %rax,8(%rsp)
0000000000080E03 mov %rdx,0x10(%rsp)
0000000000080E08 mov 0x10(%rsp),%rsi
0000000000080E0D mov 8(%rsp),%rdi
0000000000080E12 call 0x00000000000A06C0
0000000000080E17 add $0x18,%rsp
0000000000080E1B ret

 Function call queue at function 80df0: []

Analyzing function at 687e0
00000000000687E0 mov (%rsi),%rax
00000000000687E3 mov %rax,(%rdi)
00000000000687E6 mov 8(%rsi),%rax
00000000000687EA mov %rax,8(%rdi)
00000000000687EE mov 0x10(%rsi),%rax
00000000000687F2 mov %rax,0x10(%rdi)
00000000000687F6 ret

 Function call queue at function 687e0: []

Analyzing function at 9d670
000000000009D670 sub $0x18,%rsp
000000000009D674 mov %rdi,(%rsp)
000000000009D678 call 0x000000000009EC10
000000000009D67D jmp 0x000000000009D69A
000000000009D67F mov (%rsp),%rdi
000000000009D683 call 0x000000000009D9D0
000000000009D688 jmp 0x000000000009D6B0
000000000009D68A mov %rax,%rcx
000000000009D68D mov %edx,%eax
000000000009D68F mov %rcx,8(%rsp)
000000000009D694 mov %eax,0x10(%rsp)
000000000009D698 jmp 0x000000000009D67F
000000000009D69A mov (%rsp),%rdi
000000000009D69E call 0x000000000009D9D0
000000000009D6A3 jmp 0x000000000009D6BC
000000000009D6A5 lea 0x2FBE0,%rax
000000000009D6AC call *%rax
000000000009D6AE ud2
000000000009D6B0 mov 8(%rsp),%rdi
000000000009D6B5 call 0x000000000002E3D0
000000000009D6BA ud2
000000000009D6BC add $0x18,%rsp
000000000009D6C0 ret

 Function call queue at function 9d670: [9d9d0]

Analyzing function at 9d9d0
000000000009D9D0 push %rax
000000000009D9D1 call 0x000000000009F310
000000000009D9D6 pop %rax
000000000009D9D7 ret

 Function call queue at function 9d9d0: []

Analyzing function at 941c0
00000000000941C0 sub $0x58,%rsp
00000000000941C4 mov %rsi,0x20(%rsp)
00000000000941C9 mov %rdi,0x28(%rsp)
00000000000941CE mov %rdi,0x30(%rsp)
00000000000941D3 cmpq $0,0x10(%rsi)
00000000000941D8 jne 0x00000000000941E9
00000000000941DA mov 0x28(%rsp),%rax
00000000000941DF movq $0,8(%rax)
00000000000941E7 jmp 0x0000000000094261
00000000000941E9 mov 0x20(%rsp),%rdi
00000000000941EE mov 0x10(%rdi),%rax
00000000000941F2 sub $1,%rax
00000000000941F6 mov %rax,0x10(%rdi)
00000000000941FA call 0x0000000000095380
00000000000941FF mov %rax,0x18(%rsp)
0000000000094204 mov 0x20(%rsp),%rdi
0000000000094209 call 0x0000000000094120
000000000009420E mov %rax,0x10(%rsp)
0000000000094213 mov 0x18(%rsp),%rax
0000000000094218 mov 0x10(%rsp),%rcx
000000000009421D imul $0x18,%rcx
0000000000094221 add %rcx,%rax
0000000000094224 mov %rax,0x50(%rsp)
0000000000094229 mov 0x50(%rsp),%rax
000000000009422E mov %rax,8(%rsp)
0000000000094233 mov 8(%rsp),%rsi
0000000000094238 lea 0x38(%rsp),%rdi
000000000009423D call 0x0000000000068630
0000000000094242 mov 0x28(%rsp),%rax
0000000000094247 mov 0x38(%rsp),%rcx
000000000009424C mov %rcx,(%rax)
000000000009424F mov 0x40(%rsp),%rcx
0000000000094254 mov %rcx,8(%rax)
0000000000094258 mov 0x48(%rsp),%rcx
000000000009425D mov %rcx,0x10(%rax)
0000000000094261 mov 0x30(%rsp),%rax
0000000000094266 add $0x58,%rsp
000000000009426A ret

 Function call queue at function 941c0: [95380, 94120, 68630]

Analyzing function at 95380
0000000000095380 push %rax
0000000000095381 call 0x0000000000081770
0000000000095386 mov %rax,(%rsp)
000000000009538A mov (%rsp),%rdi
000000000009538E call 0x0000000000038DA0
0000000000095393 mov (%rsp),%rax
0000000000095397 pop %rcx
0000000000095398 ret

 Function call queue at function 95380: []

Analyzing function at 94120
0000000000094120 mov 0x10(%rdi),%rax
0000000000094124 ret

 Function call queue at function 94120: []

Analyzing function at 68630
0000000000068630 sub $0x68,%rsp
0000000000068634 mov %rsi,8(%rsp)
0000000000068639 mov %rdi,0x10(%rsp)
000000000006863E mov %rdi,0x18(%rsp)
0000000000068643 lea 0x20(%rsp),%rax
0000000000068648 mov %rax,(%rsp)
000000000006864C mov 0x10(%rsp),%rax
0000000000068651 mov (%rsp),%rcx
0000000000068655 mov 8(%rsp),%rdx
000000000006865A mov (%rdx),%rsi
000000000006865D mov %rsi,(%rcx)
0000000000068660 mov 8(%rdx),%rsi
0000000000068664 mov %rsi,8(%rcx)
0000000000068668 mov 0x10(%rdx),%rdx
000000000006866C mov %rdx,0x10(%rcx)
0000000000068670 mov 0x20(%rsp),%rcx
0000000000068675 mov %rcx,0x38(%rsp)
000000000006867A mov 0x28(%rsp),%rcx
000000000006867F mov %rcx,0x40(%rsp)
0000000000068684 mov 0x30(%rsp),%rcx
0000000000068689 mov %rcx,0x48(%rsp)
000000000006868E mov 0x38(%rsp),%rcx
0000000000068693 mov %rcx,0x50(%rsp)
0000000000068698 mov 0x40(%rsp),%rcx
000000000006869D mov %rcx,0x58(%rsp)
00000000000686A2 mov 0x48(%rsp),%rcx
00000000000686A7 mov %rcx,0x60(%rsp)
00000000000686AC mov 0x50(%rsp),%rcx
00000000000686B1 mov %rcx,(%rax)
00000000000686B4 mov 0x58(%rsp),%rcx
00000000000686B9 mov %rcx,8(%rax)
00000000000686BD mov 0x60(%rsp),%rcx
00000000000686C2 mov %rcx,0x10(%rax)
00000000000686C6 mov 0x18(%rsp),%rax
00000000000686CB add $0x68,%rsp
00000000000686CF ret

 Function call queue at function 68630: []

Analyzing function at 38f20
0000000000038F20 sub $0x28,%rsp
0000000000038F24 mov %rdi,%rax
0000000000038F27 mov %rax,8(%rsp)
0000000000038F2C mov (%rsi),%rax
0000000000038F2F mov %rax,0x10(%rsp)
0000000000038F34 mov 8(%rsi),%rax
0000000000038F38 mov %rax,0x18(%rsp)
0000000000038F3D mov 0x10(%rsi),%rax
0000000000038F41 mov %rax,0x20(%rsp)
0000000000038F46 lea 0x10(%rsp),%rsi
0000000000038F4B call 0x00000000000B8020
0000000000038F50 mov 8(%rsp),%rax
0000000000038F55 add $0x28,%rsp
0000000000038F59 ret

 Function call queue at function 38f20: [b8020]

Analyzing function at b8020
00000000000B8020 sub $0x28,%rsp
00000000000B8024 mov %rdi,(%rsp)
00000000000B8028 mov %rdi,8(%rsp)
00000000000B802D lea 0x10(%rsp),%rdi
00000000000B8032 call 0x0000000000038C10
00000000000B8037 mov (%rsp),%rdi
00000000000B803B lea 0x10(%rsp),%rsi
00000000000B8040 call 0x00000000000B8F10
00000000000B8045 mov 8(%rsp),%rax
00000000000B804A add $0x28,%rsp
00000000000B804E ret

 Function call queue at function b8020: [38c10, b8f10]

Analyzing function at 38c10
0000000000038C10 sub $0x78,%rsp
0000000000038C14 mov %rsi,0x10(%rsp)
0000000000038C19 mov %rdi,0x18(%rsp)
0000000000038C1E mov %rdi,%rax
0000000000038C21 mov %rax,0x20(%rsp)
0000000000038C26 call 0x0000000000064660
0000000000038C2B mov 0x18(%rsp),%rsi
0000000000038C30 lea 0x302198,%rdx
0000000000038C37 lea 0x24C6E0,%rax
0000000000038C3E lea 0x28(%rsp),%rdi
0000000000038C43 call *%rax
0000000000038C45 jmp 0x0000000000038C67
0000000000038C47 mov 0x18(%rsp),%rdi
0000000000038C4C lea 0xEFC00,%rax
0000000000038C53 call *%rax
0000000000038C55 jmp 0x0000000000038CBD
0000000000038C57 mov %rax,%rcx
0000000000038C5A mov %edx,%eax
0000000000038C5C mov %rcx,0x68(%rsp)
0000000000038C61 mov %eax,0x70(%rsp)
0000000000038C65 jmp 0x0000000000038C47
0000000000038C67 mov 0x10(%rsp),%rdi
0000000000038C6C lea 0xCFC20,%rax
0000000000038C73 lea 0x28(%rsp),%rsi
0000000000038C78 call *%rax
0000000000038C7A mov %al,0xF(%rsp)
0000000000038C7E jmp 0x0000000000038C80
0000000000038C80 mov 0xF(%rsp),%al
0000000000038C84 movzbl %al,%edi
0000000000038C87 and $1,%edi
0000000000038C8A lea 0x2532A4,%rsi
0000000000038C91 lea 0x3021C8,%rcx
0000000000038C98 lea 0xE8B20,%rax
0000000000038C9F mov $0x37,%edx
0000000000038CA4 call *%rax
0000000000038CA6 jmp 0x0000000000038CA8
0000000000038CA8 mov 0x20(%rsp),%rax
0000000000038CAD add $0x78,%rsp
0000000000038CB1 ret

 Function call queue at function 38c10: [64660]

Analyzing function at 64660
0000000000064660 sub $0x28,%rsp
0000000000064664 mov %rdi,(%rsp)
0000000000064668 mov %rdi,8(%rsp)
000000000006466D lea 0x10(%rsp),%rdi
0000000000064672 callq *0x315448
0000000000064678 mov 8(%rsp),%rax
000000000006467D mov (%rsp),%rcx
0000000000064681 mov 0x10(%rsp),%rdx
0000000000064686 mov %rdx,(%rcx)
0000000000064689 mov 0x18(%rsp),%rdx
000000000006468E mov %rdx,8(%rcx)
0000000000064692 mov 0x20(%rsp),%rdx
0000000000064697 mov %rdx,0x10(%rcx)
000000000006469B add $0x28,%rsp
000000000006469F ret

 Function call queue at function 64660: []

Analyzing function at b8f10
00000000000B8F10 mov %rdi,%rax
00000000000B8F13 mov (%rsi),%rcx
00000000000B8F16 mov %rcx,8(%rdi)
00000000000B8F1A mov 8(%rsi),%rcx
00000000000B8F1E mov %rcx,0x10(%rdi)
00000000000B8F22 mov 0x10(%rsi),%rcx
00000000000B8F26 mov %rcx,0x18(%rdi)
00000000000B8F2A movb $9,(%rdi)
00000000000B8F2D ret

 Function call queue at function b8f10: []

Analyzing function at 78980
0000000000078980 sub $0xF8,%rsp
0000000000078987 mov %rsi,8(%rsp)
000000000007898C mov %rdi,0x10(%rsp)
0000000000078991 mov %rdi,0x18(%rsp)
0000000000078996 mov (%rsi),%rax
0000000000078999 test %rax,%rax
000000000007899C je 0x00000000000789A4
000000000007899E jmp 0x00000000000789A0
00000000000789A0 jmp 0x0000000000078A0B
00000000000789A2 ud2
00000000000789A4 mov 0x10(%rsp),%rax
00000000000789A9 mov 8(%rsp),%rcx
00000000000789AE mov 8(%rcx),%rdx
00000000000789B2 mov %rdx,0x20(%rsp)
00000000000789B7 mov 0x10(%rcx),%rdx
00000000000789BB mov %rdx,0x28(%rsp)
00000000000789C0 mov 0x18(%rcx),%rcx
00000000000789C4 mov %rcx,0x30(%rsp)
00000000000789C9 mov 0x20(%rsp),%rcx
00000000000789CE mov %rcx,0x38(%rsp)
00000000000789D3 mov 0x28(%rsp),%rcx
00000000000789D8 mov %rcx,0x40(%rsp)
00000000000789DD mov 0x30(%rsp),%rcx
00000000000789E2 mov %rcx,0x48(%rsp)
00000000000789E7 mov 0x38(%rsp),%rcx
00000000000789EC mov %rcx,8(%rax)
00000000000789F0 mov 0x40(%rsp),%rcx
00000000000789F5 mov %rcx,0x10(%rax)
00000000000789F9 mov 0x48(%rsp),%rcx
00000000000789FE mov %rcx,0x18(%rax)
0000000000078A02 movq $0,(%rax)
0000000000078A09 jmp 0x0000000000078A7B
0000000000078A0B mov 8(%rsp),%rsi
0000000000078A10 add $8,%rsi
0000000000078A14 lea 0x50(%rsp),%rdi
0000000000078A19 mov $0x38,%edx
0000000000078A1E call 0x000000000002E4B8
0000000000078A23 lea 0xC0(%rsp),%rdi
0000000000078A2B lea 0x50(%rsp),%rsi
0000000000078A30 mov $0x38,%edx
0000000000078A35 call 0x000000000002E4B8
0000000000078A3A lea 0x88(%rsp),%rdi
0000000000078A42 lea 0xC0(%rsp),%rsi
0000000000078A4A mov $0x38,%edx
0000000000078A4F call 0x000000000002E4B8
0000000000078A54 mov 0x10(%rsp),%rdi
0000000000078A59 add $8,%rdi
0000000000078A5D lea 0x88(%rsp),%rsi
0000000000078A65 mov $0x38,%edx
0000000000078A6A call 0x000000000002E4B8
0000000000078A6F mov 0x10(%rsp),%rax
0000000000078A74 movq $1,(%rax)
0000000000078A7B mov 0x18(%rsp),%rax
0000000000078A80 add $0xF8,%rsp
0000000000078A87 ret

 Function call queue at function 78980: []

Analyzing function at 46100
0000000000046100 sub $0x108,%rsp
0000000000046107 mov %rdi,8(%rsp)
000000000004610C mov %rdi,0x10(%rsp)
0000000000046111 lea 0x58(%rsp),%rdi
0000000000046116 lea 0x306110,%rdx
000000000004611D call 0x00000000000314A0
0000000000046122 lea 0x18(%rsp),%rdi
0000000000046127 lea 0x58(%rsp),%rsi
000000000004612C call 0x0000000000077B40
0000000000046131 movzbl 0x18(%rsp),%eax
0000000000046136 test $1,%al
0000000000046138 je 0x0000000000046140
000000000004613A jmp 0x000000000004613C
000000000004613C jmp 0x0000000000046149
000000000004613E ud2
0000000000046140 testb $1,0x19(%rsp)
0000000000046145 jne 0x00000000000461B4
0000000000046147 jmp 0x00000000000461A6
0000000000046149 lea 0x18(%rsp),%rsi
000000000004614E add $8,%rsi
0000000000046152 lea 0x98(%rsp),%rdi
000000000004615A mov $0x38,%edx
000000000004615F call 0x000000000002E4B8
0000000000046164 lea 0xD0(%rsp),%rdi
000000000004616C lea 0x98(%rsp),%rsi
0000000000046174 mov $0x38,%edx
0000000000046179 call 0x000000000002E4B8
000000000004617E mov 8(%rsp),%rdi
0000000000046183 lea 0xD0(%rsp),%rsi
000000000004618B lea 0x302710,%rdx
0000000000046192 call 0x0000000000075CD0
0000000000046197 jmp 0x0000000000046199
0000000000046199 mov 0x10(%rsp),%rax
000000000004619E add $0x108,%rsp
00000000000461A5 ret
00000000000461A6 mov 8(%rsp),%rax
00000000000461AB movb $1,1(%rax)
00000000000461AF movb $0,(%rax)
00000000000461B2 jmp 0x0000000000046199
00000000000461B4 mov 8(%rsp),%rax
00000000000461B9 movb $0,1(%rax)
00000000000461BD movb $0,(%rax)
00000000000461C0 jmp 0x0000000000046199

 Function call queue at function 46100: [75cd0]

Analyzing function at 75cd0
0000000000075CD0 sub $0xB8,%rsp
0000000000075CD7 mov %rdi,(%rsp)
0000000000075CDB mov %rdi,8(%rsp)
0000000000075CE0 lea 0x10(%rsp),%rdi
0000000000075CE5 mov $0x38,%edx
0000000000075CEA call 0x000000000002E4B8
0000000000075CEF lea 0x80(%rsp),%rdi
0000000000075CF7 lea 0x10(%rsp),%rsi
0000000000075CFC mov $0x38,%edx
0000000000075D01 call 0x000000000002E4B8
0000000000075D06 lea 0x48(%rsp),%rdi
0000000000075D0B lea 0x80(%rsp),%rsi
0000000000075D13 call 0x0000000000089330
0000000000075D18 mov (%rsp),%rdi
0000000000075D1C add $8,%rdi
0000000000075D20 lea 0x48(%rsp),%rsi
0000000000075D25 mov $0x38,%edx
0000000000075D2A call 0x000000000002E4B8
0000000000075D2F mov (%rsp),%rcx
0000000000075D33 mov 8(%rsp),%rax
0000000000075D38 movb $1,(%rcx)
0000000000075D3B add $0xB8,%rsp
0000000000075D42 ret

 Function call queue at function 75cd0: []

Analyzing function at 9cc50
000000000009CC50 push %rax
000000000009CC51 callq *0x317A28
000000000009CC57 pop %rax
000000000009CC58 ret

 Function call queue at function 9cc50: []

Analyzing function at 78280
0000000000078280 sub $0xC8,%rsp
0000000000078287 mov %rsi,8(%rsp)
000000000007828C mov %rdi,0x10(%rsp)
0000000000078291 mov %rdi,0x18(%rsp)
0000000000078296 movzbl (%rsi),%eax
0000000000078299 test $1,%al
000000000007829B je 0x00000000000782A3
000000000007829D jmp 0x000000000007829F
000000000007829F jmp 0x00000000000782BB
00000000000782A1 ud2
00000000000782A3 mov 0x10(%rsp),%rax
00000000000782A8 mov 8(%rsp),%rcx
00000000000782AD mov 1(%rcx),%cl
00000000000782B0 and $1,%cl
00000000000782B3 mov %cl,1(%rax)
00000000000782B6 movb $0,(%rax)
00000000000782B9 jmp 0x0000000000078321
00000000000782BB mov 8(%rsp),%rsi
00000000000782C0 add $8,%rsi
00000000000782C4 lea 0x20(%rsp),%rdi
00000000000782C9 mov $0x38,%edx
00000000000782CE call 0x000000000002E4B8
00000000000782D3 lea 0x90(%rsp),%rdi
00000000000782DB lea 0x20(%rsp),%rsi
00000000000782E0 mov $0x38,%edx
00000000000782E5 call 0x000000000002E4B8
00000000000782EA lea 0x58(%rsp),%rdi
00000000000782EF lea 0x90(%rsp),%rsi
00000000000782F7 mov $0x38,%edx
00000000000782FC call 0x000000000002E4B8
0000000000078301 mov 0x10(%rsp),%rdi
0000000000078306 add $8,%rdi
000000000007830A lea 0x58(%rsp),%rsi
000000000007830F mov $0x38,%edx
0000000000078314 call 0x000000000002E4B8
0000000000078319 mov 0x10(%rsp),%rax
000000000007831E movb $1,(%rax)
0000000000078321 mov 0x18(%rsp),%rax
0000000000078326 add $0xC8,%rsp
000000000007832D ret

 Function call queue at function 78280: []

Analyzing function at 78f80
0000000000078F80 sub $0x108,%rsp
0000000000078F87 mov %rsi,8(%rsp)
0000000000078F8C mov %rdi,0x10(%rsp)
0000000000078F91 mov %rdi,0x18(%rsp)
0000000000078F96 mov (%rsi),%rax
0000000000078F99 test %rax,%rax
0000000000078F9C je 0x0000000000078FA7
0000000000078F9E jmp 0x0000000000078FA0
0000000000078FA0 jmp 0x000000000007902A
0000000000078FA5 ud2
0000000000078FA7 mov 0x10(%rsp),%rax
0000000000078FAC mov 8(%rsp),%rcx
0000000000078FB1 mov 8(%rcx),%rdx
0000000000078FB5 mov %rdx,0x20(%rsp)
0000000000078FBA mov 0x10(%rcx),%rdx
0000000000078FBE mov %rdx,0x28(%rsp)
0000000000078FC3 mov 0x18(%rcx),%rdx
0000000000078FC7 mov %rdx,0x30(%rsp)
0000000000078FCC mov 0x20(%rcx),%rcx
0000000000078FD0 mov %rcx,0x38(%rsp)
0000000000078FD5 mov 0x20(%rsp),%rcx
0000000000078FDA mov %rcx,0x40(%rsp)
0000000000078FDF mov 0x28(%rsp),%rcx
0000000000078FE4 mov %rcx,0x48(%rsp)
0000000000078FE9 mov 0x30(%rsp),%rcx
0000000000078FEE mov %rcx,0x50(%rsp)
0000000000078FF3 mov 0x38(%rsp),%rcx
0000000000078FF8 mov %rcx,0x58(%rsp)
0000000000078FFD mov 0x40(%rsp),%rcx
0000000000079002 mov %rcx,8(%rax)
0000000000079006 mov 0x48(%rsp),%rcx
000000000007900B mov %rcx,0x10(%rax)
000000000007900F mov 0x50(%rsp),%rcx
0000000000079014 mov %rcx,0x18(%rax)
0000000000079018 mov 0x58(%rsp),%rcx
000000000007901D mov %rcx,0x20(%rax)
0000000000079021 movq $0,(%rax)
0000000000079028 jmp 0x000000000007909A
000000000007902A mov 8(%rsp),%rsi
000000000007902F add $8,%rsi
0000000000079033 lea 0x60(%rsp),%rdi
0000000000079038 mov $0x38,%edx
000000000007903D call 0x000000000002E4B8
0000000000079042 lea 0xD0(%rsp),%rdi
000000000007904A lea 0x60(%rsp),%rsi
000000000007904F mov $0x38,%edx
0000000000079054 call 0x000000000002E4B8
0000000000079059 lea 0x98(%rsp),%rdi
0000000000079061 lea 0xD0(%rsp),%rsi
0000000000079069 mov $0x38,%edx
000000000007906E call 0x000000000002E4B8
0000000000079073 mov 0x10(%rsp),%rdi
0000000000079078 add $8,%rdi
000000000007907C lea 0x98(%rsp),%rsi
0000000000079084 mov $0x38,%edx
0000000000079089 call 0x000000000002E4B8
000000000007908E mov 0x10(%rsp),%rax
0000000000079093 movq $1,(%rax)
000000000007909A mov 0x18(%rsp),%rax
000000000007909F add $0x108,%rsp
00000000000790A6 ret

 Function call queue at function 78f80: []

Analyzing function at b25f0
00000000000B25F0 sub $0x2A8,%rsp
00000000000B25F7 mov %rdx,8(%rsp)
00000000000B25FC mov %rsi,0x10(%rsp)
00000000000B2601 mov %rdi,0x18(%rsp)
00000000000B2606 mov %rdi,0x20(%rsp)
00000000000B260B lea 0x70(%rsp),%rdi
00000000000B2610 call 0x00000000000B2800
00000000000B2615 lea 0x30(%rsp),%rdi
00000000000B261A lea 0x70(%rsp),%rsi
00000000000B261F call 0x0000000000079230
00000000000B2624 movzbl 0x30(%rsp),%eax
00000000000B2629 test $1,%al
00000000000B262B je 0x00000000000B2633
00000000000B262D jmp 0x00000000000B262F
00000000000B262F jmp 0x00000000000B264F
00000000000B2631 ud2
00000000000B2633 mov 0x10(%rsp),%rsi
00000000000B2638 mov 0x31(%rsp),%al
00000000000B263C mov %al,0x2F(%rsp)
00000000000B2640 lea 0x160(%rsp),%rdi
00000000000B2648 call 0x0000000000089EA0
00000000000B264D jmp 0x00000000000B26AC
00000000000B264F lea 0x30(%rsp),%rsi
00000000000B2654 add $8,%rsi
00000000000B2658 lea 0xB0(%rsp),%rdi
00000000000B2660 mov $0x38,%edx
00000000000B2665 call 0x000000000002E4B8
00000000000B266A lea 0xE8(%rsp),%rdi
00000000000B2672 lea 0xB0(%rsp),%rsi
00000000000B267A mov $0x38,%edx
00000000000B267F call 0x000000000002E4B8
00000000000B2684 mov 0x18(%rsp),%rdi
00000000000B2689 lea 0xE8(%rsp),%rsi
00000000000B2691 lea 0x306800,%rdx
00000000000B2698 call 0x0000000000076050
00000000000B269D jmp 0x00000000000B269F
00000000000B269F mov 0x20(%rsp),%rax
00000000000B26A4 add $0x2A8,%rsp
00000000000B26AB ret
00000000000B26AC lea 0x120(%rsp),%rdi
00000000000B26B4 lea 0x160(%rsp),%rsi
00000000000B26BC call 0x0000000000078D20
00000000000B26C1 movzbl 0x120(%rsp),%eax
00000000000B26C9 test $1,%al
00000000000B26CB je 0x00000000000B26D3
00000000000B26CD jmp 0x00000000000B26CF
00000000000B26CF jmp 0x00000000000B26F5
00000000000B26D1 ud2
00000000000B26D3 mov 0x121(%rsp),%al
00000000000B26DA mov %al,6(%rsp)
00000000000B26DE lea 0x2F(%rsp),%rdi
00000000000B26E3 lea 0x257C00,%rsi
00000000000B26EA call 0x000000000008B600
00000000000B26EF mov %al,7(%rsp)
00000000000B26F3 jmp 0x00000000000B274B
00000000000B26F5 lea 0x120(%rsp),%rsi
00000000000B26FD add $8,%rsi
00000000000B2701 lea 0x1A0(%rsp),%rdi
00000000000B2709 mov $0x38,%edx
00000000000B270E call 0x000000000002E4B8
00000000000B2713 lea 0x1D8(%rsp),%rdi
00000000000B271B lea 0x1A0(%rsp),%rsi
00000000000B2723 mov $0x38,%edx
00000000000B2728 call 0x000000000002E4B8
00000000000B272D mov 0x18(%rsp),%rdi
00000000000B2732 lea 0x1D8(%rsp),%rsi
00000000000B273A lea 0x306818,%rdx
00000000000B2741 call 0x0000000000076050
00000000000B2746 jmp 0x00000000000B269F
00000000000B274B mov 7(%rsp),%al
00000000000B274F test $1,%al
00000000000B2751 jne 0x00000000000B2769
00000000000B2753 jmp 0x00000000000B2755
00000000000B2755 mov 8(%rsp),%rsi
00000000000B275A lea 0x210(%rsp),%rdi
00000000000B2762 call 0x00000000000B2AA0
00000000000B2767 jmp 0x00000000000B2776
00000000000B2769 lea 0x210(%rsp),%rdi
00000000000B2771 call 0x000000000008B7F0
00000000000B2776 mov 0x2F(%rsp),%al
00000000000B277A mov %al,5(%rsp)
00000000000B277E lea 0x278(%rsp),%rdi
00000000000B2786 lea 0x210(%rsp),%rsi
00000000000B278E mov $0x30,%edx
00000000000B2793 call 0x000000000002E4B8
00000000000B2798 mov 5(%rsp),%cl
00000000000B279C mov 6(%rsp),%al
00000000000B27A0 mov %cl,0x270(%rsp)
00000000000B27A7 and $1,%al
00000000000B27A9 mov %al,0x271(%rsp)
00000000000B27B0 lea 0x240(%rsp),%rdi
00000000000B27B8 lea 0x278(%rsp),%rsi
00000000000B27C0 mov $0x30,%edx
00000000000B27C5 call 0x000000000002E4B8
00000000000B27CA mov 0x18(%rsp),%rdi
00000000000B27CF add $8,%rdi
00000000000B27D3 lea 0x240(%rsp),%rsi
00000000000B27DB mov $0x38,%edx
00000000000B27E0 call 0x000000000002E4B8
00000000000B27E5 mov 0x18(%rsp),%rax
00000000000B27EA movq $0,(%rax)
00000000000B27F1 jmp 0x00000000000B269F

 Function call queue at function b25f0: [b2800, 79230, 89ea0, 76050, 78d20, 8b600, b2aa0, 8b7f0]

Analyzing function at b2800
00000000000B2800 sub $0x1B8,%rsp
00000000000B2807 mov %rdx,0x10(%rsp)
00000000000B280C mov %rsi,%rax
00000000000B280F mov 0x10(%rsp),%rsi
00000000000B2814 mov %rax,0x18(%rsp)
00000000000B2819 mov %rdi,0x20(%rsp)
00000000000B281E mov %rdi,0x28(%rsp)
00000000000B2823 mov 0x303550,%rdx
00000000000B282A mov 0x303558,%rcx
00000000000B2831 lea 0x38(%rsp),%rdi
00000000000B2836 call 0x0000000000041970
00000000000B283B mov 0x38(%rsp),%rax
00000000000B2840 test %rax,%rax
00000000000B2843 setne %al
00000000000B2846 movzbl %al,%eax
00000000000B2849 je 0x00000000000B2851
00000000000B284B jmp 0x00000000000B284D
00000000000B284D jmp 0x00000000000B2858
00000000000B284F ud2
00000000000B2851 movb $1,0x37(%rsp)
00000000000B2856 jmp 0x00000000000B285D
00000000000B2858 movb $2,0x37(%rsp)
00000000000B285D lea 0x38(%rsp),%rdi
00000000000B2862 callq *0x3150B0
00000000000B2868 mov 0x18(%rsp),%rsi
00000000000B286D lea 0xB0(%rsp),%rdi
00000000000B2875 call 0x00000000000A5D90
00000000000B287A lea 0x70(%rsp),%rdi
00000000000B287F lea 0xB0(%rsp),%rsi
00000000000B2887 call 0x0000000000077940
00000000000B288C mov 0x70(%rsp),%rax
00000000000B2891 test %rax,%rax
00000000000B2894 je 0x00000000000B289C
00000000000B2896 jmp 0x00000000000B2898
00000000000B2898 jmp 0x00000000000B28C7
00000000000B289A ud2
00000000000B289C mov 0x78(%rsp),%rcx
00000000000B28A1 mov 0x80(%rsp),%rax
00000000000B28A9 mov %rcx,0x60(%rsp)
00000000000B28AE mov %rax,0x68(%rsp)
00000000000B28B3 mov 0x60(%rsp),%rax
00000000000B28B8 test %rax,%rax
00000000000B28BB setne %al
00000000000B28BE movzbl %al,%eax
00000000000B28C1 je 0x00000000000B2919
00000000000B28C3 jmp 0x00000000000B28C5
00000000000B28C5 jmp 0x00000000000B292A
00000000000B28C7 lea 0x70(%rsp),%rsi
00000000000B28CC add $8,%rsi
00000000000B28D0 lea 0xF0(%rsp),%rdi
00000000000B28D8 mov $0x38,%edx
00000000000B28DD call 0x000000000002E4B8
00000000000B28E2 lea 0x128(%rsp),%rdi
00000000000B28EA lea 0xF0(%rsp),%rsi
00000000000B28F2 mov $0x38,%edx
00000000000B28F7 call 0x000000000002E4B8
00000000000B28FC mov 0x20(%rsp),%rdi
00000000000B2901 lea 0x128(%rsp),%rsi
00000000000B2909 lea 0x306830,%rdx
00000000000B2910 call 0x0000000000076250
00000000000B2915 jmp 0x00000000000B2980
00000000000B2917 ud2
00000000000B2919 mov 0x20(%rsp),%rax
00000000000B291E mov 0x37(%rsp),%cl
00000000000B2922 mov %cl,1(%rax)
00000000000B2925 movb $0,(%rax)
00000000000B2928 jmp 0x00000000000B2915
00000000000B292A mov 0x60(%rsp),%rcx
00000000000B292F mov 0x68(%rsp),%rax
00000000000B2934 mov %rcx,0x50(%rsp)
00000000000B2939 mov %rax,0x58(%rsp)
00000000000B293E lea 0x50(%rsp),%rdi
00000000000B2943 lea 0x306848,%rsi
00000000000B294A call 0x0000000000032210
00000000000B294F mov %al,0xF(%rsp)
00000000000B2953 mov 0xF(%rsp),%al
00000000000B2957 test $1,%al
00000000000B2959 jne 0x00000000000B2974
00000000000B295B jmp 0x00000000000B295D
00000000000B295D lea 0x50(%rsp),%rdi
00000000000B2962 lea 0x306858,%rsi
00000000000B2969 call 0x0000000000032210
00000000000B296E mov %al,0xE(%rsp)
00000000000B2972 jmp 0x00000000000B298D
00000000000B2974 mov 0x20(%rsp),%rax
00000000000B2979 movb $0,1(%rax)
00000000000B297D movb $0,(%rax)
00000000000B2980 mov 0x28(%rsp),%rax
00000000000B2985 add $0x1B8,%rsp
00000000000B298C ret
00000000000B298D mov 0xE(%rsp),%al
00000000000B2991 test $1,%al
00000000000B2993 jne 0x00000000000B29AE
00000000000B2995 jmp 0x00000000000B2997
00000000000B2997 lea 0x50(%rsp),%rdi
00000000000B299C lea 0x306868,%rsi
00000000000B29A3 call 0x0000000000032210
00000000000B29A8 mov %al,0xD(%rsp)
00000000000B29AC jmp 0x00000000000B29C2
00000000000B29AE movb $1,0x167(%rsp)
00000000000B29B6 testb $1,0x167(%rsp)
00000000000B29BE jne 0x00000000000B29E8
00000000000B29C0 jmp 0x00000000000B29D1
00000000000B29C2 mov 0xD(%rsp),%al
00000000000B29C6 and $1,%al
00000000000B29C8 mov %al,0x167(%rsp)
00000000000B29CF jmp 0x00000000000B29B6
00000000000B29D1 lea 0x50(%rsp),%rdi
00000000000B29D6 lea 0x306878,%rsi
00000000000B29DD call 0x0000000000032210
00000000000B29E2 mov %al,0xC(%rsp)
00000000000B29E6 jmp 0x00000000000B29F6
00000000000B29E8 mov 0x20(%rsp),%rax
00000000000B29ED movb $1,1(%rax)
00000000000B29F1 movb $0,(%rax)
00000000000B29F4 jmp 0x00000000000B2980
00000000000B29F6 mov 0xC(%rsp),%al
00000000000B29FA test $1,%al
00000000000B29FC jne 0x00000000000B2A19
00000000000B29FE jmp 0x00000000000B2A00
00000000000B2A00 mov 0x50(%rsp),%rsi
00000000000B2A05 mov 0x58(%rsp),%rdx
00000000000B2A0A lea 0x1A0(%rsp),%rdi
00000000000B2A12 call 0x0000000000032560
00000000000B2A17 jmp 0x00000000000B2A2A
00000000000B2A19 mov 0x20(%rsp),%rax
00000000000B2A1E movb $2,1(%rax)
00000000000B2A22 movb $0,(%rax)
00000000000B2A25 jmp 0x00000000000B2980
00000000000B2A2A mov 0x20(%rsp),%rdi
00000000000B2A2F lea 0x305E70,%rax
00000000000B2A36 mov %rax,0x170(%rsp)
00000000000B2A3E mov 0x1A0(%rsp),%rax
00000000000B2A46 mov %rax,0x178(%rsp)
00000000000B2A4E mov 0x1A8(%rsp),%rax
00000000000B2A56 mov %rax,0x180(%rsp)
00000000000B2A5E mov 0x1B0(%rsp),%rax
00000000000B2A66 mov %rax,0x188(%rsp)
00000000000B2A6E movb $1,0x168(%rsp)
00000000000B2A76 add $8,%rdi
00000000000B2A7A lea 0x168(%rsp),%rsi
00000000000B2A82 mov $0x38,%edx
00000000000B2A87 call 0x000000000002E4B8
00000000000B2A8C mov 0x20(%rsp),%rax
00000000000B2A91 movb $1,(%rax)
00000000000B2A94 jmp 0x00000000000B2980

 Function call queue at function b2800: [a5d90, 76250]

Analyzing function at a5d90
00000000000A5D90 sub $0x1A8,%rsp
00000000000A5D97 mov %rsi,0xB8(%rsp)
00000000000A5D9F mov %rdi,%rax
00000000000A5DA2 mov 0xB8(%rsp),%rdi
00000000000A5DAA mov %rax,0xC0(%rsp)
00000000000A5DB2 mov %rax,0xC8(%rsp)
00000000000A5DBA call 0x0000000000031580
00000000000A5DBF mov %al,0xD7(%rsp)
00000000000A5DC6 jmp 0x00000000000A5DE3
00000000000A5DC8 jmp 0x00000000000A6170
00000000000A5DCD mov %rax,%rcx
00000000000A5DD0 mov %edx,%eax
00000000000A5DD2 mov %rcx,0x198(%rsp)
00000000000A5DDA mov %eax,0x1A0(%rsp)
00000000000A5DE1 jmp 0x00000000000A5DC8
00000000000A5DE3 mov 0xD7(%rsp),%al
00000000000A5DEA test $1,%al
00000000000A5DEC jne 0x00000000000A5E12
00000000000A5DEE jmp 0x00000000000A5DF0
00000000000A5DF0 mov 0xB8(%rsp),%rdi
00000000000A5DF8 call 0x00000000000963E0
00000000000A5DFD mov %rdx,0xA8(%rsp)
00000000000A5E05 mov %rax,0xB0(%rsp)
00000000000A5E0D jmp 0x00000000000A60B2
00000000000A5E12 mov 0xB8(%rsp),%rdi
00000000000A5E1A call 0x00000000000963E0
00000000000A5E1F mov %rdx,0x98(%rsp)
00000000000A5E27 mov %rax,0xA0(%rsp)
00000000000A5E2F jmp 0x00000000000A5E31
00000000000A5E31 mov 0x98(%rsp),%rsi
00000000000A5E39 mov 0xA0(%rsp),%rdi
00000000000A5E41 call 0x00000000000A2A50
00000000000A5E46 mov %rdx,0x88(%rsp)
00000000000A5E4E mov %rax,0x90(%rsp)
00000000000A5E56 jmp 0x00000000000A5E58
00000000000A5E58 mov 0x88(%rsp),%rdx
00000000000A5E60 mov 0x90(%rsp),%rsi
00000000000A5E68 lea 0xD8(%rsp),%rax
00000000000A5E70 mov %rax,0x110(%rsp)
00000000000A5E78 mov 0x110(%rsp),%rcx
00000000000A5E80 lea 0xF8(%rsp),%rdi
00000000000A5E88 call 0x00000000000518F0
00000000000A5E8D jmp 0x00000000000A5E8F
00000000000A5E8F lea 0xE0(%rsp),%rdi
00000000000A5E97 lea 0xF8(%rsp),%rsi
00000000000A5E9F call 0x000000000005AA90
00000000000A5EA4 jmp 0x00000000000A5EA6
00000000000A5EA6 lea 0xE0(%rsp),%rdi
00000000000A5EAE call 0x0000000000094110
00000000000A5EB3 mov %rax,0x80(%rsp)
00000000000A5EBB jmp 0x00000000000A5EE5
00000000000A5EBD lea 0xE0(%rsp),%rdi
00000000000A5EC5 call 0x000000000009BC70
00000000000A5ECA jmp 0x00000000000A5DC8
00000000000A5ECF mov %rax,%rcx
00000000000A5ED2 mov %edx,%eax
00000000000A5ED4 mov %rcx,0x198(%rsp)
00000000000A5EDC mov %eax,0x1A0(%rsp)
00000000000A5EE3 jmp 0x00000000000A5EBD
00000000000A5EE5 mov 0x80(%rsp),%rax
00000000000A5EED cmp $2,%rax
00000000000A5EF1 jb 0x00000000000A5F15
00000000000A5EF3 lea 0x3057E0,%rdx
00000000000A5EFA xor %eax,%eax
00000000000A5EFC mov %eax,%esi
00000000000A5EFE lea 0xE0(%rsp),%rdi
00000000000A5F06 call 0x0000000000096910
00000000000A5F0B mov %rax,0x78(%rsp)
00000000000A5F10 jmp 0x00000000000A5F9E
00000000000A5F15 lea 0xE0(%rsp),%rdi
00000000000A5F1D call 0x0000000000096260
00000000000A5F22 mov %rdx,0x68(%rsp)
00000000000A5F27 mov %rax,0x70(%rsp)
00000000000A5F2C jmp 0x00000000000A5F2E
00000000000A5F2E mov 0x68(%rsp),%rsi
00000000000A5F33 mov 0x70(%rsp),%rdi
00000000000A5F38 call 0x00000000000A2AB0
00000000000A5F3D mov %rax,0x60(%rsp)
00000000000A5F42 jmp 0x00000000000A5F44
00000000000A5F44 mov 0x60(%rsp),%rdi
00000000000A5F49 call 0x000000000006EC00
00000000000A5F4E mov %rax,0x58(%rsp)
00000000000A5F53 jmp 0x00000000000A5F55
00000000000A5F55 mov 0x58(%rsp),%rdi
00000000000A5F5A call 0x000000000006D3A0
00000000000A5F5F mov %rdx,0x48(%rsp)
00000000000A5F64 mov %rax,0x50(%rsp)
00000000000A5F69 jmp 0x00000000000A5F6B
00000000000A5F6B mov 0xC0(%rsp),%rax
00000000000A5F73 mov 0x48(%rsp),%rcx
00000000000A5F78 mov 0x50(%rsp),%rdx
00000000000A5F7D mov %rdx,8(%rax)
00000000000A5F81 mov %rcx,0x10(%rax)
00000000000A5F85 movq $0,(%rax)
00000000000A5F8C lea 0xE0(%rsp),%rdi
00000000000A5F94 call 0x000000000009BC70
00000000000A5F99 jmp 0x00000000000A60AD
00000000000A5F9E mov 0x78(%rsp),%rax
00000000000A5FA3 mov (%rax),%rax
00000000000A5FA6 mov 0x10(%rax),%rcx
00000000000A5FAA mov %rcx,0x160(%rsp)
00000000000A5FB2 movups (%rax),%xmm0
00000000000A5FB5 movaps %xmm0,0x150(%rsp)
00000000000A5FBD lea 0x3057F8,%rdx
00000000000A5FC4 lea 0xE0(%rsp),%rdi
00000000000A5FCC mov $1,%esi
00000000000A5FD1 call 0x0000000000096910
00000000000A5FD6 mov %rax,0x40(%rsp)
00000000000A5FDB jmp 0x00000000000A5FDD
00000000000A5FDD mov 0xC0(%rsp),%rdi
00000000000A5FE5 mov 0x40(%rsp),%rax
00000000000A5FEA mov (%rax),%rax
00000000000A5FED mov (%rax),%rcx
00000000000A5FF0 mov %rcx,0x168(%rsp)
00000000000A5FF8 mov 8(%rax),%rcx
00000000000A5FFC mov %rcx,0x170(%rsp)
00000000000A6004 mov 0x10(%rax),%rax
00000000000A6008 mov %rax,0x178(%rsp)
00000000000A6010 mov 0x150(%rsp),%rax
00000000000A6018 mov %rax,0x120(%rsp)
00000000000A6020 mov 0x158(%rsp),%rax
00000000000A6028 mov %rax,0x128(%rsp)
00000000000A6030 mov 0x160(%rsp),%rax
00000000000A6038 mov %rax,0x130(%rsp)
00000000000A6040 mov 0x168(%rsp),%rax
00000000000A6048 mov %rax,0x138(%rsp)
00000000000A6050 mov 0x170(%rsp),%rax
00000000000A6058 mov %rax,0x140(%rsp)
00000000000A6060 mov 0x178(%rsp),%rax
00000000000A6068 mov %rax,0x148(%rsp)
00000000000A6070 movb $3,0x118(%rsp)
00000000000A6078 add $8,%rdi
00000000000A607C lea 0x118(%rsp),%rsi
00000000000A6084 mov $0x38,%edx
00000000000A6089 call 0x000000000002E4B8
00000000000A608E mov 0xC0(%rsp),%rax
00000000000A6096 movq $1,(%rax)
00000000000A609D jmp 0x00000000000A5F8C
00000000000A60A2 lea 0x2FBE0,%rax
00000000000A60A9 call *%rax
00000000000A60AB ud2
00000000000A60AD jmp 0x00000000000A617F
00000000000A60B2 mov 0xA8(%rsp),%rsi
00000000000A60BA mov 0xB0(%rsp),%rdi
00000000000A60C2 call 0x00000000000A2A50
00000000000A60C7 mov %rdx,0x30(%rsp)
00000000000A60CC mov %rax,0x38(%rsp)
00000000000A60D1 jmp 0x00000000000A60D3
00000000000A60D3 mov 0x30(%rsp),%rsi
00000000000A60D8 mov 0x38(%rsp),%rdi
00000000000A60DD call 0x0000000000050FD0
00000000000A60E2 mov %rdx,0x20(%rsp)
00000000000A60E7 mov %rax,0x28(%rsp)
00000000000A60EC jmp 0x00000000000A60EE
00000000000A60EE mov 0x20(%rsp),%rax
00000000000A60F3 mov 0x28(%rsp),%rcx
00000000000A60F8 mov %rcx,0x180(%rsp)
00000000000A6100 mov %rax,0x188(%rsp)
00000000000A6108 lea 0xD8(%rsp),%rax
00000000000A6110 mov %rax,0x190(%rsp)
00000000000A6118 mov 0x190(%rsp),%rsi
00000000000A6120 lea 0x180(%rsp),%rdi
00000000000A6128 call 0x00000000000892A0
00000000000A612D mov %rax,0x18(%rsp)
00000000000A6132 jmp 0x00000000000A6134
00000000000A6134 mov 0x18(%rsp),%rdi
00000000000A6139 call 0x000000000006D7E0
00000000000A613E mov %rdx,8(%rsp)
00000000000A6143 mov %rax,0x10(%rsp)
00000000000A6148 jmp 0x00000000000A614A
00000000000A614A mov 0xC0(%rsp),%rax
00000000000A6152 mov 8(%rsp),%rcx
00000000000A6157 mov 0x10(%rsp),%rdx
00000000000A615C mov %rdx,8(%rax)
00000000000A6160 mov %rcx,0x10(%rax)
00000000000A6164 movq $0,(%rax)
00000000000A616B jmp 0x00000000000A60AD
00000000000A6170 mov 0x198(%rsp),%rdi
00000000000A6178 call 0x000000000002E3D0
00000000000A617D ud2
00000000000A617F mov 0xC8(%rsp),%rax
00000000000A6187 add $0x1A8,%rsp
00000000000A618E ret

 Function call queue at function a5d90: [518f0, 5aa90, 6d3a0, 892a0, 6d7e0]

Analyzing function at 518f0
00000000000518F0 push %rax
00000000000518F1 mov %rdi,%rax
00000000000518F4 mov %rax,(%rsp)
00000000000518F8 call 0x000000000005AD80
00000000000518FD mov (%rsp),%rax
0000000000051901 pop %rcx
0000000000051902 ret

 Function call queue at function 518f0: []

Analyzing function at 5aa90
000000000005AA90 sub $0x28,%rsp
000000000005AA94 mov %rdi,%rax
000000000005AA97 mov %rax,8(%rsp)
000000000005AA9C mov (%rsi),%rax
000000000005AA9F mov %rax,0x10(%rsp)
000000000005AAA4 mov 8(%rsi),%rax
000000000005AAA8 mov %rax,0x18(%rsp)
000000000005AAAD mov 0x10(%rsi),%rax
000000000005AAB1 mov %rax,0x20(%rsp)
000000000005AAB6 lea 0x10(%rsp),%rsi
000000000005AABB call 0x00000000000980C0
000000000005AAC0 mov 8(%rsp),%rax
000000000005AAC5 add $0x28,%rsp
000000000005AAC9 ret

 Function call queue at function 5aa90: [980c0]

Analyzing function at 980c0
00000000000980C0 sub $0x48,%rsp
00000000000980C4 mov %rdi,8(%rsp)
00000000000980C9 mov %rdi,0x10(%rsp)
00000000000980CE mov (%rsi),%rax
00000000000980D1 mov %rax,0x30(%rsp)
00000000000980D6 mov 8(%rsi),%rax
00000000000980DA mov %rax,0x38(%rsp)
00000000000980DF mov 0x10(%rsi),%rax
00000000000980E3 mov %rax,0x40(%rsp)
00000000000980E8 lea 0x18(%rsp),%rdi
00000000000980ED lea 0x30(%rsp),%rsi
00000000000980F2 call 0x000000000005AE20
00000000000980F7 mov 8(%rsp),%rdi
00000000000980FC lea 0x18(%rsp),%rsi
0000000000098101 call 0x00000000000991A0
0000000000098106 mov 0x10(%rsp),%rax
000000000009810B add $0x48,%rsp
000000000009810F ret

 Function call queue at function 980c0: [5ae20, 991a0]

Analyzing function at 5ae20
000000000005AE20 mov %rdi,%rax
000000000005AE23 mov (%rsi),%rcx
000000000005AE26 mov %rcx,(%rdi)
000000000005AE29 mov 8(%rsi),%rcx
000000000005AE2D mov %rcx,8(%rdi)
000000000005AE31 mov 0x10(%rsi),%rcx
000000000005AE35 mov %rcx,0x10(%rdi)
000000000005AE39 ret

 Function call queue at function 5ae20: []

Analyzing function at 991a0
00000000000991A0 sub $0x28,%rsp
00000000000991A4 mov %rdi,%rax
00000000000991A7 mov %rax,8(%rsp)
00000000000991AC mov (%rsi),%rax
00000000000991AF mov %rax,0x10(%rsp)
00000000000991B4 mov 8(%rsi),%rax
00000000000991B8 mov %rax,0x18(%rsp)
00000000000991BD mov 0x10(%rsi),%rax
00000000000991C1 mov %rax,0x20(%rsp)
00000000000991C6 lea 0x10(%rsp),%rsi
00000000000991CB call 0x000000000008FFC0
00000000000991D0 mov 8(%rsp),%rax
00000000000991D5 add $0x28,%rsp
00000000000991D9 ret

 Function call queue at function 991a0: [8ffc0]

Analyzing function at 8ffc0
000000000008FFC0 sub $0xC8,%rsp
000000000008FFC7 mov %rsi,0x20(%rsp)
000000000008FFCC mov %rdi,%rax
000000000008FFCF mov 0x20(%rsp),%rdi
000000000008FFD4 mov %rax,0x28(%rsp)
000000000008FFD9 mov %rax,0x30(%rsp)
000000000008FFDE movb $1,0xAF(%rsp)
000000000008FFE6 call 0x000000000005A600
000000000008FFEB mov %rax,0x38(%rsp)
000000000008FFF0 jmp 0x000000000009001B
000000000008FFF2 testb $1,0xAF(%rsp)
000000000008FFFA jne 0x0000000000090208
0000000000090000 jmp 0x00000000000901F9
0000000000090005 mov %rax,%rcx
0000000000090008 mov %edx,%eax
000000000009000A mov %rcx,0xB0(%rsp)
0000000000090012 mov %eax,0xB8(%rsp)
0000000000090019 jmp 0x000000000008FFF2
000000000009001B mov 0x38(%rsp),%rax
0000000000090020 mov %rax,0x58(%rsp)
0000000000090025 mov 0x58(%rsp),%rax
000000000009002A test %rax,%rax
000000000009002D setne %al
0000000000090030 movzbl %al,%eax
0000000000090033 je 0x000000000009003B
0000000000090035 jmp 0x0000000000090037
0000000000090037 jmp 0x000000000009004A
0000000000090039 ud2
000000000009003B mov 0x28(%rsp),%rdi
0000000000090040 call 0x0000000000091480
0000000000090045 jmp 0x00000000000901F7
000000000009004A mov 0x20(%rsp),%rsi
000000000009004F movb $1,0xAE(%rsp)
0000000000090057 mov 0x58(%rsp),%rax
000000000009005C mov %rax,0x18(%rsp)
0000000000090061 lea 0x60(%rsp),%rdi
0000000000090066 call 0x000000000005A850
000000000009006B jmp 0x0000000000090096
000000000009006D testb $1,0xAE(%rsp)
0000000000090075 jne 0x00000000000901A1
000000000009007B jmp 0x000000000008FFF2
0000000000090080 mov %rax,%rcx
0000000000090083 mov %edx,%eax
0000000000090085 mov %rcx,0xB0(%rsp)
000000000009008D mov %eax,0xB8(%rsp)
0000000000090094 jmp 0x000000000009006D
0000000000090096 mov 0x60(%rsp),%rax
000000000009009B inc %rax
000000000009009E mov $0xFFFFFFFFFFFFFFFF,%rcx
00000000000900A5 cmove %rcx,%rax
00000000000900A9 mov %rax,0xC0(%rsp)
00000000000900B1 mov 0xC0(%rsp),%rax
00000000000900B9 mov %rax,0x10(%rsp)
00000000000900BE mov 0x10(%rsp),%rsi
00000000000900C3 lea 0xEFD80,%rax
00000000000900CA mov $4,%edi
00000000000900CF call *%rax
00000000000900D1 mov %rax,8(%rsp)
00000000000900D6 jmp 0x00000000000900D8
00000000000900D8 mov 8(%rsp),%rsi
00000000000900DD lea 0x78(%rsp),%rdi
00000000000900E2 call 0x00000000000911C0
00000000000900E7 jmp 0x00000000000900E9
00000000000900E9 lea 0x78(%rsp),%rdi
00000000000900EE call 0x0000000000091580
00000000000900F3 mov %rax,(%rsp)
00000000000900F7 jmp 0x000000000009011E
00000000000900F9 lea 0x78(%rsp),%rdi
00000000000900FE call 0x000000000009BC70
0000000000090103 jmp 0x000000000009006D
0000000000090108 mov %rax,%rcx
000000000009010B mov %edx,%eax
000000000009010D mov %rcx,0xB0(%rsp)
0000000000090115 mov %eax,0xB8(%rsp)
000000000009011C jmp 0x00000000000900F9
000000000009011E mov 0x18(%rsp),%rsi
0000000000090123 mov (%rsp),%rdi
0000000000090127 movb $0,0xAE(%rsp)
000000000009012F call 0x0000000000068940
0000000000090134 jmp 0x0000000000090136
0000000000090136 lea 0x78(%rsp),%rdi
000000000009013B mov $1,%esi
0000000000090140 call 0x00000000000957C0
0000000000090145 jmp 0x0000000000090147
0000000000090147 mov 0x20(%rsp),%rax
000000000009014C mov 0x88(%rsp),%rcx
0000000000090154 mov %rcx,0x50(%rsp)
0000000000090159 movups 0x78(%rsp),%xmm0
000000000009015E movaps %xmm0,0x40(%rsp)
0000000000090163 movb $0,0xAF(%rsp)
000000000009016B mov 0x10(%rax),%rcx
000000000009016F mov %rcx,0xA0(%rsp)
0000000000090177 movups (%rax),%xmm0
000000000009017A movaps %xmm0,0x90(%rsp)
0000000000090182 lea 0x40(%rsp),%rdi
0000000000090187 lea 0x90(%rsp),%rsi
000000000009018F call 0x0000000000098BA0
0000000000090194 jmp 0x00000000000901CB
0000000000090196 lea 0x2FBE0,%rax
000000000009019D call *%rax
000000000009019F ud2
00000000000901A1 jmp 0x000000000008FFF2
00000000000901A6 lea 0x40(%rsp),%rdi
00000000000901AB call 0x000000000009BC70
00000000000901B0 jmp 0x000000000008FFF2
00000000000901B5 mov %rax,%rcx
00000000000901B8 mov %edx,%eax
00000000000901BA mov %rcx,0xB0(%rsp)
00000000000901C2 mov %eax,0xB8(%rsp)
00000000000901C9 jmp 0x00000000000901A6
00000000000901CB mov 0x28(%rsp),%rax
00000000000901D0 mov 0x40(%rsp),%rcx
00000000000901D5 mov %rcx,(%rax)
00000000000901D8 mov 0x48(%rsp),%rcx
00000000000901DD mov %rcx,8(%rax)
00000000000901E1 mov 0x50(%rsp),%rcx
00000000000901E6 mov %rcx,0x10(%rax)
00000000000901EA mov 0x30(%rsp),%rax
00000000000901EF add $0xC8,%rsp
00000000000901F6 ret
00000000000901F7 jmp 0x00000000000901EA

 Function call queue at function 8ffc0: [5a600, 5a850, 98ba0]

Analyzing function at 5a600
000000000005A600 push %rax
000000000005A601 mov %rdi,%rsi
000000000005A604 mov %rsi,%rdi
000000000005A607 add $0x10,%rsi
000000000005A60B call 0x0000000000053310
000000000005A610 mov %rax,(%rsp)
000000000005A614 mov (%rsp),%rax
000000000005A618 pop %rcx
000000000005A619 ret

 Function call queue at function 5a600: [53310]

Analyzing function at 53310
0000000000053310 sub $0x58,%rsp
0000000000053314 mov %rdi,0x18(%rsp)
0000000000053319 mov %rsi,0x20(%rsp)
000000000005331E mov 0x18(%rsp),%rdi
0000000000053323 call 0x0000000000053910
0000000000053328 mov %rax,0x10(%rsp)
000000000005332D jmp 0x0000000000053341
000000000005332F jmp 0x00000000000533A8
0000000000053331 mov %rax,%rcx
0000000000053334 mov %edx,%eax
0000000000053336 mov %rcx,0x48(%rsp)
000000000005333B mov %eax,0x50(%rsp)
000000000005333F jmp 0x000000000005332F
0000000000053341 mov 0x10(%rsp),%rax
0000000000053346 mov %rax,0x30(%rsp)
000000000005334B mov $1,%eax
0000000000053350 xor %ecx,%ecx
0000000000053352 cmpq $0,0x30(%rsp)
0000000000053358 cmove %rcx,%rax
000000000005335C cmp $1,%rax
0000000000053360 jne 0x000000000005338B
0000000000053362 mov 0x30(%rsp),%rax
0000000000053367 mov %rax,0x38(%rsp)
000000000005336C lea 0x38(%rsp),%rax
0000000000053371 mov %rax,0x40(%rsp)
0000000000053376 mov 0x40(%rsp),%rsi
000000000005337B lea 0x20(%rsp),%rdi
0000000000053380 call 0x00000000000A2740
0000000000053385 mov %al,0xF(%rsp)
0000000000053389 jmp 0x000000000005339E
000000000005338B movq $0,0x28(%rsp)
0000000000053394 mov 0x28(%rsp),%rax
0000000000053399 add $0x58,%rsp
000000000005339D ret
000000000005339E mov 0xF(%rsp),%al
00000000000533A2 test $1,%al
00000000000533A4 jne 0x00000000000533B9
00000000000533A6 jmp 0x00000000000533B4
00000000000533A8 mov 0x48(%rsp),%rdi
00000000000533AD call 0x000000000002E3D0
00000000000533B2 ud2
00000000000533B4 jmp 0x000000000005331E
00000000000533B9 mov 0x38(%rsp),%rax
00000000000533BE mov %rax,0x28(%rsp)
00000000000533C3 jmp 0x0000000000053394

 Function call queue at function 53310: [a2740]

Analyzing function at a2740
00000000000A2740 sub $0x18,%rsp
00000000000A2744 mov %rsi,0x10(%rsp)
00000000000A2749 mov (%rdi),%rdi
00000000000A274C mov 0x10(%rsp),%rsi
00000000000A2751 call 0x00000000000A6200
00000000000A2756 mov %al,0xF(%rsp)
00000000000A275A mov 0xF(%rsp),%al
00000000000A275E and $1,%al
00000000000A2760 movzbl %al,%eax
00000000000A2763 add $0x18,%rsp
00000000000A2767 ret

 Function call queue at function a2740: [a6200]

Analyzing function at a6200
00000000000A6200 sub $0x28,%rsp
00000000000A6204 mov %rdi,8(%rsp)
00000000000A6209 mov %rsi,0x10(%rsp)
00000000000A620E mov (%rsi),%rdi
00000000000A6211 add $0x18,%rdi
00000000000A6215 call 0x000000000006E670
00000000000A621A mov %al,0x1E(%rsp)
00000000000A621E mov 0x1E(%rsp),%al
00000000000A6222 test $1,%al
00000000000A6224 jne 0x00000000000A622F
00000000000A6226 jmp 0x00000000000A6228
00000000000A6228 movb $0,0x1F(%rsp)
00000000000A622D jmp 0x00000000000A625C
00000000000A622F mov 0x10(%rsp),%rax
00000000000A6234 mov 8(%rsp),%rcx
00000000000A6239 mov (%rcx),%rdi
00000000000A623C mov (%rax),%rax
00000000000A623F mov %rax,0x20(%rsp)
00000000000A6244 mov 0x20(%rsp),%rsi
00000000000A6249 call 0x0000000000069260
00000000000A624E mov %al,7(%rsp)
00000000000A6252 mov 7(%rsp),%al
00000000000A6256 and $1,%al
00000000000A6258 mov %al,0x1F(%rsp)
00000000000A625C mov 0x1F(%rsp),%al
00000000000A6260 and $1,%al
00000000000A6262 movzbl %al,%eax
00000000000A6265 add $0x28,%rsp
00000000000A6269 ret

 Function call queue at function a6200: [69260]

Analyzing function at 69260
0000000000069260 sub $0x28,%rsp
0000000000069264 mov %rsi,0x10(%rsp)
0000000000069269 mov %rdi,%rax
000000000006926C mov 0x10(%rsp),%rdi
0000000000069271 mov %rdi,0x18(%rsp)
0000000000069276 lea 0x305E70,%rsi
000000000006927D call 0x0000000000030FD0
0000000000069282 mov %al,0x26(%rsp)
0000000000069286 mov 0x26(%rsp),%al
000000000006928A test $1,%al
000000000006928C jne 0x00000000000692A7
000000000006928E jmp 0x0000000000069290
0000000000069290 mov 0x18(%rsp),%rdi
0000000000069295 lea 0x305EA0,%rsi
000000000006929C call 0x0000000000030FD0
00000000000692A1 mov %al,0xF(%rsp)
00000000000692A5 jmp 0x00000000000692BA
00000000000692A7 movb $1,0x27(%rsp)
00000000000692AC mov 0x27(%rsp),%al
00000000000692B0 and $1,%al
00000000000692B2 movzbl %al,%eax
00000000000692B5 add $0x28,%rsp
00000000000692B9 ret
00000000000692BA mov 0xF(%rsp),%al
00000000000692BE and $1,%al
00000000000692C0 mov %al,0x27(%rsp)
00000000000692C4 jmp 0x00000000000692AC

 Function call queue at function 69260: []

Analyzing function at 5a850
000000000005A850 sub $0x28,%rsp
000000000005A854 mov %rdi,(%rsp)
000000000005A858 mov %rdi,8(%rsp)
000000000005A85D lea 0x10(%rsp),%rdi
000000000005A862 call 0x00000000000548D0
000000000005A867 mov 8(%rsp),%rax
000000000005A86C mov (%rsp),%rcx
000000000005A870 mov 0x18(%rsp),%rsi
000000000005A875 mov 0x20(%rsp),%rdx
000000000005A87A movq $0,(%rcx)
000000000005A881 mov %rsi,8(%rcx)
000000000005A885 mov %rdx,0x10(%rcx)
000000000005A889 add $0x28,%rsp
000000000005A88D ret

 Function call queue at function 5a850: []

Analyzing function at 98ba0
0000000000098BA0 sub $0x18,%rsp
0000000000098BA4 mov (%rsi),%rax
0000000000098BA7 mov %rax,(%rsp)
0000000000098BAB mov 8(%rsi),%rax
0000000000098BAF mov %rax,8(%rsp)
0000000000098BB4 mov 0x10(%rsi),%rax
0000000000098BB8 mov %rax,0x10(%rsp)
0000000000098BBD mov %rsp,%rsi
0000000000098BC0 call 0x0000000000093100
0000000000098BC5 add $0x18,%rsp
0000000000098BC9 ret

 Function call queue at function 98ba0: [93100]

Analyzing function at 93100
0000000000093100 sub $0x98,%rsp
0000000000093107 mov %rdi,0x40(%rsp)
000000000009310C mov %rsi,0x48(%rsp)
0000000000093111 mov 0x48(%rsp),%rdi
0000000000093116 call 0x000000000005A600
000000000009311B mov %rax,0x38(%rsp)
0000000000093120 jmp 0x000000000009313A
0000000000093122 jmp 0x0000000000093281
0000000000093127 mov %rax,%rcx
000000000009312A mov %edx,%eax
000000000009312C mov %rcx,0x78(%rsp)
0000000000093131 mov %eax,0x80(%rsp)
0000000000093138 jmp 0x0000000000093122
000000000009313A mov 0x38(%rsp),%rax
000000000009313F mov %rax,0x50(%rsp)
0000000000093144 mov $1,%eax
0000000000093149 xor %ecx,%ecx
000000000009314B cmpq $0,0x50(%rsp)
0000000000093151 cmove %rcx,%rax
0000000000093155 cmp $1,%rax
0000000000093159 jne 0x000000000009317B
000000000009315B mov 0x40(%rsp),%rdi
0000000000093160 movb $1,0x77(%rsp)
0000000000093165 mov 0x50(%rsp),%rax
000000000009316A mov %rax,0x28(%rsp)
000000000009316F call 0x0000000000094110
0000000000093174 mov %rax,0x30(%rsp)
0000000000093179 jmp 0x00000000000931A7
000000000009317B jmp 0x000000000009317D
000000000009317D jmp 0x000000000009317F
000000000009317F add $0x98,%rsp
0000000000093186 ret
0000000000093187 testb $1,0x77(%rsp)
000000000009318C jne 0x000000000009327C
0000000000093192 jmp 0x0000000000093122
0000000000093194 mov %rax,%rcx
0000000000093197 mov %edx,%eax
0000000000093199 mov %rcx,0x78(%rsp)
000000000009319E mov %eax,0x80(%rsp)
00000000000931A5 jmp 0x0000000000093187
00000000000931A7 mov 0x40(%rsp),%rdi
00000000000931AC call 0x0000000000095860
00000000000931B1 mov %rax,0x20(%rsp)
00000000000931B6 jmp 0x00000000000931B8
00000000000931B8 mov 0x30(%rsp),%rax
00000000000931BD mov 0x20(%rsp),%rcx
00000000000931C2 cmp %rcx,%rax
00000000000931C5 je 0x00000000000931D8
00000000000931C7 mov 0x40(%rsp),%rdi
00000000000931CC call 0x0000000000091580
00000000000931D1 mov %rax,0x18(%rsp)
00000000000931D6 jmp 0x0000000000093224
00000000000931D8 mov 0x48(%rsp),%rsi
00000000000931DD lea 0x58(%rsp),%rdi
00000000000931E2 call 0x000000000005A850
00000000000931E7 jmp 0x00000000000931E9
00000000000931E9 mov 0x58(%rsp),%rax
00000000000931EE inc %rax
00000000000931F1 mov $0xFFFFFFFFFFFFFFFF,%rcx
00000000000931F8 cmove %rcx,%rax
00000000000931FC mov %rax,0x88(%rsp)
0000000000093204 mov 0x88(%rsp),%rax
000000000009320C mov %rax,0x10(%rsp)
0000000000093211 mov 0x10(%rsp),%rsi
0000000000093216 mov 0x40(%rsp),%rdi
000000000009321B call 0x0000000000095720
0000000000093220 jmp 0x0000000000093222
0000000000093222 jmp 0x00000000000931C7
0000000000093224 mov 0x18(%rsp),%rax
0000000000093229 mov 0x30(%rsp),%rcx
000000000009322E shl $3,%rcx
0000000000093232 add %rcx,%rax
0000000000093235 mov %rax,0x90(%rsp)
000000000009323D mov 0x90(%rsp),%rax
0000000000093245 mov %rax,8(%rsp)
000000000009324A jmp 0x000000000009324C
000000000009324C mov 0x28(%rsp),%rsi
0000000000093251 mov 8(%rsp),%rdi
0000000000093256 movb $0,0x77(%rsp)
000000000009325B call 0x0000000000068940
0000000000093260 jmp 0x0000000000093262
0000000000093262 mov 0x40(%rsp),%rdi
0000000000093267 mov 0x30(%rsp),%rsi
000000000009326C add $1,%rsi
0000000000093270 call 0x00000000000957C0
0000000000093275 jmp 0x0000000000093277
0000000000093277 jmp 0x0000000000093111

 Function call queue at function 93100: []

Analyzing function at 6d3a0
000000000006D3A0 sub $0x38,%rsp
000000000006D3A4 mov %rdi,0x10(%rsp)
000000000006D3A9 movb $1,0x37(%rsp)
000000000006D3AE mov 0x10(%rsp),%rax
000000000006D3B3 test %rax,%rax
000000000006D3B6 setne %al
000000000006D3B9 movzbl %al,%eax
000000000006D3BC je 0x000000000006D3C4
000000000006D3BE jmp 0x000000000006D3C0
000000000006D3C0 jmp 0x000000000006D3CF
000000000006D3C2 ud2
000000000006D3C4 movq $0,0x18(%rsp)
000000000006D3CD jmp 0x000000000006D404
000000000006D3CF mov 0x10(%rsp),%rax
000000000006D3D4 movb $0,0x37(%rsp)
000000000006D3D9 mov %rax,0x28(%rsp)
000000000006D3DE mov 0x28(%rsp),%rdi
000000000006D3E3 call 0x00000000000A62B0
000000000006D3E8 mov %rax,(%rsp)
000000000006D3EC mov %rdx,8(%rsp)
000000000006D3F1 mov 8(%rsp),%rax
000000000006D3F6 mov (%rsp),%rcx
000000000006D3FA mov %rcx,0x18(%rsp)
000000000006D3FF mov %rax,0x20(%rsp)
000000000006D404 testb $1,0x37(%rsp)
000000000006D409 jne 0x000000000006D41A
000000000006D40B mov 0x18(%rsp),%rax
000000000006D410 mov 0x20(%rsp),%rdx
000000000006D415 add $0x38,%rsp
000000000006D419 ret
000000000006D41A jmp 0x000000000006D40B

 Function call queue at function 6d3a0: [a62b0]

Analyzing function at a62b0
00000000000A62B0 sub $0x18,%rsp
00000000000A62B4 mov %rdi,%rax
00000000000A62B7 mov 0x18(%rax),%rdi
00000000000A62BB mov 0x20(%rax),%rsi
00000000000A62BF lea 0x305810,%rdx
00000000000A62C6 callq *0x310A18
00000000000A62CC mov %rax,8(%rsp)
00000000000A62D1 mov %rdx,0x10(%rsp)
00000000000A62D6 mov 0x10(%rsp),%rdx
00000000000A62DB mov 8(%rsp),%rax
00000000000A62E0 add $0x18,%rsp
00000000000A62E4 ret

 Function call queue at function a62b0: []

Analyzing function at 892a0
00000000000892A0 push %rax
00000000000892A1 call 0x0000000000050500
00000000000892A6 mov %rax,(%rsp)
00000000000892AA mov (%rsp),%rax
00000000000892AE pop %rcx
00000000000892AF ret

 Function call queue at function 892a0: []

Analyzing function at 6d7e0
000000000006D7E0 sub $0x38,%rsp
000000000006D7E4 mov %rdi,0x10(%rsp)
000000000006D7E9 movb $1,0x37(%rsp)
000000000006D7EE mov 0x10(%rsp),%rax
000000000006D7F3 test %rax,%rax
000000000006D7F6 setne %al
000000000006D7F9 movzbl %al,%eax
000000000006D7FC je 0x000000000006D804
000000000006D7FE jmp 0x000000000006D800
000000000006D800 jmp 0x000000000006D80F
000000000006D802 ud2
000000000006D804 movq $0,0x18(%rsp)
000000000006D80D jmp 0x000000000006D844
000000000006D80F mov 0x10(%rsp),%rax
000000000006D814 movb $0,0x37(%rsp)
000000000006D819 mov %rax,0x28(%rsp)
000000000006D81E mov 0x28(%rsp),%rdi
000000000006D823 call 0x00000000000A6410
000000000006D828 mov %rax,(%rsp)
000000000006D82C mov %rdx,8(%rsp)
000000000006D831 mov 8(%rsp),%rax
000000000006D836 mov (%rsp),%rcx
000000000006D83A mov %rcx,0x18(%rsp)
000000000006D83F mov %rax,0x20(%rsp)
000000000006D844 testb $1,0x37(%rsp)
000000000006D849 jne 0x000000000006D85A
000000000006D84B mov 0x18(%rsp),%rax
000000000006D850 mov 0x20(%rsp),%rdx
000000000006D855 add $0x38,%rsp
000000000006D859 ret
000000000006D85A jmp 0x000000000006D84B

 Function call queue at function 6d7e0: [a6410]

Analyzing function at a6410
00000000000A6410 sub $0x18,%rsp
00000000000A6414 mov %rdi,%rax
00000000000A6417 mov 0x18(%rax),%rdi
00000000000A641B mov 0x20(%rax),%rsi
00000000000A641F lea 0x305828,%rdx
00000000000A6426 callq *0x310A18
00000000000A642C mov %rax,8(%rsp)
00000000000A6431 mov %rdx,0x10(%rsp)
00000000000A6436 mov 0x10(%rsp),%rdx
00000000000A643B mov 8(%rsp),%rax
00000000000A6440 add $0x18,%rsp
00000000000A6444 ret

 Function call queue at function a6410: []

Analyzing function at 76250
0000000000076250 sub $0xB8,%rsp
0000000000076257 mov %rdi,(%rsp)
000000000007625B mov %rdi,8(%rsp)
0000000000076260 lea 0x10(%rsp),%rdi
0000000000076265 mov $0x38,%edx
000000000007626A call 0x000000000002E4B8
000000000007626F lea 0x80(%rsp),%rdi
0000000000076277 lea 0x10(%rsp),%rsi
000000000007627C mov $0x38,%edx
0000000000076281 call 0x000000000002E4B8
0000000000076286 lea 0x48(%rsp),%rdi
000000000007628B lea 0x80(%rsp),%rsi
0000000000076293 call 0x0000000000089330
0000000000076298 mov (%rsp),%rdi
000000000007629C add $8,%rdi
00000000000762A0 lea 0x48(%rsp),%rsi
00000000000762A5 mov $0x38,%edx
00000000000762AA call 0x000000000002E4B8
00000000000762AF mov (%rsp),%rcx
00000000000762B3 mov 8(%rsp),%rax
00000000000762B8 movb $1,(%rcx)
00000000000762BB add $0xB8,%rsp
00000000000762C2 ret

 Function call queue at function 76250: []

Analyzing function at 79230
0000000000079230 sub $0xC8,%rsp
0000000000079237 mov %rsi,8(%rsp)
000000000007923C mov %rdi,0x10(%rsp)
0000000000079241 mov %rdi,0x18(%rsp)
0000000000079246 movzbl (%rsi),%eax
0000000000079249 test $1,%al
000000000007924B je 0x0000000000079253
000000000007924D jmp 0x000000000007924F
000000000007924F jmp 0x0000000000079268
0000000000079251 ud2
0000000000079253 mov 0x10(%rsp),%rax
0000000000079258 mov 8(%rsp),%rcx
000000000007925D mov 1(%rcx),%cl
0000000000079260 mov %cl,1(%rax)
0000000000079263 movb $0,(%rax)
0000000000079266 jmp 0x00000000000792CE
0000000000079268 mov 8(%rsp),%rsi
000000000007926D add $8,%rsi
0000000000079271 lea 0x20(%rsp),%rdi
0000000000079276 mov $0x38,%edx
000000000007927B call 0x000000000002E4B8
0000000000079280 lea 0x90(%rsp),%rdi
0000000000079288 lea 0x20(%rsp),%rsi
000000000007928D mov $0x38,%edx
0000000000079292 call 0x000000000002E4B8
0000000000079297 lea 0x58(%rsp),%rdi
000000000007929C lea 0x90(%rsp),%rsi
00000000000792A4 mov $0x38,%edx
00000000000792A9 call 0x000000000002E4B8
00000000000792AE mov 0x10(%rsp),%rdi
00000000000792B3 add $8,%rdi
00000000000792B7 lea 0x58(%rsp),%rsi
00000000000792BC mov $0x38,%edx
00000000000792C1 call 0x000000000002E4B8
00000000000792C6 mov 0x10(%rsp),%rax
00000000000792CB movb $1,(%rax)
00000000000792CE mov 0x18(%rsp),%rax
00000000000792D3 add $0xC8,%rsp
00000000000792DA ret

 Function call queue at function 79230: []

Analyzing function at 89ea0
0000000000089EA0 sub $0x118,%rsp
0000000000089EA7 mov %rdi,0x10(%rsp)
0000000000089EAC mov %rdi,0x18(%rsp)
0000000000089EB1 lea 0x68(%rsp),%rdi
0000000000089EB6 call 0x00000000000A4B30
0000000000089EBB lea 0x28(%rsp),%rdi
0000000000089EC0 lea 0x68(%rsp),%rsi
0000000000089EC5 call 0x00000000000788C0
0000000000089ECA mov 0x28(%rsp),%rax
0000000000089ECF test %rax,%rax
0000000000089ED2 je 0x0000000000089EDA
0000000000089ED4 jmp 0x0000000000089ED6
0000000000089ED6 jmp 0x0000000000089EF4
0000000000089ED8 ud2
0000000000089EDA mov 0x30(%rsp),%rax
0000000000089EDF mov %rax,0x20(%rsp)
0000000000089EE4 lea 0x20(%rsp),%rdi
0000000000089EE9 call 0x000000000006E6D0
0000000000089EEE mov %al,0xF(%rsp)
0000000000089EF2 jmp 0x0000000000089F51
0000000000089EF4 lea 0x28(%rsp),%rsi
0000000000089EF9 add $8,%rsi
0000000000089EFD lea 0xA8(%rsp),%rdi
0000000000089F05 mov $0x38,%edx
0000000000089F0A call 0x000000000002E4B8
0000000000089F0F lea 0xE0(%rsp),%rdi
0000000000089F17 lea 0xA8(%rsp),%rsi
0000000000089F1F mov $0x38,%edx
0000000000089F24 call 0x000000000002E4B8
0000000000089F29 mov 0x10(%rsp),%rdi
0000000000089F2E lea 0xE0(%rsp),%rsi
0000000000089F36 lea 0x304D78,%rdx
0000000000089F3D call 0x00000000000760D0
0000000000089F42 jmp 0x0000000000089F44
0000000000089F44 mov 0x18(%rsp),%rax
0000000000089F49 add $0x118,%rsp
0000000000089F50 ret
0000000000089F51 mov 0xF(%rsp),%al
0000000000089F55 test $1,%al
0000000000089F57 jne 0x0000000000089F69
0000000000089F59 jmp 0x0000000000089F5B
0000000000089F5B mov 0x10(%rsp),%rax
0000000000089F60 movb $0,1(%rax)
0000000000089F64 movb $0,(%rax)
0000000000089F67 jmp 0x0000000000089F44
0000000000089F69 mov 0x10(%rsp),%rax
0000000000089F6E movb $1,1(%rax)
0000000000089F72 movb $0,(%rax)
0000000000089F75 jmp 0x0000000000089F44

 Function call queue at function 89ea0: [a4b30, 760d0]

Analyzing function at a4b30
00000000000A4B30 sub $0x148,%rsp
00000000000A4B37 mov %rsi,0x68(%rsp)
00000000000A4B3C mov %rdi,%rax
00000000000A4B3F mov 0x68(%rsp),%rdi
00000000000A4B44 mov %rax,0x70(%rsp)
00000000000A4B49 mov %rax,0x78(%rsp)
00000000000A4B4E movb $0,0x137(%rsp)
00000000000A4B56 movb $1,0x137(%rsp)
00000000000A4B5E call 0x0000000000031580
00000000000A4B63 mov %al,0x87(%rsp)
00000000000A4B6A jmp 0x00000000000A4B95
00000000000A4B6C testb $1,0x137(%rsp)
00000000000A4B74 jne 0x00000000000A4E3F
00000000000A4B7A jmp 0x00000000000A4E30
00000000000A4B7F mov %rax,%rcx
00000000000A4B82 mov %edx,%eax
00000000000A4B84 mov %rcx,0x138(%rsp)
00000000000A4B8C mov %eax,0x140(%rsp)
00000000000A4B93 jmp 0x00000000000A4B6C
00000000000A4B95 mov 0x87(%rsp),%al
00000000000A4B9C test $1,%al
00000000000A4B9E jne 0x00000000000A4BBE
00000000000A4BA0 jmp 0x00000000000A4BA2
00000000000A4BA2 mov 0x68(%rsp),%rdi
00000000000A4BA7 movb $0,0x137(%rsp)
00000000000A4BAF call 0x00000000000A5550
00000000000A4BB4 mov %rax,0x60(%rsp)
00000000000A4BB9 jmp 0x00000000000A4E19
00000000000A4BBE mov 0x68(%rsp),%rdi
00000000000A4BC3 call 0x00000000000963E0
00000000000A4BC8 mov %rdx,0x50(%rsp)
00000000000A4BCD mov %rax,0x58(%rsp)
00000000000A4BD2 jmp 0x00000000000A4BD4
00000000000A4BD4 mov 0x50(%rsp),%rsi
00000000000A4BD9 mov 0x58(%rsp),%rdi
00000000000A4BDE call 0x00000000000A2A50
00000000000A4BE3 mov %rdx,0x40(%rsp)
00000000000A4BE8 mov %rax,0x48(%rsp)
00000000000A4BED jmp 0x00000000000A4BEF
00000000000A4BEF mov 0x40(%rsp),%rdx
00000000000A4BF4 mov 0x48(%rsp),%rsi
00000000000A4BF9 lea 0x88(%rsp),%rax
00000000000A4C01 mov %rax,0xC0(%rsp)
00000000000A4C09 mov 0xC0(%rsp),%rcx
00000000000A4C11 lea 0xA8(%rsp),%rdi
00000000000A4C19 call 0x0000000000051970
00000000000A4C1E jmp 0x00000000000A4C20
00000000000A4C20 lea 0x90(%rsp),%rdi
00000000000A4C28 lea 0xA8(%rsp),%rsi
00000000000A4C30 call 0x000000000005A990
00000000000A4C35 jmp 0x00000000000A4C37
00000000000A4C37 lea 0x90(%rsp),%rdi
00000000000A4C3F call 0x0000000000094110
00000000000A4C44 mov %rax,0x38(%rsp)
00000000000A4C49 jmp 0x00000000000A4C73
00000000000A4C4B lea 0x90(%rsp),%rdi
00000000000A4C53 call 0x000000000009BC70
00000000000A4C58 jmp 0x00000000000A4B6C
00000000000A4C5D mov %rax,%rcx
00000000000A4C60 mov %edx,%eax
00000000000A4C62 mov %rcx,0x138(%rsp)
00000000000A4C6A mov %eax,0x140(%rsp)
00000000000A4C71 jmp 0x00000000000A4C4B
00000000000A4C73 mov 0x38(%rsp),%rax
00000000000A4C78 cmp $2,%rax
00000000000A4C7C jb 0x00000000000A4C9D
00000000000A4C7E lea 0x3057B0,%rdx
00000000000A4C85 xor %eax,%eax
00000000000A4C87 mov %eax,%esi
00000000000A4C89 lea 0x90(%rsp),%rdi
00000000000A4C91 call 0x0000000000096910
00000000000A4C96 mov %rax,0x30(%rsp)
00000000000A4C9B jmp 0x00000000000A4D04
00000000000A4C9D lea 0x90(%rsp),%rdi
00000000000A4CA5 call 0x0000000000096260
00000000000A4CAA mov %rdx,0x20(%rsp)
00000000000A4CAF mov %rax,0x28(%rsp)
00000000000A4CB4 jmp 0x00000000000A4CB6
00000000000A4CB6 mov 0x20(%rsp),%rsi
00000000000A4CBB mov 0x28(%rsp),%rdi
00000000000A4CC0 call 0x00000000000A2AB0
00000000000A4CC5 mov %rax,0x18(%rsp)
00000000000A4CCA jmp 0x00000000000A4CCC
00000000000A4CCC mov 0x18(%rsp),%rdi
00000000000A4CD1 call 0x000000000006D420
00000000000A4CD6 mov %rax,0x10(%rsp)
00000000000A4CDB jmp 0x00000000000A4CDD
00000000000A4CDD mov 0x70(%rsp),%rax
00000000000A4CE2 mov 0x10(%rsp),%rcx
00000000000A4CE7 mov %rcx,8(%rax)
00000000000A4CEB movq $0,(%rax)
00000000000A4CF2 lea 0x90(%rsp),%rdi
00000000000A4CFA call 0x000000000009BC70
00000000000A4CFF jmp 0x00000000000A4E0D
00000000000A4D04 mov 0x30(%rsp),%rax
00000000000A4D09 mov (%rax),%rax
00000000000A4D0C mov 0x10(%rax),%rcx
00000000000A4D10 mov %rcx,0x110(%rsp)
00000000000A4D18 movups (%rax),%xmm0
00000000000A4D1B movaps %xmm0,0x100(%rsp)
00000000000A4D23 lea 0x3057C8,%rdx
00000000000A4D2A lea 0x90(%rsp),%rdi
00000000000A4D32 mov $1,%esi
00000000000A4D37 call 0x0000000000096910
00000000000A4D3C mov %rax,8(%rsp)
00000000000A4D41 jmp 0x00000000000A4D43
00000000000A4D43 mov 0x70(%rsp),%rdi
00000000000A4D48 mov 8(%rsp),%rax
00000000000A4D4D mov (%rax),%rax
00000000000A4D50 mov (%rax),%rcx
00000000000A4D53 mov %rcx,0x118(%rsp)
00000000000A4D5B mov 8(%rax),%rcx
00000000000A4D5F mov %rcx,0x120(%rsp)
00000000000A4D67 mov 0x10(%rax),%rax
00000000000A4D6B mov %rax,0x128(%rsp)
00000000000A4D73 mov 0x100(%rsp),%rax
00000000000A4D7B mov %rax,0xD0(%rsp)
00000000000A4D83 mov 0x108(%rsp),%rax
00000000000A4D8B mov %rax,0xD8(%rsp)
00000000000A4D93 mov 0x110(%rsp),%rax
00000000000A4D9B mov %rax,0xE0(%rsp)
00000000000A4DA3 mov 0x118(%rsp),%rax
00000000000A4DAB mov %rax,0xE8(%rsp)
00000000000A4DB3 mov 0x120(%rsp),%rax
00000000000A4DBB mov %rax,0xF0(%rsp)
00000000000A4DC3 mov 0x128(%rsp),%rax
00000000000A4DCB mov %rax,0xF8(%rsp)
00000000000A4DD3 movb $3,0xC8(%rsp)
00000000000A4DDB add $8,%rdi
00000000000A4DDF lea 0xC8(%rsp),%rsi
00000000000A4DE7 mov $0x38,%edx
00000000000A4DEC call 0x000000000002E4B8
00000000000A4DF1 mov 0x70(%rsp),%rax
00000000000A4DF6 movq $1,(%rax)
00000000000A4DFD jmp 0x00000000000A4CF2
00000000000A4E02 lea 0x2FBE0,%rax
00000000000A4E09 call *%rax
00000000000A4E0B ud2
00000000000A4E0D testb $1,0x137(%rsp)
00000000000A4E15 jne 0x00000000000A4E4E
00000000000A4E17 jmp 0x00000000000A4E41
00000000000A4E19 mov 0x70(%rsp),%rax
00000000000A4E1E mov 0x60(%rsp),%rcx
00000000000A4E23 mov %rcx,8(%rax)
00000000000A4E27 movq $0,(%rax)
00000000000A4E2E jmp 0x00000000000A4E0D
00000000000A4E30 mov 0x138(%rsp),%rdi
00000000000A4E38 call 0x000000000002E3D0
00000000000A4E3D ud2
00000000000A4E3F jmp 0x00000000000A4E30
00000000000A4E41 mov 0x78(%rsp),%rax
00000000000A4E46 add $0x148,%rsp
00000000000A4E4D ret
00000000000A4E4E jmp 0x00000000000A4E41

 Function call queue at function a4b30: [a5550, 51970, 5a990, 6d420]

Analyzing function at a5550
00000000000A5550 sub $0x78,%rsp
00000000000A5554 call 0x00000000000963E0
00000000000A5559 mov %rdx,0x38(%rsp)
00000000000A555E mov %rax,0x40(%rsp)
00000000000A5563 jmp 0x00000000000A557A
00000000000A5565 jmp 0x00000000000A55F7
00000000000A556A mov %rax,%rcx
00000000000A556D mov %edx,%eax
00000000000A556F mov %rcx,0x68(%rsp)
00000000000A5574 mov %eax,0x70(%rsp)
00000000000A5578 jmp 0x00000000000A5565
00000000000A557A mov 0x38(%rsp),%rsi
00000000000A557F mov 0x40(%rsp),%rdi
00000000000A5584 call 0x00000000000A2A50
00000000000A5589 mov %rdx,0x28(%rsp)
00000000000A558E mov %rax,0x30(%rsp)
00000000000A5593 jmp 0x00000000000A5595
00000000000A5595 mov 0x28(%rsp),%rsi
00000000000A559A mov 0x30(%rsp),%rdi
00000000000A559F call 0x0000000000050FD0
00000000000A55A4 mov %rdx,0x18(%rsp)
00000000000A55A9 mov %rax,0x20(%rsp)
00000000000A55AE jmp 0x00000000000A55B0
00000000000A55B0 mov 0x18(%rsp),%rax
00000000000A55B5 mov 0x20(%rsp),%rcx
00000000000A55BA mov %rcx,0x50(%rsp)
00000000000A55BF mov %rax,0x58(%rsp)
00000000000A55C4 lea 0x48(%rsp),%rax
00000000000A55C9 mov %rax,0x60(%rsp)
00000000000A55CE mov 0x60(%rsp),%rsi
00000000000A55D3 lea 0x50(%rsp),%rdi
00000000000A55D8 call 0x00000000000892C0
00000000000A55DD mov %rax,0x10(%rsp)
00000000000A55E2 jmp 0x00000000000A55E4
00000000000A55E4 mov 0x10(%rsp),%rdi
00000000000A55E9 call 0x000000000006D330
00000000000A55EE mov %rax,8(%rsp)
00000000000A55F3 jmp 0x00000000000A55F5
00000000000A55F5 jmp 0x00000000000A5603
00000000000A55F7 mov 0x68(%rsp),%rdi
00000000000A55FC call 0x000000000002E3D0
00000000000A5601 ud2
00000000000A5603 mov 8(%rsp),%rax
00000000000A5608 add $0x78,%rsp
00000000000A560C ret

 Function call queue at function a5550: [892c0, 6d330]

Analyzing function at 892c0
00000000000892C0 push %rax
00000000000892C1 call 0x0000000000050370
00000000000892C6 mov %rax,(%rsp)
00000000000892CA mov (%rsp),%rax
00000000000892CE pop %rcx
00000000000892CF ret

 Function call queue at function 892c0: []

Analyzing function at 6d330
000000000006D330 sub $0x28,%rsp
000000000006D334 mov %rdi,8(%rsp)
000000000006D339 movb $1,0x27(%rsp)
000000000006D33E mov 8(%rsp),%rax
000000000006D343 test %rax,%rax
000000000006D346 setne %al
000000000006D349 movzbl %al,%eax
000000000006D34C je 0x000000000006D354
000000000006D34E jmp 0x000000000006D350
000000000006D350 jmp 0x000000000006D35F
000000000006D352 ud2
000000000006D354 movq $0,0x10(%rsp)
000000000006D35D jmp 0x000000000006D385
000000000006D35F mov 8(%rsp),%rax
000000000006D364 movb $0,0x27(%rsp)
000000000006D369 mov %rax,0x18(%rsp)
000000000006D36E mov 0x18(%rsp),%rdi
000000000006D373 call 0x00000000000A5900
000000000006D378 mov %rax,(%rsp)
000000000006D37C mov (%rsp),%rax
000000000006D380 mov %rax,0x10(%rsp)
000000000006D385 testb $1,0x27(%rsp)
000000000006D38A jne 0x000000000006D396
000000000006D38C mov 0x10(%rsp),%rax
000000000006D391 add $0x28,%rsp
000000000006D395 ret
000000000006D396 jmp 0x000000000006D38C

 Function call queue at function 6d330: [a5900]

Analyzing function at a5900
00000000000A5900 mov %rdi,%rax
00000000000A5903 ret

 Function call queue at function a5900: []

Analyzing function at 51970
0000000000051970 push %rax
0000000000051971 mov %rdi,%rax
0000000000051974 mov %rax,(%rsp)
0000000000051978 call 0x000000000005AD20
000000000005197D mov (%rsp),%rax
0000000000051981 pop %rcx
0000000000051982 ret

 Function call queue at function 51970: []

Analyzing function at 5a990
000000000005A990 sub $0x28,%rsp
000000000005A994 mov %rdi,%rax
000000000005A997 mov %rax,8(%rsp)
000000000005A99C mov (%rsi),%rax
000000000005A99F mov %rax,0x10(%rsp)
000000000005A9A4 mov 8(%rsi),%rax
000000000005A9A8 mov %rax,0x18(%rsp)
000000000005A9AD mov 0x10(%rsi),%rax
000000000005A9B1 mov %rax,0x20(%rsp)
000000000005A9B6 lea 0x10(%rsp),%rsi
000000000005A9BB call 0x00000000000982C0
000000000005A9C0 mov 8(%rsp),%rax
000000000005A9C5 add $0x28,%rsp
000000000005A9C9 ret

 Function call queue at function 5a990: [982c0]

Analyzing function at 982c0
00000000000982C0 sub $0x48,%rsp
00000000000982C4 mov %rdi,8(%rsp)
00000000000982C9 mov %rdi,0x10(%rsp)
00000000000982CE mov (%rsi),%rax
00000000000982D1 mov %rax,0x30(%rsp)
00000000000982D6 mov 8(%rsi),%rax
00000000000982DA mov %rax,0x38(%rsp)
00000000000982DF mov 0x10(%rsi),%rax
00000000000982E3 mov %rax,0x40(%rsp)
00000000000982E8 lea 0x18(%rsp),%rdi
00000000000982ED lea 0x30(%rsp),%rsi
00000000000982F2 call 0x000000000005ADE0
00000000000982F7 mov 8(%rsp),%rdi
00000000000982FC lea 0x18(%rsp),%rsi
0000000000098301 call 0x0000000000099220
0000000000098306 mov 0x10(%rsp),%rax
000000000009830B add $0x48,%rsp
000000000009830F ret

 Function call queue at function 982c0: [5ade0, 99220]

Analyzing function at 5ade0
000000000005ADE0 mov %rdi,%rax
000000000005ADE3 mov (%rsi),%rcx
000000000005ADE6 mov %rcx,(%rdi)
000000000005ADE9 mov 8(%rsi),%rcx
000000000005ADED mov %rcx,8(%rdi)
000000000005ADF1 mov 0x10(%rsi),%rcx
000000000005ADF5 mov %rcx,0x10(%rdi)
000000000005ADF9 ret

 Function call queue at function 5ade0: []

Analyzing function at 99220
0000000000099220 sub $0x28,%rsp
0000000000099224 mov %rdi,%rax
0000000000099227 mov %rax,8(%rsp)
000000000009922C mov (%rsi),%rax
000000000009922F mov %rax,0x10(%rsp)
0000000000099234 mov 8(%rsi),%rax
0000000000099238 mov %rax,0x18(%rsp)
000000000009923D mov 0x10(%rsi),%rax
0000000000099241 mov %rax,0x20(%rsp)
0000000000099246 lea 0x10(%rsp),%rsi
000000000009924B call 0x0000000000090210
0000000000099250 mov 8(%rsp),%rax
0000000000099255 add $0x28,%rsp
0000000000099259 ret

 Function call queue at function 99220: [90210]

Analyzing function at 90210
0000000000090210 sub $0xC8,%rsp
0000000000090217 mov %rsi,0x20(%rsp)
000000000009021C mov %rdi,%rax
000000000009021F mov 0x20(%rsp),%rdi
0000000000090224 mov %rax,0x28(%rsp)
0000000000090229 mov %rax,0x30(%rsp)
000000000009022E movb $1,0xAF(%rsp)
0000000000090236 call 0x000000000005A5C0
000000000009023B mov %rax,0x38(%rsp)
0000000000090240 jmp 0x000000000009026B
0000000000090242 testb $1,0xAF(%rsp)
000000000009024A jne 0x0000000000090458
0000000000090250 jmp 0x0000000000090449
0000000000090255 mov %rax,%rcx
0000000000090258 mov %edx,%eax
000000000009025A mov %rcx,0xB0(%rsp)
0000000000090262 mov %eax,0xB8(%rsp)
0000000000090269 jmp 0x0000000000090242
000000000009026B mov 0x38(%rsp),%rax
0000000000090270 mov %rax,0x58(%rsp)
0000000000090275 mov 0x58(%rsp),%rax
000000000009027A test %rax,%rax
000000000009027D setne %al
0000000000090280 movzbl %al,%eax
0000000000090283 je 0x000000000009028B
0000000000090285 jmp 0x0000000000090287
0000000000090287 jmp 0x000000000009029A
0000000000090289 ud2
000000000009028B mov 0x28(%rsp),%rdi
0000000000090290 call 0x0000000000091480
0000000000090295 jmp 0x0000000000090447
000000000009029A mov 0x20(%rsp),%rsi
000000000009029F movb $1,0xAE(%rsp)
00000000000902A7 mov 0x58(%rsp),%rax
00000000000902AC mov %rax,0x18(%rsp)
00000000000902B1 lea 0x60(%rsp),%rdi
00000000000902B6 call 0x000000000005A8D0
00000000000902BB jmp 0x00000000000902E6
00000000000902BD testb $1,0xAE(%rsp)
00000000000902C5 jne 0x00000000000903F1
00000000000902CB jmp 0x0000000000090242
00000000000902D0 mov %rax,%rcx
00000000000902D3 mov %edx,%eax
00000000000902D5 mov %rcx,0xB0(%rsp)
00000000000902DD mov %eax,0xB8(%rsp)
00000000000902E4 jmp 0x00000000000902BD
00000000000902E6 mov 0x60(%rsp),%rax
00000000000902EB inc %rax
00000000000902EE mov $0xFFFFFFFFFFFFFFFF,%rcx
00000000000902F5 cmove %rcx,%rax
00000000000902F9 mov %rax,0xC0(%rsp)
0000000000090301 mov 0xC0(%rsp),%rax
0000000000090309 mov %rax,0x10(%rsp)
000000000009030E mov 0x10(%rsp),%rsi
0000000000090313 lea 0xEFD80,%rax
000000000009031A mov $4,%edi
000000000009031F call *%rax
0000000000090321 mov %rax,8(%rsp)
0000000000090326 jmp 0x0000000000090328
0000000000090328 mov 8(%rsp),%rsi
000000000009032D lea 0x78(%rsp),%rdi
0000000000090332 call 0x00000000000911C0
0000000000090337 jmp 0x0000000000090339
0000000000090339 lea 0x78(%rsp),%rdi
000000000009033E call 0x0000000000091580
0000000000090343 mov %rax,(%rsp)
0000000000090347 jmp 0x000000000009036E
0000000000090349 lea 0x78(%rsp),%rdi
000000000009034E call 0x000000000009BC70
0000000000090353 jmp 0x00000000000902BD
0000000000090358 mov %rax,%rcx
000000000009035B mov %edx,%eax
000000000009035D mov %rcx,0xB0(%rsp)
0000000000090365 mov %eax,0xB8(%rsp)
000000000009036C jmp 0x0000000000090349
000000000009036E mov 0x18(%rsp),%rsi
0000000000090373 mov (%rsp),%rdi
0000000000090377 movb $0,0xAE(%rsp)
000000000009037F call 0x0000000000068940
0000000000090384 jmp 0x0000000000090386
0000000000090386 lea 0x78(%rsp),%rdi
000000000009038B mov $1,%esi
0000000000090390 call 0x00000000000957C0
0000000000090395 jmp 0x0000000000090397
0000000000090397 mov 0x20(%rsp),%rax
000000000009039C mov 0x88(%rsp),%rcx
00000000000903A4 mov %rcx,0x50(%rsp)
00000000000903A9 movups 0x78(%rsp),%xmm0
00000000000903AE movaps %xmm0,0x40(%rsp)
00000000000903B3 movb $0,0xAF(%rsp)
00000000000903BB mov 0x10(%rax),%rcx
00000000000903BF mov %rcx,0xA0(%rsp)
00000000000903C7 movups (%rax),%xmm0
00000000000903CA movaps %xmm0,0x90(%rsp)
00000000000903D2 lea 0x40(%rsp),%rdi
00000000000903D7 lea 0x90(%rsp),%rsi
00000000000903DF call 0x0000000000098470
00000000000903E4 jmp 0x000000000009041B
00000000000903E6 lea 0x2FBE0,%rax
00000000000903ED call *%rax
00000000000903EF ud2
00000000000903F1 jmp 0x0000000000090242
00000000000903F6 lea 0x40(%rsp),%rdi
00000000000903FB call 0x000000000009BC70
0000000000090400 jmp 0x0000000000090242
0000000000090405 mov %rax,%rcx
0000000000090408 mov %edx,%eax
000000000009040A mov %rcx,0xB0(%rsp)
0000000000090412 mov %eax,0xB8(%rsp)
0000000000090419 jmp 0x00000000000903F6
000000000009041B mov 0x28(%rsp),%rax
0000000000090420 mov 0x40(%rsp),%rcx
0000000000090425 mov %rcx,(%rax)
0000000000090428 mov 0x48(%rsp),%rcx
000000000009042D mov %rcx,8(%rax)
0000000000090431 mov 0x50(%rsp),%rcx
0000000000090436 mov %rcx,0x10(%rax)
000000000009043A mov 0x30(%rsp),%rax
000000000009043F add $0xC8,%rsp
0000000000090446 ret
0000000000090447 jmp 0x000000000009043A

 Function call queue at function 90210: [5a5c0, 5a8d0, 98470]

Analyzing function at 5a5c0
000000000005A5C0 push %rax
000000000005A5C1 mov %rdi,%rsi
000000000005A5C4 mov %rsi,%rdi
000000000005A5C7 add $0x10,%rsi
000000000005A5CB call 0x0000000000053790
000000000005A5D0 mov %rax,(%rsp)
000000000005A5D4 mov (%rsp),%rax
000000000005A5D8 pop %rcx
000000000005A5D9 ret

 Function call queue at function 5a5c0: [53790]

Analyzing function at 53790
0000000000053790 sub $0x58,%rsp
0000000000053794 mov %rdi,0x18(%rsp)
0000000000053799 mov %rsi,0x20(%rsp)
000000000005379E mov 0x18(%rsp),%rdi
00000000000537A3 call 0x0000000000053910
00000000000537A8 mov %rax,0x10(%rsp)
00000000000537AD jmp 0x00000000000537C1
00000000000537AF jmp 0x0000000000053828
00000000000537B1 mov %rax,%rcx
00000000000537B4 mov %edx,%eax
00000000000537B6 mov %rcx,0x48(%rsp)
00000000000537BB mov %eax,0x50(%rsp)
00000000000537BF jmp 0x00000000000537AF
00000000000537C1 mov 0x10(%rsp),%rax
00000000000537C6 mov %rax,0x30(%rsp)
00000000000537CB mov $1,%eax
00000000000537D0 xor %ecx,%ecx
00000000000537D2 cmpq $0,0x30(%rsp)
00000000000537D8 cmove %rcx,%rax
00000000000537DC cmp $1,%rax
00000000000537E0 jne 0x000000000005380B
00000000000537E2 mov 0x30(%rsp),%rax
00000000000537E7 mov %rax,0x38(%rsp)
00000000000537EC lea 0x38(%rsp),%rax
00000000000537F1 mov %rax,0x40(%rsp)
00000000000537F6 mov 0x40(%rsp),%rsi
00000000000537FB lea 0x20(%rsp),%rdi
0000000000053800 call 0x00000000000A27A0
0000000000053805 mov %al,0xF(%rsp)
0000000000053809 jmp 0x000000000005381E
000000000005380B movq $0,0x28(%rsp)
0000000000053814 mov 0x28(%rsp),%rax
0000000000053819 add $0x58,%rsp
000000000005381D ret
000000000005381E mov 0xF(%rsp),%al
0000000000053822 test $1,%al
0000000000053824 jne 0x0000000000053839
0000000000053826 jmp 0x0000000000053834
0000000000053828 mov 0x48(%rsp),%rdi
000000000005382D call 0x000000000002E3D0
0000000000053832 ud2
0000000000053834 jmp 0x000000000005379E
0000000000053839 mov 0x38(%rsp),%rax
000000000005383E mov %rax,0x28(%rsp)
0000000000053843 jmp 0x0000000000053814

 Function call queue at function 53790: [a27a0]

Analyzing function at a27a0
00000000000A27A0 sub $0x18,%rsp
00000000000A27A4 mov %rsi,0x10(%rsp)
00000000000A27A9 mov (%rdi),%rdi
00000000000A27AC mov 0x10(%rsp),%rsi
00000000000A27B1 call 0x00000000000A51F0
00000000000A27B6 mov %al,0xF(%rsp)
00000000000A27BA mov 0xF(%rsp),%al
00000000000A27BE and $1,%al
00000000000A27C0 movzbl %al,%eax
00000000000A27C3 add $0x18,%rsp
00000000000A27C7 ret

 Function call queue at function a27a0: [a51f0]

Analyzing function at a51f0
00000000000A51F0 sub $0x28,%rsp
00000000000A51F4 mov %rdi,8(%rsp)
00000000000A51F9 mov %rsi,0x10(%rsp)
00000000000A51FE mov (%rsi),%rdi
00000000000A5201 add $0x18,%rdi
00000000000A5205 call 0x000000000006E5F0
00000000000A520A mov %al,0x1E(%rsp)
00000000000A520E mov 0x1E(%rsp),%al
00000000000A5212 test $1,%al
00000000000A5214 jne 0x00000000000A521F
00000000000A5216 jmp 0x00000000000A5218
00000000000A5218 movb $0,0x1F(%rsp)
00000000000A521D jmp 0x00000000000A524C
00000000000A521F mov 0x10(%rsp),%rax
00000000000A5224 mov 8(%rsp),%rcx
00000000000A5229 mov (%rcx),%rdi
00000000000A522C mov (%rax),%rax
00000000000A522F mov %rax,0x20(%rsp)
00000000000A5234 mov 0x20(%rsp),%rsi
00000000000A5239 call 0x00000000000692D0
00000000000A523E mov %al,7(%rsp)
00000000000A5242 mov 7(%rsp),%al
00000000000A5246 and $1,%al
00000000000A5248 mov %al,0x1F(%rsp)
00000000000A524C mov 0x1F(%rsp),%al
00000000000A5250 and $1,%al
00000000000A5252 movzbl %al,%eax
00000000000A5255 add $0x28,%rsp
00000000000A5259 ret

 Function call queue at function a51f0: [692d0]

Analyzing function at 692d0
00000000000692D0 sub $0x28,%rsp
00000000000692D4 mov %rsi,0x10(%rsp)
00000000000692D9 mov %rdi,%rax
00000000000692DC mov 0x10(%rsp),%rdi
00000000000692E1 mov %rdi,0x18(%rsp)
00000000000692E6 lea 0x305ED0,%rsi
00000000000692ED call 0x0000000000030FD0
00000000000692F2 mov %al,0x26(%rsp)
00000000000692F6 mov 0x26(%rsp),%al
00000000000692FA test $1,%al
00000000000692FC jne 0x0000000000069317
00000000000692FE jmp 0x0000000000069300
0000000000069300 mov 0x18(%rsp),%rdi
0000000000069305 lea 0x305F00,%rsi
000000000006930C call 0x0000000000030FD0
0000000000069311 mov %al,0xF(%rsp)
0000000000069315 jmp 0x000000000006932A
0000000000069317 movb $1,0x27(%rsp)
000000000006931C mov 0x27(%rsp),%al
0000000000069320 and $1,%al
0000000000069322 movzbl %al,%eax
0000000000069325 add $0x28,%rsp
0000000000069329 ret
000000000006932A mov 0xF(%rsp),%al
000000000006932E and $1,%al
0000000000069330 mov %al,0x27(%rsp)
0000000000069334 jmp 0x000000000006931C

 Function call queue at function 692d0: []

Analyzing function at 5a8d0
000000000005A8D0 sub $0x28,%rsp
000000000005A8D4 mov %rdi,(%rsp)
000000000005A8D8 mov %rdi,8(%rsp)
000000000005A8DD lea 0x10(%rsp),%rdi
000000000005A8E2 call 0x00000000000548D0
000000000005A8E7 mov 8(%rsp),%rax
000000000005A8EC mov (%rsp),%rcx
000000000005A8F0 mov 0x18(%rsp),%rsi
000000000005A8F5 mov 0x20(%rsp),%rdx
000000000005A8FA movq $0,(%rcx)
000000000005A901 mov %rsi,8(%rcx)
000000000005A905 mov %rdx,0x10(%rcx)
000000000005A909 add $0x28,%rsp
000000000005A90D ret

 Function call queue at function 5a8d0: []

Analyzing function at 98470
0000000000098470 sub $0x18,%rsp
0000000000098474 mov (%rsi),%rax
0000000000098477 mov %rax,(%rsp)
000000000009847B mov 8(%rsi),%rax
000000000009847F mov %rax,8(%rsp)
0000000000098484 mov 0x10(%rsi),%rax
0000000000098488 mov %rax,0x10(%rsp)
000000000009848D mov %rsp,%rsi
0000000000098490 call 0x0000000000093420
0000000000098495 add $0x18,%rsp
0000000000098499 ret

 Function call queue at function 98470: [93420]

Analyzing function at 93420
0000000000093420 sub $0x98,%rsp
0000000000093427 mov %rdi,0x40(%rsp)
000000000009342C mov %rsi,0x48(%rsp)
0000000000093431 mov 0x48(%rsp),%rdi
0000000000093436 call 0x000000000005A5C0
000000000009343B mov %rax,0x38(%rsp)
0000000000093440 jmp 0x000000000009345A
0000000000093442 jmp 0x00000000000935A1
0000000000093447 mov %rax,%rcx
000000000009344A mov %edx,%eax
000000000009344C mov %rcx,0x78(%rsp)
0000000000093451 mov %eax,0x80(%rsp)
0000000000093458 jmp 0x0000000000093442
000000000009345A mov 0x38(%rsp),%rax
000000000009345F mov %rax,0x50(%rsp)
0000000000093464 mov $1,%eax
0000000000093469 xor %ecx,%ecx
000000000009346B cmpq $0,0x50(%rsp)
0000000000093471 cmove %rcx,%rax
0000000000093475 cmp $1,%rax
0000000000093479 jne 0x000000000009349B
000000000009347B mov 0x40(%rsp),%rdi
0000000000093480 movb $1,0x77(%rsp)
0000000000093485 mov 0x50(%rsp),%rax
000000000009348A mov %rax,0x28(%rsp)
000000000009348F call 0x0000000000094110
0000000000093494 mov %rax,0x30(%rsp)
0000000000093499 jmp 0x00000000000934C7
000000000009349B jmp 0x000000000009349D
000000000009349D jmp 0x000000000009349F
000000000009349F add $0x98,%rsp
00000000000934A6 ret
00000000000934A7 testb $1,0x77(%rsp)
00000000000934AC jne 0x000000000009359C
00000000000934B2 jmp 0x0000000000093442
00000000000934B4 mov %rax,%rcx
00000000000934B7 mov %edx,%eax
00000000000934B9 mov %rcx,0x78(%rsp)
00000000000934BE mov %eax,0x80(%rsp)
00000000000934C5 jmp 0x00000000000934A7
00000000000934C7 mov 0x40(%rsp),%rdi
00000000000934CC call 0x0000000000095860
00000000000934D1 mov %rax,0x20(%rsp)
00000000000934D6 jmp 0x00000000000934D8
00000000000934D8 mov 0x30(%rsp),%rax
00000000000934DD mov 0x20(%rsp),%rcx
00000000000934E2 cmp %rcx,%rax
00000000000934E5 je 0x00000000000934F8
00000000000934E7 mov 0x40(%rsp),%rdi
00000000000934EC call 0x0000000000091580
00000000000934F1 mov %rax,0x18(%rsp)
00000000000934F6 jmp 0x0000000000093544
00000000000934F8 mov 0x48(%rsp),%rsi
00000000000934FD lea 0x58(%rsp),%rdi
0000000000093502 call 0x000000000005A8D0
0000000000093507 jmp 0x0000000000093509
0000000000093509 mov 0x58(%rsp),%rax
000000000009350E inc %rax
0000000000093511 mov $0xFFFFFFFFFFFFFFFF,%rcx
0000000000093518 cmove %rcx,%rax
000000000009351C mov %rax,0x88(%rsp)
0000000000093524 mov 0x88(%rsp),%rax
000000000009352C mov %rax,0x10(%rsp)
0000000000093531 mov 0x10(%rsp),%rsi
0000000000093536 mov 0x40(%rsp),%rdi
000000000009353B call 0x0000000000095720
0000000000093540 jmp 0x0000000000093542
0000000000093542 jmp 0x00000000000934E7
0000000000093544 mov 0x18(%rsp),%rax
0000000000093549 mov 0x30(%rsp),%rcx
000000000009354E shl $3,%rcx
0000000000093552 add %rcx,%rax
0000000000093555 mov %rax,0x90(%rsp)
000000000009355D mov 0x90(%rsp),%rax
0000000000093565 mov %rax,8(%rsp)
000000000009356A jmp 0x000000000009356C
000000000009356C mov 0x28(%rsp),%rsi
0000000000093571 mov 8(%rsp),%rdi
0000000000093576 movb $0,0x77(%rsp)
000000000009357B call 0x0000000000068940
0000000000093580 jmp 0x0000000000093582
0000000000093582 mov 0x40(%rsp),%rdi
0000000000093587 mov 0x30(%rsp),%rsi
000000000009358C add $1,%rsi
0000000000093590 call 0x00000000000957C0
0000000000093595 jmp 0x0000000000093597
0000000000093597 jmp 0x0000000000093431

 Function call queue at function 93420: []

Analyzing function at 6d420
000000000006D420 sub $0x28,%rsp
000000000006D424 mov %rdi,8(%rsp)
000000000006D429 movb $1,0x27(%rsp)
000000000006D42E mov 8(%rsp),%rax
000000000006D433 test %rax,%rax
000000000006D436 setne %al
000000000006D439 movzbl %al,%eax
000000000006D43C je 0x000000000006D444
000000000006D43E jmp 0x000000000006D440
000000000006D440 jmp 0x000000000006D44F
000000000006D442 ud2
000000000006D444 movq $0,0x10(%rsp)
000000000006D44D jmp 0x000000000006D475
000000000006D44F mov 8(%rsp),%rax
000000000006D454 movb $0,0x27(%rsp)
000000000006D459 mov %rax,0x18(%rsp)
000000000006D45E mov 0x18(%rsp),%rdi
000000000006D463 call 0x00000000000A52F0
000000000006D468 mov %rax,(%rsp)
000000000006D46C mov (%rsp),%rax
000000000006D470 mov %rax,0x10(%rsp)
000000000006D475 testb $1,0x27(%rsp)
000000000006D47A jne 0x000000000006D486
000000000006D47C mov 0x10(%rsp),%rax
000000000006D481 add $0x28,%rsp
000000000006D485 ret
000000000006D486 jmp 0x000000000006D47C

 Function call queue at function 6d420: [a52f0]

Analyzing function at a52f0
00000000000A52F0 mov (%rdi),%rax
00000000000A52F3 ret

 Function call queue at function a52f0: []

Analyzing function at 760d0
00000000000760D0 sub $0xB8,%rsp
00000000000760D7 mov %rdi,(%rsp)
00000000000760DB mov %rdi,8(%rsp)
00000000000760E0 lea 0x10(%rsp),%rdi
00000000000760E5 mov $0x38,%edx
00000000000760EA call 0x000000000002E4B8
00000000000760EF lea 0x80(%rsp),%rdi
00000000000760F7 lea 0x10(%rsp),%rsi
00000000000760FC mov $0x38,%edx
0000000000076101 call 0x000000000002E4B8
0000000000076106 lea 0x48(%rsp),%rdi
000000000007610B lea 0x80(%rsp),%rsi
0000000000076113 call 0x0000000000089330
0000000000076118 mov (%rsp),%rdi
000000000007611C add $8,%rdi
0000000000076120 lea 0x48(%rsp),%rsi
0000000000076125 mov $0x38,%edx
000000000007612A call 0x000000000002E4B8
000000000007612F mov (%rsp),%rcx
0000000000076133 mov 8(%rsp),%rax
0000000000076138 movb $1,(%rcx)
000000000007613B add $0xB8,%rsp
0000000000076142 ret

 Function call queue at function 760d0: []

Analyzing function at 76050
0000000000076050 sub $0xB8,%rsp
0000000000076057 mov %rdi,(%rsp)
000000000007605B mov %rdi,8(%rsp)
0000000000076060 lea 0x10(%rsp),%rdi
0000000000076065 mov $0x38,%edx
000000000007606A call 0x000000000002E4B8
000000000007606F lea 0x80(%rsp),%rdi
0000000000076077 lea 0x10(%rsp),%rsi
000000000007607C mov $0x38,%edx
0000000000076081 call 0x000000000002E4B8
0000000000076086 lea 0x48(%rsp),%rdi
000000000007608B lea 0x80(%rsp),%rsi
0000000000076093 call 0x0000000000089330
0000000000076098 mov (%rsp),%rdi
000000000007609C add $8,%rdi
00000000000760A0 lea 0x48(%rsp),%rsi
00000000000760A5 mov $0x38,%edx
00000000000760AA call 0x000000000002E4B8
00000000000760AF mov (%rsp),%rcx
00000000000760B3 mov 8(%rsp),%rax
00000000000760B8 movq $1,(%rcx)
00000000000760BF add $0xB8,%rsp
00000000000760C6 ret

 Function call queue at function 76050: []

Analyzing function at 78d20
0000000000078D20 sub $0xC8,%rsp
0000000000078D27 mov %rsi,8(%rsp)
0000000000078D2C mov %rdi,0x10(%rsp)
0000000000078D31 mov %rdi,0x18(%rsp)
0000000000078D36 movzbl (%rsi),%eax
0000000000078D39 test $1,%al
0000000000078D3B je 0x0000000000078D43
0000000000078D3D jmp 0x0000000000078D3F
0000000000078D3F jmp 0x0000000000078D5B
0000000000078D41 ud2
0000000000078D43 mov 0x10(%rsp),%rax
0000000000078D48 mov 8(%rsp),%rcx
0000000000078D4D mov 1(%rcx),%cl
0000000000078D50 and $1,%cl
0000000000078D53 mov %cl,1(%rax)
0000000000078D56 movb $0,(%rax)
0000000000078D59 jmp 0x0000000000078DC1
0000000000078D5B mov 8(%rsp),%rsi
0000000000078D60 add $8,%rsi
0000000000078D64 lea 0x20(%rsp),%rdi
0000000000078D69 mov $0x38,%edx
0000000000078D6E call 0x000000000002E4B8
0000000000078D73 lea 0x90(%rsp),%rdi
0000000000078D7B lea 0x20(%rsp),%rsi
0000000000078D80 mov $0x38,%edx
0000000000078D85 call 0x000000000002E4B8
0000000000078D8A lea 0x58(%rsp),%rdi
0000000000078D8F lea 0x90(%rsp),%rsi
0000000000078D97 mov $0x38,%edx
0000000000078D9C call 0x000000000002E4B8
0000000000078DA1 mov 0x10(%rsp),%rdi
0000000000078DA6 add $8,%rdi
0000000000078DAA lea 0x58(%rsp),%rsi
0000000000078DAF mov $0x38,%edx
0000000000078DB4 call 0x000000000002E4B8
0000000000078DB9 mov 0x10(%rsp),%rax
0000000000078DBE movb $1,(%rax)
0000000000078DC1 mov 0x18(%rsp),%rax
0000000000078DC6 add $0xC8,%rsp
0000000000078DCD ret

 Function call queue at function 78d20: []

Analyzing function at 8b600
000000000008B600 sub $1,%rsp
000000000008B604 movzbl (%rdi),%eax
000000000008B607 movzbl (%rsi),%ecx
000000000008B60A cmp %rcx,%rax
000000000008B60D je 0x000000000008B615
000000000008B60F movb $0,(%rsp)
000000000008B613 jmp 0x000000000008B619
000000000008B615 movb $1,(%rsp)
000000000008B619 mov (%rsp),%al
000000000008B61C and $1,%al
000000000008B61E movzbl %al,%eax
000000000008B621 add $1,%rsp
000000000008B625 ret

 Function call queue at function 8b600: []

Analyzing function at b2aa0
00000000000B2AA0 sub $0xB8,%rsp
00000000000B2AA7 mov %rsi,(%rsp)
00000000000B2AAB mov %rdi,8(%rsp)
00000000000B2AB0 mov %rdi,0x10(%rsp)
00000000000B2AB5 mov 0x303520,%rdx
00000000000B2ABC mov 0x303528,%rcx
00000000000B2AC3 lea 0x30(%rsp),%rdi
00000000000B2AC8 call 0x0000000000041970
00000000000B2ACD lea 0x18(%rsp),%rdi
00000000000B2AD2 lea 0x30(%rsp),%rsi
00000000000B2AD7 call 0x000000000006CFC0
00000000000B2ADC mov (%rsp),%rsi
00000000000B2AE0 mov 0x303560,%rdx
00000000000B2AE7 mov 0x303568,%rcx
00000000000B2AEE lea 0x60(%rsp),%rdi
00000000000B2AF3 call 0x0000000000041970
00000000000B2AF8 jmp 0x00000000000B2B23
00000000000B2AFA lea 0x1B10A0,%rax
00000000000B2B01 lea 0x18(%rsp),%rdi
00000000000B2B06 call *%rax
00000000000B2B08 jmp 0x00000000000B2BE0
00000000000B2B0D mov %rax,%rcx
00000000000B2B10 mov %edx,%eax
00000000000B2B12 mov %rcx,0xA8(%rsp)
00000000000B2B1A mov %eax,0xB0(%rsp)
00000000000B2B21 jmp 0x00000000000B2AFA
00000000000B2B23 lea 0x48(%rsp),%rdi
00000000000B2B28 lea 0x60(%rsp),%rsi
00000000000B2B2D call 0x000000000006CD30
00000000000B2B32 jmp 0x00000000000B2B34
00000000000B2B34 mov 0x10(%rsp),%rax
00000000000B2B39 mov 8(%rsp),%rcx
00000000000B2B3E mov 0x18(%rsp),%rdx
00000000000B2B43 mov %rdx,0x78(%rsp)
00000000000B2B48 mov 0x20(%rsp),%rdx
00000000000B2B4D mov %rdx,0x80(%rsp)
00000000000B2B55 mov 0x28(%rsp),%rdx
00000000000B2B5A mov %rdx,0x88(%rsp)
00000000000B2B62 mov 0x48(%rsp),%rdx
00000000000B2B67 mov %rdx,0x90(%rsp)
00000000000B2B6F mov 0x50(%rsp),%rdx
00000000000B2B74 mov %rdx,0x98(%rsp)
00000000000B2B7C mov 0x58(%rsp),%rdx
00000000000B2B81 mov %rdx,0xA0(%rsp)
00000000000B2B89 mov 0x78(%rsp),%rdx
00000000000B2B8E mov %rdx,(%rcx)
00000000000B2B91 mov 0x80(%rsp),%rdx
00000000000B2B99 mov %rdx,8(%rcx)
00000000000B2B9D mov 0x88(%rsp),%rdx
00000000000B2BA5 mov %rdx,0x10(%rcx)
00000000000B2BA9 mov 0x90(%rsp),%rdx
00000000000B2BB1 mov %rdx,0x18(%rcx)
00000000000B2BB5 mov 0x98(%rsp),%rdx
00000000000B2BBD mov %rdx,0x20(%rcx)
00000000000B2BC1 mov 0xA0(%rsp),%rdx
00000000000B2BC9 mov %rdx,0x28(%rcx)
00000000000B2BCD add $0xB8,%rsp
00000000000B2BD4 ret

 Function call queue at function b2aa0: [6cfc0, 6cd30]

Analyzing function at 6cfc0
000000000006CFC0 sub $0x88,%rsp
000000000006CFC7 mov %rsi,8(%rsp)
000000000006CFCC mov %rdi,0x10(%rsp)
000000000006CFD1 mov %rdi,0x18(%rsp)
000000000006CFD6 movb $1,0x87(%rsp)
000000000006CFDE mov (%rsi),%rax
000000000006CFE1 test %rax,%rax
000000000006CFE4 setne %al
000000000006CFE7 movzbl %al,%eax
000000000006CFEA je 0x000000000006CFF2
000000000006CFEC jmp 0x000000000006CFEE
000000000006CFEE jmp 0x000000000006D003
000000000006CFF0 ud2
000000000006CFF2 mov 0x10(%rsp),%rax
000000000006CFF7 movq $0,(%rax)
000000000006CFFE jmp 0x000000000006D094
000000000006D003 mov 8(%rsp),%rax
000000000006D008 mov (%rax),%rcx
000000000006D00B mov %rcx,0x20(%rsp)
000000000006D010 mov 8(%rax),%rcx
000000000006D014 mov %rcx,0x28(%rsp)
000000000006D019 mov 0x10(%rax),%rax
000000000006D01D mov %rax,0x30(%rsp)
000000000006D022 movb $0,0x87(%rsp)
000000000006D02A mov 0x20(%rsp),%rax
000000000006D02F mov %rax,0x68(%rsp)
000000000006D034 mov 0x28(%rsp),%rax
000000000006D039 mov %rax,0x70(%rsp)
000000000006D03E mov 0x30(%rsp),%rax
000000000006D043 mov %rax,0x78(%rsp)
000000000006D048 mov 0x68(%rsp),%rax
000000000006D04D mov %rax,0x50(%rsp)
000000000006D052 mov 0x70(%rsp),%rax
000000000006D057 mov %rax,0x58(%rsp)
000000000006D05C mov 0x78(%rsp),%rax
000000000006D061 mov %rax,0x60(%rsp)
000000000006D066 lea 0x50(%rsp),%rsi
000000000006D06B lea 0x38(%rsp),%rdi
000000000006D070 call 0x0000000000069340
000000000006D075 mov 0x10(%rsp),%rax
000000000006D07A mov 0x38(%rsp),%rcx
000000000006D07F mov %rcx,(%rax)
000000000006D082 mov 0x40(%rsp),%rcx
000000000006D087 mov %rcx,8(%rax)
000000000006D08B mov 0x48(%rsp),%rcx
000000000006D090 mov %rcx,0x10(%rax)
000000000006D094 testb $1,0x87(%rsp)
000000000006D09C jne 0x000000000006D0AB
000000000006D09E mov 0x18(%rsp),%rax
000000000006D0A3 add $0x88,%rsp
000000000006D0AA ret
000000000006D0AB jmp 0x000000000006D09E

 Function call queue at function 6cfc0: [69340]

Analyzing function at 69340
0000000000069340 sub $0x58,%rsp
0000000000069344 mov %rsi,(%rsp)
0000000000069348 mov %rdi,%rax
000000000006934B mov (%rsp),%rdi
000000000006934F mov %rax,8(%rsp)
0000000000069354 mov %rax,0x10(%rsp)
0000000000069359 call 0x0000000000089060
000000000006935E mov %rdx,0x18(%rsp)
0000000000069363 mov %rax,0x20(%rsp)
0000000000069368 jmp 0x0000000000069389
000000000006936A mov (%rsp),%rdi
000000000006936E lea 0xC6200,%rax
0000000000069375 call *%rax
0000000000069377 jmp 0x00000000000693F7
0000000000069379 mov %rax,%rcx
000000000006937C mov %edx,%eax
000000000006937E mov %rcx,0x48(%rsp)
0000000000069383 mov %eax,0x50(%rsp)
0000000000069387 jmp 0x000000000006936A
0000000000069389 mov 0x18(%rsp),%rdx
000000000006938E mov 0x20(%rsp),%rsi
0000000000069393 lea 0x28(%rsp),%rdi
0000000000069398 call 0x0000000000088E50
000000000006939D jmp 0x000000000006939F
000000000006939F mov 8(%rsp),%rdi
00000000000693A4 lea 0x28(%rsp),%rsi
00000000000693A9 call 0x0000000000082A40
00000000000693AE jmp 0x00000000000693D0
00000000000693B0 lea 0x1C9610,%rax
00000000000693B7 lea 0x28(%rsp),%rdi
00000000000693BC call *%rax
00000000000693BE jmp 0x000000000006936A
00000000000693C0 mov %rax,%rcx
00000000000693C3 mov %edx,%eax
00000000000693C5 mov %rcx,0x48(%rsp)
00000000000693CA mov %eax,0x50(%rsp)
00000000000693CE jmp 0x00000000000693B0
00000000000693D0 lea 0x1C9610,%rax
00000000000693D7 lea 0x28(%rsp),%rdi
00000000000693DC call *%rax
00000000000693DE jmp 0x00000000000693EB
00000000000693E0 lea 0x2FBE0,%rax
00000000000693E7 call *%rax
00000000000693E9 ud2
00000000000693EB mov (%rsp),%rdi
00000000000693EF callq *0x315E60
00000000000693F5 jmp 0x0000000000069403
00000000000693F7 mov 0x48(%rsp),%rdi
00000000000693FC call 0x000000000002E3D0
0000000000069401 ud2
0000000000069403 mov 0x10(%rsp),%rax
0000000000069408 add $0x58,%rsp
000000000006940C ret

 Function call queue at function 69340: []

Analyzing function at 6cd30
000000000006CD30 sub $0x88,%rsp
000000000006CD37 mov %rsi,8(%rsp)
000000000006CD3C mov %rdi,0x10(%rsp)
000000000006CD41 mov %rdi,0x18(%rsp)
000000000006CD46 movb $1,0x87(%rsp)
000000000006CD4E mov (%rsi),%rax
000000000006CD51 test %rax,%rax
000000000006CD54 setne %al
000000000006CD57 movzbl %al,%eax
000000000006CD5A je 0x000000000006CD62
000000000006CD5C jmp 0x000000000006CD5E
000000000006CD5E jmp 0x000000000006CD73
000000000006CD60 ud2
000000000006CD62 mov 0x10(%rsp),%rax
000000000006CD67 movq $0,(%rax)
000000000006CD6E jmp 0x000000000006CE04
000000000006CD73 mov 8(%rsp),%rax
000000000006CD78 mov (%rax),%rcx
000000000006CD7B mov %rcx,0x20(%rsp)
000000000006CD80 mov 8(%rax),%rcx
000000000006CD84 mov %rcx,0x28(%rsp)
000000000006CD89 mov 0x10(%rax),%rax
000000000006CD8D mov %rax,0x30(%rsp)
000000000006CD92 movb $0,0x87(%rsp)
000000000006CD9A mov 0x20(%rsp),%rax
000000000006CD9F mov %rax,0x68(%rsp)
000000000006CDA4 mov 0x28(%rsp),%rax
000000000006CDA9 mov %rax,0x70(%rsp)
000000000006CDAE mov 0x30(%rsp),%rax
000000000006CDB3 mov %rax,0x78(%rsp)
000000000006CDB8 mov 0x68(%rsp),%rax
000000000006CDBD mov %rax,0x50(%rsp)
000000000006CDC2 mov 0x70(%rsp),%rax
000000000006CDC7 mov %rax,0x58(%rsp)
000000000006CDCC mov 0x78(%rsp),%rax
000000000006CDD1 mov %rax,0x60(%rsp)
000000000006CDD6 lea 0x50(%rsp),%rsi
000000000006CDDB lea 0x38(%rsp),%rdi
000000000006CDE0 call 0x0000000000069410
000000000006CDE5 mov 0x10(%rsp),%rax
000000000006CDEA mov 0x38(%rsp),%rcx
000000000006CDEF mov %rcx,(%rax)
000000000006CDF2 mov 0x40(%rsp),%rcx
000000000006CDF7 mov %rcx,8(%rax)
000000000006CDFB mov 0x48(%rsp),%rcx
000000000006CE00 mov %rcx,0x10(%rax)
000000000006CE04 testb $1,0x87(%rsp)
000000000006CE0C jne 0x000000000006CE1B
000000000006CE0E mov 0x18(%rsp),%rax
000000000006CE13 add $0x88,%rsp
000000000006CE1A ret
000000000006CE1B jmp 0x000000000006CE0E

 Function call queue at function 6cd30: [69410]

Analyzing function at 69410
0000000000069410 sub $0x58,%rsp
0000000000069414 mov %rsi,(%rsp)
0000000000069418 mov %rdi,%rax
000000000006941B mov (%rsp),%rdi
000000000006941F mov %rax,8(%rsp)
0000000000069424 mov %rax,0x10(%rsp)
0000000000069429 call 0x0000000000089060
000000000006942E mov %rdx,0x18(%rsp)
0000000000069433 mov %rax,0x20(%rsp)
0000000000069438 jmp 0x0000000000069459
000000000006943A mov (%rsp),%rdi
000000000006943E lea 0xC6200,%rax
0000000000069445 call *%rax
0000000000069447 jmp 0x00000000000694C7
0000000000069449 mov %rax,%rcx
000000000006944C mov %edx,%eax
000000000006944E mov %rcx,0x48(%rsp)
0000000000069453 mov %eax,0x50(%rsp)
0000000000069457 jmp 0x000000000006943A
0000000000069459 mov 0x18(%rsp),%rdx
000000000006945E mov 0x20(%rsp),%rsi
0000000000069463 lea 0x28(%rsp),%rdi
0000000000069468 call 0x0000000000088E50
000000000006946D jmp 0x000000000006946F
000000000006946F mov 8(%rsp),%rdi
0000000000069474 lea 0x28(%rsp),%rsi
0000000000069479 call 0x0000000000082A40
000000000006947E jmp 0x00000000000694A0
0000000000069480 lea 0x1C9610,%rax
0000000000069487 lea 0x28(%rsp),%rdi
000000000006948C call *%rax
000000000006948E jmp 0x000000000006943A
0000000000069490 mov %rax,%rcx
0000000000069493 mov %edx,%eax
0000000000069495 mov %rcx,0x48(%rsp)
000000000006949A mov %eax,0x50(%rsp)
000000000006949E jmp 0x0000000000069480
00000000000694A0 lea 0x1C9610,%rax
00000000000694A7 lea 0x28(%rsp),%rdi
00000000000694AC call *%rax
00000000000694AE jmp 0x00000000000694BB
00000000000694B0 lea 0x2FBE0,%rax
00000000000694B7 call *%rax
00000000000694B9 ud2
00000000000694BB mov (%rsp),%rdi
00000000000694BF callq *0x315E60
00000000000694C5 jmp 0x00000000000694D3
00000000000694C7 mov 0x48(%rsp),%rdi
00000000000694CC call 0x000000000002E3D0
00000000000694D1 ud2
00000000000694D3 mov 0x10(%rsp),%rax
00000000000694D8 add $0x58,%rsp
00000000000694DC ret

 Function call queue at function 69410: []

Analyzing function at 8b7f0
000000000008B7F0 sub $0x58,%rsp
000000000008B7F4 mov %rdi,8(%rsp)
000000000008B7F9 mov %rdi,0x10(%rsp)
000000000008B7FE lea 0x18(%rsp),%rdi
000000000008B803 call 0x000000000006F090
000000000008B808 lea 0x30(%rsp),%rdi
000000000008B80D call 0x000000000006F090
000000000008B812 jmp 0x000000000008B834
000000000008B814 lea 0x1B10A0,%rax
000000000008B81B lea 0x18(%rsp),%rdi
000000000008B820 call *%rax
000000000008B822 jmp 0x000000000008B883
000000000008B824 mov %rax,%rcx
000000000008B827 mov %edx,%eax
000000000008B829 mov %rcx,0x48(%rsp)
000000000008B82E mov %eax,0x50(%rsp)
000000000008B832 jmp 0x000000000008B814
000000000008B834 mov 0x10(%rsp),%rax
000000000008B839 mov 8(%rsp),%rcx
000000000008B83E mov 0x18(%rsp),%rdx
000000000008B843 mov %rdx,(%rcx)
000000000008B846 mov 0x20(%rsp),%rdx
000000000008B84B mov %rdx,8(%rcx)
000000000008B84F mov 0x28(%rsp),%rdx
000000000008B854 mov %rdx,0x10(%rcx)
000000000008B858 mov 0x30(%rsp),%rdx
000000000008B85D mov %rdx,0x18(%rcx)
000000000008B861 mov 0x38(%rsp),%rdx
000000000008B866 mov %rdx,0x20(%rcx)
000000000008B86A mov 0x40(%rsp),%rdx
000000000008B86F mov %rdx,0x28(%rcx)
000000000008B873 add $0x58,%rsp
000000000008B877 ret

 Function call queue at function 8b7f0: [6f090]

Analyzing function at 6f090
000000000006F090 mov %rdi,%rax
000000000006F093 movq $0,(%rdi)
000000000006F09A ret

 Function call queue at function 6f090: []

Analyzing function at 9c8c0
000000000009C8C0 push %rax
000000000009C8C1 call 0x000000000009CC50
000000000009C8C6 pop %rax
000000000009C8C7 ret

 Function call queue at function 9c8c0: []

Analyzing function at 78590
0000000000078590 sub $0x138,%rsp
0000000000078597 mov %rsi,8(%rsp)
000000000007859C mov %rdi,0x10(%rsp)
00000000000785A1 mov %rdi,0x18(%rsp)
00000000000785A6 mov (%rsi),%rax
00000000000785A9 test %rax,%rax
00000000000785AC je 0x00000000000785B4
00000000000785AE jmp 0x00000000000785B0
00000000000785B0 jmp 0x0000000000078606
00000000000785B2 ud2
00000000000785B4 mov 8(%rsp),%rsi
00000000000785B9 add $8,%rsi
00000000000785BD lea 0x20(%rsp),%rdi
00000000000785C2 mov $0x38,%edx
00000000000785C7 call 0x000000000002E4B8
00000000000785CC lea 0x58(%rsp),%rdi
00000000000785D1 lea 0x20(%rsp),%rsi
00000000000785D6 mov $0x38,%edx
00000000000785DB call 0x000000000002E4B8
00000000000785E0 mov 0x10(%rsp),%rdi
00000000000785E5 add $8,%rdi
00000000000785E9 lea 0x58(%rsp),%rsi
00000000000785EE mov $0x38,%edx
00000000000785F3 call 0x000000000002E4B8
00000000000785F8 mov 0x10(%rsp),%rax
00000000000785FD movq $0,(%rax)
0000000000078604 jmp 0x000000000007867C
0000000000078606 mov 8(%rsp),%rsi
000000000007860B add $8,%rsi
000000000007860F lea 0x90(%rsp),%rdi
0000000000078617 mov $0x38,%edx
000000000007861C call 0x000000000002E4B8
0000000000078621 lea 0x100(%rsp),%rdi
0000000000078629 lea 0x90(%rsp),%rsi
0000000000078631 mov $0x38,%edx
0000000000078636 call 0x000000000002E4B8
000000000007863B lea 0xC8(%rsp),%rdi
0000000000078643 lea 0x100(%rsp),%rsi
000000000007864B mov $0x38,%edx
0000000000078650 call 0x000000000002E4B8
0000000000078655 mov 0x10(%rsp),%rdi
000000000007865A add $8,%rdi
000000000007865E lea 0xC8(%rsp),%rsi
0000000000078666 mov $0x38,%edx
000000000007866B call 0x000000000002E4B8
0000000000078670 mov 0x10(%rsp),%rax
0000000000078675 movq $1,(%rax)
000000000007867C mov 0x18(%rsp),%rax
0000000000078681 add $0x138,%rsp
0000000000078688 ret

 Function call queue at function 78590: []

Analyzing function at 9d040
000000000009D040 push %rax
000000000009D041 call 0x000000000009BC00
000000000009D046 pop %rax
000000000009D047 ret

 Function call queue at function 9d040: []
